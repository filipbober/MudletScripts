<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE MudletPackage>
<MudletPackage version="1.0">
    <HostPackage>
        <Host autoClearCommandLineAfterSend="no" disableAutoCompletion="no" printCommand="yes" USE_IRE_DRIVER_BUGFIX="yes" mUSE_FORCE_LF_AFTER_PROMPT="no" mUSE_UNIX_EOL="no" mNoAntiAlias="no" mRawStreamDump="no" mAlertOnNewData="yes" mFORCE_NO_COMPRESSION="no" mFORCE_GA_OFF="no" mFORCE_SAVE_ON_EXIT="no" mEnableGMCP="yes" mMapStrongHighlight="no" mLogStatus="yes" mEnableSpellCheck="yes" mShowInfo="no" mAcceptServerGUI="yes" mMapperUseAntiAlias="no" mFORCE_MXP_NEGOTIATION_OFF="no" mRoomSize="0.5" mLineSize="5" mBubbleMode="no" mShowRoomIDs="no" mShowPanel="no" mHaveMapperScript="no">
            <name>Barsawia</name>
            <mInstalledPackages>
                <string>deleteOldProfiles</string>
                <string>echo</string>
                <string>run-lua-code-v4</string>
                <string>v126</string>
                <string>`echo</string>
            </mInstalledPackages>
            <url>mud.barsawia.pl</url>
            <serverPackageName>nothing</serverPackageName>
            <serverPackageVersion>-1</serverPackageVersion>
            <port>23</port>
            <borderTopHeight>0</borderTopHeight>
            <borderBottomHeight>0</borderBottomHeight>
            <borderLeftWidth>0</borderLeftWidth>
            <borderRightWidth>0</borderRightWidth>
            <wrapAt>80</wrapAt>
            <wrapIndentCount>0</wrapIndentCount>
            <commandSeperator>;</commandSeperator>
            <mFgColor>#c0c0c0</mFgColor>
            <mBgColor>#000000</mBgColor>
            <mCommandFgColor>#717100</mCommandFgColor>
            <mCommandBgColor>#000000</mCommandBgColor>
            <mCommandLineFgColor>#808080</mCommandLineFgColor>
            <mCommandLineBgColor>#000000</mCommandLineBgColor>
            <mBlack>#000000</mBlack>
            <mLightBlack>#808080</mLightBlack>
            <mRed>#800000</mRed>
            <mLightRed>#ff0000</mLightRed>
            <mBlue>#000080</mBlue>
            <mLightBlue>#0000ff</mLightBlue>
            <mGreen>#00b300</mGreen>
            <mLightGreen>#00ff00</mLightGreen>
            <mYellow>#808000</mYellow>
            <mLightYellow>#ffff00</mLightYellow>
            <mCyan>#008080</mCyan>
            <mLightCyan>#00ffff</mLightCyan>
            <mMagenta>#800080</mMagenta>
            <mLightMagenta>#ff00ff</mLightMagenta>
            <mWhite>#c0c0c0</mWhite>
            <mLightWhite>#ffffff</mLightWhite>
            <mDisplayFont>Bitstream Vera Sans Mono,10,-1,5,2,0,0,0,1,0</mDisplayFont>
            <mCommandLineFont>Bitstream Vera Sans Mono,10,-1,5,2,0,0,0,0,0</mCommandLineFont>
            <mCommandSeparator>;</mCommandSeparator>
            <commandLineMinimumHeight>30</commandLineMinimumHeight>
            <mFgColor2>#c0c0c0</mFgColor2>
            <mBgColor2>#000000</mBgColor2>
            <mBlack2>#242424</mBlack2>
            <mLightBlack2>#808080</mLightBlack2>
            <mRed2>#800000</mRed2>
            <mLightRed2>#ff0000</mLightRed2>
            <mBlue2>#000080</mBlue2>
            <mLightBlue2>#0000ff</mLightBlue2>
            <mGreen2>#00b300</mGreen2>
            <mLightGreen2>#00ff00</mLightGreen2>
            <mYellow2>#808000</mYellow2>
            <mLightYellow2>#ffff00</mLightYellow2>
            <mCyan2>#008080</mCyan2>
            <mLightCyan2>#00ffff</mLightCyan2>
            <mMagenta2>#800080</mMagenta2>
            <mLightMagenta2>#ff00ff</mLightMagenta2>
            <mWhite2>#c0c0c0</mWhite2>
            <mLightWhite2>#ffffff</mLightWhite2>
            <mSpellDic>en_US</mSpellDic>
            <mLineSize>5</mLineSize>
            <mRoomSize>0.5</mRoomSize>
        </Host>
    </HostPackage>
    <TriggerPackage>
        <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
            <name>v126</name>
            <script></script>
            <triggerType>0</triggerType>
            <conditonLineDelta>0</conditonLineDelta>
            <mStayOpen>0</mStayOpen>
            <mCommand></mCommand>
            <packageName>v126</packageName>
            <mFgColor>#ff0000</mFgColor>
            <mBgColor>#ffff00</mBgColor>
            <mSoundFile></mSoundFile>
            <colorTriggerFgColor>#000000</colorTriggerFgColor>
            <colorTriggerBgColor>#000000</colorTriggerBgColor>
            <regexCodeList/>
            <regexCodePropertyList/>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Mining</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>kopalnia_zawal_warning</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile>F:/Users/BoberLive/.config/mudlet/profiles/Arkadia/Sounds/beep-01a.mp3</mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Nagle przez okolice przechodzi potezny wstrzas, zas z sufitu zaczynaja sypac sie odlamki skal!$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>wegiel</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#444444</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>brylke (wegla)</string>
                        <string>brylka (wegla)</string>
                        <string>brylek (wegla)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zelazo</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#aa5500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>brylke (zelaza)</string>
                        <string>brylka (zelaza)</string>
                        <string>brylek (zelaza)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zloto</name>
                    <script>
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#f4c430</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>brylke (zlota)</string>
                        <string>brylka (zlota)</string>
                        <string>brylek (zlota)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="yes" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>kopalnia_zawal_obok</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile>F:/Users/BoberLive/.config/mudlet/profiles/Arkadia/Sounds/beep-10_zawal_obok.mp3</mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(Nagle z sufitu osypuje sie gruz, calkowicie blokujac) (.*)!</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Combat_Highlighting</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zabiles</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#00ff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(Zabiles) (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zabil</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#00ff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.*) (umarl)\.$</string>
                        <string>^(.*) (umarla)\.$</string>
                        <string>^(.*) (zabil) (.*)\.$</string>
                        <string>^(.*) (zabila) (.*)\.$</string>
                        <string>^(.*) (polegl)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zrecznie_zaslaniasz</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#55aaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Zrecznie zaslaniasz .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zaslania_cie</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#aaff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* zaslania cie przed .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zaslania_kogos</name>
                    <script>-- look ahead assertion</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff5500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.* zrecznie zaslania ((?!cie).).* przed .*\.)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>probujesz_zaslonic</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffaaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^((&gt; )?Probujesz zaslonic .* przed ciosami .*, jednak nie jestes w stanie tego uczynic\.)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ktos_probuje_zaslonic_kogos</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff557f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.* probuje zaslonic ((?!cie).)* przed ciosami .*, jednak nie jest w stanie tego uczynic\.)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>probuje_zaslonic_cie</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#aaaaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* probuje zaslonic cie przed ciosami .*, jednak nie jest w stanie tego uczynic\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>wsp_juz_walczysz</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffaaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Juz walczysz z .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>wsp_wspierasz</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#55aaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Wspierasz .*$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ktos_wspiera_kogos</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff5500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.* wspiera ((?!cie).).* w walce .*\.)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ktos_wspiera_cie</name>
                    <script>--Hullio wspiera cie w walce z kanciastym nieforemnym golemem.</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#aaff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.* wspiera cie w walce .*\.)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>odciecie_ucieczki</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* przymierza sie do odciecia ci drogi ucieczki\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>uderzenie_tak_silne</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff5500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Uderzenie jest tak silne, .*$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>skuteczne_przelamanie</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#55aaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Rzucasz sie na .* przebijajac sie przez je..? ochrone\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>nieskuteczne_przelamanie</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffaaff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Bezskutecznie rzucasz sie na .*, probujac przebic sie przez je..? ochrone\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>weapon_armor_broken</name>
                    <script>cecho(&quot;&lt;red&gt;\nArmor or weapon broken!\n&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffaa00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* peka\!$</string>
                        <string>^.* rozpada sie\!$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Protected_Self</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>dodge</name>
                        <script>echo(&quot; [-&gt;Dodge]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* probujac trafic cie .*\.$</string>
                            <string>^.* lecz tobie udaje sie uniknac .*\.$</string>
                            <string>^.* nie udaje sie trafic ciebie .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>shield</name>
                        <script>echo(&quot; [-&gt;Shield]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* Walisz .* wiec momentalnie .*\.$</string>
                            <string>^.* lecz tobie udaje sie oslonic .*\.$</string>
                            <string>^.* lecz udaje ci sie oslonic .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>parry</name>
                        <script>echo(&quot; [-&gt;Parry]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* lecz tobie udaje sie .* zbic z linii ataku .*\.$</string>
                            <string>^.* lecz tobie udaje sie go sparowac .*\.$</string>
                            <string>^.* zamaszystym uderzeniem .* bitewnego odrzucasz .*\.$</string>
                            <string>^.* lecz tobie udaje sie zbic .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>armor</name>
                        <script>echo(&quot; [-&gt;Armor]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* trafia cie .* lecz caly impet uderzenia zostaje wyparowany .*\.$</string>
                            <string>^.* nie ma jednak dosc sily, by wyprowadzic cios zdolny przebic tw.*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Protected_Others</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>dodge</name>
                        <script>echo(&quot; [&lt;-Dodge]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Probujesz trafic .* lecz .* unika twojego ciosu\.$</string>
                            <string>^.* probujesz .* zwinnie unika ciosu\.$</string>
                            <string>^Zgrabny unik .* sprawia .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>shield</name>
                        <script>echo(&quot; [&lt;-Shield]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* lecz ten oslania sie w pore .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>parry</name>
                        <script>echo(&quot; [&lt;-Parry]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^.* lecz ten zbija je z linii ataku .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>armor</name>
                        <script>echo(&quot; [&lt;-Armor]&quot;)</script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#ffff00</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Trafiasz .* lecz caly impet uderzenia zostaje wyparowany przez .*\.$</string>
                            <string>^.*  lecz caly impet uderzenia zostaje zatrzymany .*\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>wytracenie</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffaa00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Szybkim niczym mysl.*$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Durbality</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Weapons</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_znakomitym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w znakomitym stanie)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_dobrym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff7f</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w dobrym stanie)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>liczne_walki_wyryly</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ffff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze (liczne walki wyryly na nim swoje pietno)\.$</string>
                            <string>^Wyglada na to, ze liczne walki wyryly na niej swoje pietno\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_zlym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff5500</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w zlym stanie)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_bardzo_zlym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w bardzo zlym stanie)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>wymaga_konserwacji</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#aa0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze (wymaga natychmiastowej konserwacji)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>moze_peknac</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#6f0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze (moze peknac w kazdej chwili)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Armor</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_znakomitym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w znakomitym stanie)\.$</string>
                            <string>^Wyglada na to, ze sa (w znakomitym stanie)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>lekko_podniszczona</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff7f</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (lekko podniszczona)\.$</string>
                            <string>^Wyglada na to, ze jest (lekko podniszczony)\.$</string>
                            <string>^Wyglada na to, ze sa (lekko podniszczone)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_kiepskim_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ffff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w kiepskim stanie).$</string>
                            <string>^Wyglada na to, ze sa (w kiepskim stanie).$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_oplakanym_stanie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (w oplakanym stanie).$</string>
                            <string>^Wyglada na to, ze sa (w oplakanym stanie).$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>gotowa_rozpasc_sie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#aa0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Wyglada na to, ze jest (gotowa rozpasc sie w kazdej chwili)\.$</string>
                            <string>^Wyglada na to, ze sa (gotowe rozpasc sie w kazdej chwili)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Eq</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>calkiem_nowy</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ten .* wyglada na (calkiem nowy)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_miare_nowy</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff7f</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ten .* wyglada na (w miare nowy)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>troche_zuzyty</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ffff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ten .* wyglada na (troche zuzyty)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_duzym_stopniu_zuzyty</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ten .* wyglada na (w duzym stopniu zuzyty)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>kompletnie_zuzyty</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#aa0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ten .* wyglada na (kompletnie zuzyty)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
                <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Clothes</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList/>
                    <regexCodePropertyList/>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>calkiem_nowe</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ubranie to zostalo .* i wyglada na (calkiem nowe)\.$</string>
                            <string>^Ubranie to wyglada na (calkiem nowe)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>w_miare_nowe</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#00ff7f</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ubranie to zostalo .* i wyglada na (w miare nowe)\.$</string>
                            <string>^Ubranie to wyglada na (w miare nowe)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>troche_znoszone</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ffff00</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ubranie to zostalo .* i wyglada na (troche znoszone)\.$</string>
                            <string>^Ubranie wyglada na (troche znoszone)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>prawie_calkiem_znoszone</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#ff0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ubranie to zostalo .* i wyglada na (prawie calkiem znoszone)\.$</string>
                            <string>^Ubranie wyglada na (prawie calkiem znoszone)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                    <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                        <name>gotowe_rozpasc_sie</name>
                        <script></script>
                        <triggerType>0</triggerType>
                        <conditonLineDelta>0</conditonLineDelta>
                        <mStayOpen>0</mStayOpen>
                        <mCommand></mCommand>
                        <packageName></packageName>
                        <mFgColor>#aa0000</mFgColor>
                        <mBgColor>#000000</mBgColor>
                        <mSoundFile></mSoundFile>
                        <colorTriggerFgColor>#000000</colorTriggerFgColor>
                        <colorTriggerBgColor>#000000</colorTriggerBgColor>
                        <regexCodeList>
                            <string>^Ubranie to zostalo .* i wyglada na (gotowe rozpasc sie w kazdej chwili)\.$</string>
                            <string>^Ubranie wyglada na (gotowe rozpasc sie w kazdej chwili)\.$</string>
                        </regexCodeList>
                        <regexCodePropertyList>
                            <integer>1</integer>
                            <integer>1</integer>
                        </regexCodePropertyList>
                    </Trigger>
                </TriggerGroup>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Utility</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>masz_nowa_poczte</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Masz nowa poczte od .*$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>oprozniasz_butelke</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Dopelniasz .*, oprozniajac zupelnie butelke oleju\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Transport</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>nawoluje</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* wola: (.*)$</string>
                        <string>^.* oznajmia gromkim glosem: (.*)$</string>
                        <string>^.* glos woznicy: (.*)$</string>
                        <string>^.*woznica krzyczy: (.*)$</string>
                        <string>^.* woznica krzyczy glosno: (.*)$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>urbimo_novigrad_statek</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Drzenie przebiega poklad, gdy okret przybija do brzegu przystani. Marynarze sprawnie cumuja go i wysuwaja na brzeg trap\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>tratwa_przybija</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Rzeczna tratwa przybija do brzegu\.$</string>
                        <string>^Tratwa odbija od brzegu\.$</string>
                        <string>^Rzeczna tratwa odbija od brzegu\.$</string>
                        <string>^Duzy solidny prom przybija do brzegu\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>tratwa_alimento</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Tratwa przybija do brzegu\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>prom_przybija</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Prom przybija do brzegu\.$</string>
                        <string>^Szeroki plaskodenny prom przybija do brzegu\.$</string>
                        <string>^Szeroki plaskodenny prom odbija od brzegu\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>dylizans_zatrzymuje</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* dylizans powoli zatrzymuje sie\.$</string>
                        <string>^Powoli pojazd zaczyna tracic predkosc, by po chwili zatrzymac sie\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Fishing</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>nagle_dostrzegasz</name>
                    <script>if __IS_FISHING_ON__ == false then
  return
end
local rnd = math.random (980,3283) * 0.001

cecho(&quot;\n&lt;yellow&gt;Rnd = &quot; .. rnd .. &quot;\n&lt;reset&gt;&quot;)

if rnd &gt; 3 then
  cecho(&quot;&lt;yellow&gt;Bonus time!\n&lt;reset&gt;&quot;)
  rnd = rnd + (math.random (211,1283) * 0.001)
  cecho(&quot;&lt;yellow&gt;Rnd = &quot; .. rnd .. &quot;\n&lt;reset&gt;&quot;)
end

if rnd &gt; 4 then
  cecho(&quot;&lt;yellow&gt;Additional bonus time!\n&lt;reset&gt;&quot;)
  rnd = rnd + (math.random (555,1888) * 0.001)
  cecho(&quot;&lt;yellow&gt;Rnd = &quot; .. rnd .. &quot;\n&lt;reset&gt;&quot;)
end



local deactivated = false

if __IS_FISHING_TRIGGER_ACTIVE__ == true then
  tempTimer( rnd, [[send(&quot;zatnij rybe na wedce&quot;)]] )
  
  __IS_FISHING_TRIGGER_ACTIVE__ = false
  deactivated = true
end

-- Activate the script again
if __IS_FISHING_TRIGGER_ACTIVE__ == false and deactivated == true then
  tempTimer( 60, [[__IS_FISHING_TRIGGER_ACTIVE__ = true]] )
end


</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff5500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Nagle dostrzegasz, ze zanurzony w wodzie sznurek .* wedki napina sie!$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>wyciagasz_zlapana_rybe</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#aaff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Wyciagasz zlapana rybe na powierzchnie.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Herbalism</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#00aa00</mFgColor>
                <mBgColor>#000000</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>mandragora</name>
                    <script>-- przezuj</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>bialy rozgaleziony korzen </string>
                        <string>biale rozgalezione korzenie</string>
                        <string>bialych rozgalezionych korzeni</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>dziurawiec</name>
                    <script>-- rozgryz</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>czterokanciasta rozgaleziona lodyga </string>
                        <string>czterokanciasta rozgaleziona lodyge</string>
                        <string>czterokanciaste rozgalezione lodygi</string>
                        <string>czterokanciastych rozgalezionych lodyg</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>przelot</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>kremowy owlosiony kwiat</string>
                        <string>kremowe owlosione kwiaty</string>
                        <string>kremowych owlosionych kwiatow</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>deliona</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>zolty jasny kwiat</string>
                        <string>zolte jasne kwiaty</string>
                        <string>zoltych jasnych kwiatow</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>przelot_ususzony</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>kremowy owlosiony ususzony kwiat</string>
                        <string>kremowe owlosione ususzone kwiaty</string>
                        <string>kremowych owlosionych ususzonych kwiatow</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>aesuryn</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>tajemnicze ciemnoniebieskie ziolo</string>
                        <string>tajemnicze ciemnoniebieskie ziola</string>
                        <string>tajemniczych ciemnoniebieckich ziol</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>kasztanowiec</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>kosmatoowlosiony kwiatostan</string>
                        <string>kosmatoowlosione kwiatostany</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>swietlik</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>drobna ukwiecona galazka </string>
                        <string>drobna ukwiecona galazke</string>
                        <string>drobne ukwiecone galazki</string>
                        <string>drobnych ukwieconych galazek</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>centuria</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>smukla jasnozielona lodyga </string>
                        <string>smukla jasnozielona lodyge</string>
                        <string>smukle jasnozielone lodygi</string>
                        <string>smuklych jasnozielonych lodyg</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ranog</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>zoltoszary niepozorny korzen</string>
                        <string>zoltoszare niepozorne korzenie</string>
                        <string>zoltoszarych niepozornych korzeni</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>identify_herb</name>
                    <script>local herb = matches[2]

local herbName = hbid.identify(herb)

echo(&quot; [&quot; .. herbName .. &quot;]&quot;)
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#00ff00</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Znajdujesz (\w+ \w+ ?\w+)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>nie_znajdujesz</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ffff7f</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Nie udalo ci sie znalezc niczego interesujacego\.$</string>
                        <string>^Szukasz wszedzie, ale nie znajdujesz zadnych ziol\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>komosa</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#005500</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>macznistoowlosiona szarawa roslina</string>
                        <string>macznistoowlosionej szarawej rosliny</string>
                        <string>macznistoowlosionej szarawej roslinie</string>
                        <string>macznistoowlosiona szarawa rosline</string>
                        <string>macznistoowlosiona szarawa roslina</string>
                        <string>macznistoowlosionej szarawej roslinie</string>
                        <string>macznistoowlosione szarawe rosliny</string>
                        <string>macznistoowlosionych szarawych roslin</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>comparison</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_sile_jestes</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele silniejszy&quot; then 
  result = 1
elseif str  == &quot;troche silniejszy&quot; then
  result = 2
elseif str  == &quot;silniejszy&quot; then
  result = 3
elseif str  == &quot;znacznie silniejszy&quot; then
  result = 4
elseif str  == &quot;duzo silniejszy&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;S:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;green&gt; [+&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jestes (.*silniejszy) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_zrecznosc_jestes</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele zreczniejszy&quot; then 
  result = 1
elseif str  == &quot;troche zreczniejszy&quot; then
  result = 2
elseif str  == &quot;zreczniejszy&quot; then
  result = 3
elseif str  == &quot;znacznie zreczniejszy&quot; then
  result = 4
elseif str  == &quot;duzo zreczniejszy&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;Z:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;green&gt; [+&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jestes (.*zreczniejszy) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_wytrzymalosc_jestes</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele lepiej zbudowany&quot; then 
  result = 1
elseif str  == &quot;troche lepiej zbudowany&quot; then
  result = 2
elseif str  == &quot;lepiej zbudowany&quot; then
  result = 3
elseif str  == &quot;znacznie lepiej zbudowany&quot; then
  result = 4
elseif str  == &quot;duzo lepiej zbudowany&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;W:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;green&gt; [+&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jestes (.*zbudowany) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_sile_jest</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele silniejszy&quot; or str == &quot;niewiele silniejsza&quot; then 
  result = 1
elseif str  == &quot;troche silniejszy&quot; or str == &quot;troche silniejsza&quot; then
  result = 2
elseif str  == &quot;silniejszy&quot; or str == &quot;silniejsza&quot; then
  result = 3
elseif str  == &quot;znacznie silniejszy&quot; or str == &quot;znacznie silniejsza&quot; then
  result = 4
elseif str  == &quot;duzo silniejszy&quot; or str == &quot;duzo silniejsza&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;S:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;red&gt; [-&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jest (.*silniejsz(y|a)) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_zrecznosc_jest</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele zreczniejszy&quot; or str == &quot;niewiele zreczniejsza&quot; then 
  result = 1
elseif str  == &quot;troche zreczniejszy&quot; or str == &quot;troche zreczniejsza&quot; then
  result = 2
elseif str  == &quot;zreczniejszy&quot; or str == &quot;silniejsza&quot; then
  result = 3
elseif str  == &quot;znacznie zreczniejszy&quot; or str == &quot;znacznie zreczniejsza&quot; then
  result = 4
elseif str  == &quot;duzo zreczniejszy&quot; or str == &quot;duzo zreczniejsza&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;Z:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;red&gt; [-&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jest (.*zreczniejsz(y|a)) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_wytrzymalosc_jest</name>
                    <script>local str = matches[2]
local result = 0

if str == &quot;niewiele lepiej zbudowany&quot; or str == &quot;niewiele lepiej zbudowana&quot; then 
  result = 1
elseif str  == &quot;troche lepiej zbudowany&quot; or str == &quot;troche lepiej zbudowana&quot; then  
  result = 2
elseif str  == &quot;lepiej zbudowany&quot; or str == &quot;lepiej zbudowana&quot; then
  result = 3
elseif str  == &quot;znacznie lepiej zbudowany&quot; or str == &quot;znacznie lepiej zbudowana&quot; then
  result = 4
elseif str  == &quot;duzo lepiej zbudowany&quot; or str == &quot;duzo lepiej zbudowana&quot; then
  result = 5
else
  result = 0
end

deleteLine()
echo(&quot;\n&quot;)
echo(&quot;W:&quot;)

if result == 0 then
  cecho(&quot;&lt;yellow&gt; [&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
else
  cecho(&quot;&lt;red&gt; [-&quot; .. result .. &quot;]&lt;reset&gt;&quot;)
end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.*, ze jest (.*zbudowan(y|a)) (niz|jak) .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_equal_dex</name>
                    <script>deleteLine()
echo(&quot;\n&quot;)
echo(&quot;Z:&quot;)
cecho(&quot;&lt;yellow&gt;\ [0]&lt;reset&gt;&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wydaje ci sie, ze jest rownie zreczn. jak ty\.$</string>
                        <string>^&gt;? ?Masz wrazenie, ze jest rownie zreczn. jak ty\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_equal_str</name>
                    <script>deleteLine()
echo(&quot;\n&quot;)
echo(&quot;S:&quot;)
cecho(&quot;&lt;yellow&gt;\ [0]&lt;reset&gt;&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wydaje ci sie, ze jest rownie siln. jak ty\.$</string>
                        <string>^&gt;? ?Masz wrazenie, ze jest rownie siln. jak ty\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>porownaj_equal_con</name>
                    <script>deleteLine()
echo(&quot;\n&quot;)
echo(&quot;W:&quot;)
cecho(&quot;&lt;yellow&gt;\ [0]&lt;reset&gt;&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wydaje ci sie, ze jest rownie wytrzymal. jak ty\.$</string>
                        <string>^&gt;? ?Masz wrazenie, ze jest rownie wytrzymal. jak ty\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Exp</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>gornictwo_up</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#5500ff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Masz wrazenie, ze twe umiejetnosci gornicze wzrosly nieznacznie.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>Postepy</name>
                    <script>-- Without brackets it would be just (\w+) highlighted

local timeStomp = getStopWatchTime(watches.progressWatch)

local seconds = math.floor(timeStomp % 60 )
local minutes = math.floor(((timeStomp - seconds) / 60) % 60)
local hours = math.floor((((timeStomp - seconds) /60 - minutes) / 60) % 60)

--setFgColor(85, 0, 255)
echo(&quot;\n[&quot; .. hours .. &quot;h &quot; .. minutes .. &quot;min &quot; .. seconds .. &quot;s&quot; .. &quot;]\n&quot;)
--resetFormat()

if __LAST_COMMAND__ == &quot;cechy&quot; then
  return
end

resetStopWatch(watches.progressWatch)
startStopWatch(watches.progressWatch)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#5500ff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Poczyniles .* postepy, od momentu kiedy wszedles do gry\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="yes" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>bestie_chaosu</name>
                    <script></script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#5500ff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Dowiadujesz sie czegos wiecej o .*\.$</string>
                        <string>^Wydaje ci sie, ze twoja wiedza o .* wzrosla .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Mapper</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>no_exit</name>
                    <script>--local moveCmd = List.popleft(__MOVE_CMD_LIST__)
echo(&quot; [Exit removed]&quot;)
List.popleft(__TMP_MOVE_CMD_LIST__)

--echo(&quot;\nCommand &quot; .. moveCmd .. &quot; was invalid and has been removed.\n&quot;)
--display(__TMP_MOVE_CMD_LIST__)
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Nie widzisz zadnego wyjscia prowadzacego na .*\.$</string>
                        <string>^&gt;? ?Ruszasz razno na .*, schodzac z wytyczonego traktu, jednak okazuje sie, ze nie dasz rady isc w tym kierunku\.$</string>
                        <string>^&gt;? ?Jestes tak zmeczony, ze nie mozesz dalej podazac w tym kierunku\.$</string>
                        <string>^&gt;? ?Jestes teraz zajety czyms innym. Musisz wpisac 'przestan' by moc zrobic to co chcesz\.$</string>
                        <string>^&gt;? ?Nie jestes w stanie wymknac sie stad niezauwazenie\.$</string>
                        <string>^&gt;? ?Po przejsciu paru krokow zauwazasz, ze majaczy przed toba potezna skalna sciana.Nie dasz rady podazyc w tym kierunku\.$</string>
                        <string>^&gt;? ?Nie mozesz sie tam udac, gdyz siedzisz\.$</string>
                        <string>^&gt;? ?Probujesz otworzyc .*, ale nie udaje ci sie to\.$</string>
                        <string>^&gt;? ?Jestes tak zmeczony, ze nie mozesz isc w tym kierunku\.$</string>
                        <string>^&gt;? ?Probujesz dostac sie do srodka willi,.*\.$</string>
                        <string>^&gt;? ?Podazasz traktem na poludniowy zachod, jednak w pewnym momencie natrafiasz na ustawiona na srodku drogi tabliczke\..*</string>
                        <string>^&gt;? ?Szarpiesz za drzwi, te jednak pozostaja zamkniete\.$</string>
                        <string>^&gt;? ?Gdzie chcesz zejsc\?$</string>
                        <string>^&gt;? ?Nie masz dalej wstepu\.$</string>
                        <string>^&gt;? ?Probujesz otworzyc .* lecz niestety, musza byc zaryglowane od srodka\.$</string>
                        <string>^&gt;? ?Drzwi do magazynu sa zamkniete\.$</string>
                        <string>^&gt;? ?Nie mozesz sie tam udac, gdyz (.*) wraz z kamratami blokuja ci droge na (.*).$</string>
                        <string>^&gt;? ?Nie mozesz sie tam udac, gdyz .* blokuje ci droge na .*\.$</string>
                        <string>^&gt;? ?Probujesz rozpaczliwie wspiac sie na gore, ale zeslizgujesz sie po mokrych kamieniach\.$</string>
                        <string>^&gt;? ?Droge zastepuje ci.*\.$</string>
                        <string>^&gt;? ?Jestes ogluszony i nie mozesz nic zrobic\.$</string>
                        <string>^&gt;? ?Nie mozesz tego robic w czasie medytacji\.$</string>
                        <string>^&gt;? ?Przejscie blokuje obalony pien\.$</string>
                        <string>^&gt;? ?Probujesz sie ruszyc na .*, jednak pajecze sieci, w ktore sie w miedzy czasie zaplatales, uniemozliwiaja ci to\.$</string>
                        <string>^&gt;? ?Ruszasz razno na.*, lecz po kilku krokach grzezniesz w krzakach\.$</string>
                        <string>&gt;? ?Probujesz sie ruszyc na .*, jednak pajecze sieci, w ktore sie w miedzyczasie zaplatales, uniemozliwiaja ci to\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>podazasz_za</name>
                    <script>if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;trigger Podozasz -&gt; received\n&quot;) end

local dir = matches[3]

--Ruszasz szybkim biegiem na polnocny-zachod. &lt;- przy komendzie idz ale nie tylko
if table.size(__TMP_MOVE_CMD_LIST__) &gt; 2 then
  return
end

rLstCmd.storeAsCommand(dir)
roomChanged()

-- if bugs -&gt; try to invoke roomChanged() manually


--Wraz z Hulliem, Thornsanem, Drachenem i Felsem podazasz za Chornikiem na wschod.
--Krypta.

--Wraz z Hulliem podazasz za Drachenem na polnoc.

--Podazasz za Hulliem na poludnie.

--Podazasz za kims na zachod.</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wraz z .* podazasz za .* (na|przez) (.*)\.$</string>
                        <string>^&gt;? ?Podazasz za .* (na|przez) (.*)\.$</string>
                        <string>^&gt;? ?Podazasz skradajac sie za .* (na|przez) (.*)\.$</string>
                        <string>^&gt;? ?Wraz z .* podazasz skradajac sie za .* (na|przez) (.*)\.$</string>
                        <string>^&gt;? ?Wraz z ( na|przez) (.)\.$</string>
                        <string>^&gt;? ?Wraz z .* podazasz za .* (na|przez) (.*) brodzac w mule\.$</string>
                        <string>^&gt;? ?Podazasz za .* (na|przez) (.*) brodzac w mule\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>idz_traktem</name>
                    <script>local dir = matches[2]

--Ruszasz szybkim biegiem na polnocny-zachod. &lt;- przy komendzie idz ale nie tylko
if __IS_GO_ACTIVATED__ == false then 
  return 
end

--if table.size(__TMP_MOVE_CMD_LIST__) &gt; 2 then
--  return
--end

rLstCmd.storeAsCommand(dir)
__IS_GO_ACTIVATED__ = false
roomChanged()

-- TODO... -- nie moze byc aktywne caly czas, bo normalne chodzenie po trakcie to tez
-- &quot;Ruszasz ..&quot;
--rLstCmd.storeAsCommand(dir)
--__IS_GO_ACTIVATED__ = false</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Ruszasz .* na (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>go_activated</name>
                    <script>__IS_GO_ACTIVATED__ = true</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wykonuje komende 'idz .*\'.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>go_aborted</name>
                    <script>__IS_GO_ACTIVATED__ = false</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Wykonywanie komendy 'idz' zostaje przerwane\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>no_exit_exit</name>
                    <script>if __LAST_COMMAND__ == &quot;wyjscie&quot; then
  List.popleft(__TMP_MOVE_CMD_LIST__)
end

</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Slucham\?$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ruszasz_w_droge</name>
                    <script>--__IS_GO_ACTIVATED__ = true</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Ruszasz .* w droge\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>idz_przerwane</name>
                    <script>__IS_GO_ACTIVATED__ = false</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Wykonywanie komendy 'idz' zostaje przerwane\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Eq_Assess_Table</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_state</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[3]

aeq.state = str</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Wyglada na to, ze (jest|sa|liczne) (.*)\.$</string>
                        <string>^Wyglada na to, (ze) (wymaga natychmiastowej konserwacji)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_name</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

aeq.reset()

if __IS_ASSESS_LINE_DELETE__ == true then
  __IS_ASSESS_DELETING__  = true
end

local str = matches[2]
aeq.name = str

--aeq.reset()
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Oceniasz starannie (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_armor_type</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[2]
aeq.armType = str

</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze jak na (\w+) zbroje .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>main_read_armor_protection</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[3]
local parry = matches[4]

if parry ~= nil then
  aeq.armType = &quot;tarcza&quot;
  parry = string.sub(parry, 1, -2)
  aeq.parry = parry
end

--cecho(&quot;&lt;red&gt;&quot; .. str)

local protectionTable = string.split(str, &quot; przed &quot;)

--table.contains(mmp.exitmap, lastCmd)

--local protectionLevel = protectionTable[1]

---------------
local splittedTable
local splittedTable2
local splittedTable3
local howWell
--local against2
local isFirst = true
local isProtectionLine = false
for k,v in ipairs(protectionTable) do
  splittedTable = string.split(v, &quot;, &quot;)

    for kk,vv in ipairs(splittedTable) do
      splittedTable2 = string.split(vv, &quot; i &quot;)

      for kkk,vvv in ipairs(splittedTable2) do
        splittedTable3 = string.split(vvv, &quot; oraz &quot;)

        for kkkk, vvvv in ipairs(splittedTable3) do

          if isFirst == true then 
            isFirst = false
            howWell = vvvv 
          else          

          if string.find(vvvv, &quot;klutymi&quot;) then 
            aeq.piercing = howWell           
            isProtectionLine = true            
          end
          if string.find(vvvv, &quot;cietymi&quot;) then 
            aeq.slashing = howWell
            isProtectionLine = true
          end
          if string.find(vvvv, &quot;obuchowymi&quot;) then 
            aeq.blunt = howWell 
            isProtectionLine = true
          end

          if isProtectionLine == false then
            howWell = vvvv
          end
        
          isProtectionLine = false

        end


        end

        --cecho(&quot;&lt;red&gt;Table vvv:\n&quot;)
        --display(vvv)

        --cecho(&quot;&lt;red&gt;Table splittedTable3:\n&quot;)
        --display(splittedTable3)


    end
  end
end

aeq.deleteLine()
aeq.printAll()



---------------



--local everySecond = 0
--local howWell = nil
--local against = nil
--local subtable
--for k,v in ipairs(protectionTable) do
--  subtable = string.split(v, &quot; oraz &quot;) 

--  for kk,vv in ipairs(subtable) do

    --subtable = string.split(v, &quot; i &quot;)
    --subtable = string.split(subtable, &quot; , &quot;)
    --display(subtable)
--    if everySecond % 2 == 0 then
--      howWell = vv
--      --echo(&quot;\nhowWell = &quot; .. howWell .. &quot;\n&quot;)
--    else
--      against = vv
--      --echo(&quot;against = &quot; .. against .. &quot;\n&quot;)

      -----
      -- We have howWell and against -&gt; we can save those values  
--      if string.find(against, &quot;klutymi&quot;) then aeq.piercing = howWell end
--      if string.find(against, &quot;cietymi&quot;) then aeq.slashing = howWell end
--      if string.find(against, &quot;obuchowymi&quot;) then aeq.blunt = howWell end
      -----
--    end

    
    
--    everySecond = everySecond + 1
--  end  
--end

--aeq.deleteLine()
--aeq.printAll()


</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze jak na .* zbroje chroni?. (on|ona|one) (.*)\.$</string>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze chroni (on.?) (.*)\. Ponadto jest (.*) w parowaniu ciosow\.$</string>
                        <string>^()()Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze jest on.? (.*) w parowaniu ciosow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_wg_vol_g_ml</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local wg = matches[2]
local vol = matches[3]

aeq.wg = wg
aeq.vol = vol

--__IS_ASSESS_DELETING__  = false

--if (__IS_ASSESS_LINE_DELETE__ == true) then
 -- deleteLine()
--end
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Oceniasz, ze .* waz. (\d+) gramow, zas je.* objetosc wynosi (\d+) mililitrow\.$</string>
                        <string>^Oceniasz, ze .* waz. (\d+) gramow, zas ich objetosc wynosi (\d+) mililitrow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_val</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local val = matches[2]

aeq.val = val

--__IS_ASSESS_DELETING__  = false

--if (__IS_ASSESS_LINE_DELETE__ == true) then
--  deleteLine()
--end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Wydaje ci sie, ze .* wart?. okolo (\d+) miedziakow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>main_assess_weapon</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local balance = matches[4]
local effectiveness = matches[3]
local balanceResult = 0
local effectivenessResult = 0

aeq.balance = balance
aeq.eff = string.sub(effectiveness, 1, -2)
aeq.armType = &quot;bron&quot;



if balance == &quot;wyjatkowo zle&quot; then 
  balanceResult = 1
elseif balance  == &quot;bardzo zle&quot; then
  balanceResult = 2
elseif balance  == &quot;zle&quot; then
  balanceResult = 3
elseif balance  == &quot;bardzo kiepsko&quot; then
  balanceResult = 4
elseif balance  == &quot;kiepsko&quot; then
  balanceResult = 5
elseif balance  == &quot;przyzwoicie&quot; then
  balanceResult = 6
elseif balance  == &quot;srednio&quot; then
  balanceResult = 7
elseif balance  == &quot;niezle&quot; then
  balanceResult = 8
elseif balance  == &quot;dosc dobrze&quot; then
  balanceResult = 9
elseif balance  == &quot;dobrze&quot; then
  balanceResult = 10
elseif balance  == &quot;bardzo dobrze&quot; then
  balanceResult = 11
elseif balance  == &quot;doskonale&quot; then
  balanceResult = 12
elseif balance  == &quot;perfekcyjnie&quot; then
  balanceResult = 13
elseif balance  == &quot;genialnie&quot; then
  balanceResult = 14
else
  result = 0
end

if string.findPattern(effectiveness, &quot;kompletnie nieskuteczn&quot;) then 
  effectivenessResult = 1
elseif string.findPattern(effectiveness, &quot;strasznie nieskuteczn&quot;) then
  effectivenessResult = 2
elseif string.findPattern(effectiveness, &quot;bardzo nieskuteczn&quot;) then
  effectivenessResult = 3
elseif string.findPattern(effectiveness, &quot;raczej nieskuteczn&quot;) then
  effectivenessResult = 4
elseif string.findPattern(effectiveness, &quot;malo skuteczn&quot;) then
  effectivenessResult = 5
elseif string.findPattern(effectiveness, &quot;niezbyt skuteczn&quot;) then
  effectivenessResult = 6
elseif string.findPattern(effectiveness, &quot;raczej skuteczn&quot;) then
  effectivenessResult = 7
elseif string.findPattern(effectiveness, &quot;dosyc skuteczn&quot;) then
  effectivenessResult = 8
elseif string.findPattern(effectiveness, &quot;calkiem skuteczn&quot;) then
  effectivenessResult = 9
elseif string.findPattern(effectiveness, &quot;bardzo skuteczn&quot;) then
  effectivenessResult = 10
elseif string.findPattern(effectiveness, &quot;niezwykle skuteczn&quot;) then
  effectivenessResult = 11
elseif string.findPattern(effectiveness, &quot;wyjatkowo skuteczn&quot;) then
  effectivenessResult = 12
elseif string.findPattern(effectiveness, &quot;zabojczo skuteczn&quot;) then
  effectivenessResult = 13
elseif string.findPattern(effectiveness, &quot;fantastycznie skuteczn&quot;) then
  effectivenessResult = 14
else
  result = 0
end

--echo(&quot;\n&quot;)

if balanceResult &lt; 4 then
  cecho (&quot;&lt;red&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif balanceResult &lt; 6 then
  cecho (&quot;&lt;orange_red&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif balanceResult &lt; 8 then
  cecho (&quot;&lt;orange&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif balanceResult &lt; 10 then
  cecho (&quot;&lt;yellow&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif balanceResult &lt; 12 then
  cecho (&quot;&lt;PaleGreen&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif balanceResult &lt; 14 then
  cecho (&quot;&lt;green&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
else
  cecho (&quot;&lt;purple&gt;[&quot; .. balanceResult .. &quot;/14]&lt;reset&gt;&quot;)
end

echo(&quot;, &quot;)

if effectivenessResult &lt; 4 then
  cecho (&quot;&lt;red&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif effectivenessResult &lt; 6 then
  cecho (&quot;&lt;orange_red&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif effectivenessResult &lt; 8 then
  cecho (&quot;&lt;orange&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif effectivenessResult &lt; 10 then
  cecho (&quot;&lt;yellow&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif effectivenessResult &lt; 12 then
  cecho (&quot;&lt;PaleGreen&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
elseif effectivenessResult &lt; 14 then
  cecho (&quot;&lt;green&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
else
  cecho (&quot;&lt;purple&gt;[&quot; .. effectivenessResult .. &quot;/14]&lt;reset&gt;&quot;)
end

aeq.deleteLine()
aeq.printAll()</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze jak na .* jest (on|ona|ono) (.*) wywazon. i (.*)\.$</string>
                        <string>^W Twojej ocenie .* jest (.*) oraz(.*) wywazon. jak na ten typ broni\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>assess_armor</name>
                    <script>local line = getCurrentLine()

local armorProtPatterns = { &quot;wyjatkowo zle&quot;, &quot;bardzo zle&quot;,
  &quot;zle&quot;, &quot;bardzo kiepsko&quot;, &quot;kiepsko&quot;, &quot;przyzwoicie&quot;, &quot;niezle&quot;,
  &quot;dosc dobrze&quot;, &quot;dobrze&quot;, &quot;bardzo dobrze&quot;, &quot;doskonale&quot;, &quot;perfekcyjnie&quot; }

local level1 = &quot;wyjatkowo zle&quot;
local level2 = &quot;bardzo zle&quot;
local level3 = &quot;zle&quot;
local level4 = &quot;bardzo kiepsko&quot;
local level5 = &quot;kiepsko&quot;
local level6 = &quot;przyzwoicie&quot;
local level7 = &quot;niezle&quot;
local level8 = &quot;dosc dobrze&quot;
local level9 = &quot;dobrze&quot;				-- after level10
local level10 = &quot;bardzo dobrze&quot;
local level11 = &quot;doskonale&quot;
local level12 = &quot;perfekcyjnie&quot;

if string.findPattern(line, level1) then
  local selection = selectString(level1, 1)
  fg(&quot;red&quot;)
  replace(level1 .. &quot; [1/12]&quot;)
elseif string.findPattern(line, level2) then
  local selection = selectString(level2, 1)
  fg(&quot;red&quot;)
  replace(level2 .. &quot; [2/12]&quot;)
elseif string.findPattern(line, level3) then
  local selection = selectString(level3, 1)
  fg(&quot;red&quot;)
  replace(level3 .. &quot; [3/12]&quot;)
elseif string.findPattern(line, level4) then
  local selection = selectString(level4, 1)
  fg(&quot;red&quot;)
  replace(level4 .. &quot; [4/12]&quot;)
elseif string.findPattern(line, level5) then
  local selection = selectString(level5, 1)
  fg(&quot;red&quot;)
  replace(level5 .. &quot; [5/12]&quot;)
elseif string.findPattern(line, level6) then
  local selection = selectString(level6, 1)
  fg(&quot;red&quot;)
  replace(level6 .. &quot; [6/12]&quot;)
elseif string.findPattern(line, level7) then
  local selection = selectString(level7, 1)
  fg(&quot;red&quot;)
  replace(level7 .. &quot; [7/12]&quot;)
elseif string.findPattern(line, level8) then
  local selection = selectString(level8, 1)
  fg(&quot;red&quot;)
  replace(level8 .. &quot; [8/12]&quot;)
elseif string.findPattern(line, level8) then
  local selection = selectString(level8, 1)
  fg(&quot;red&quot;)
  replace(level9 .. &quot; [9/12]&quot;)
elseif string.findPattern(line, level10) then
  local selection = selectString(level10, 1)
  fg(&quot;red&quot;)
  replace(level11 .. &quot; [11/12]&quot;)
elseif string.findPattern(line, level9) then		-- must be after level10
  local selection = selectString(level9, 1)
  fg(&quot;red&quot;)
  replace(level10 .. &quot; [10/12]&quot;)
elseif string.findPattern(line, level11) then
  local selection = selectString(level11, 1)
  fg(&quot;red&quot;)
  replace(level12 .. &quot; [12/12]&quot;)
elseif string.findPattern(line, level12) then
  local selection = selectString(level12, 1)
  fg(&quot;red&quot;)
  replace(level12 .. &quot; [0/12]&quot;)
end



--for word in line:gmatch(&quot;%w+&quot;) do 
  --if string.findPattern(line, &quot;klutymi&quot;) then
 -- if word == &quot;klutymi&quot; then
   -- local selection = selectString(&quot;klutymi&quot;, 1)
    --fg(&quot;red&quot;)
    --replace(&quot;klutymi&quot;)

--    string.find(line, &quot;klutymi&quot;)
--    line = string.sub(&quot;Hello Lua user&quot;, 7, 9)
--
--  end
--end



--local piercingLoc = string.find(line, &quot;klutymi&quot;)
--local slashingLoc = string.find(line, &quot;cietymi&quot;)
--local bluntLoc = string.find(line, &quot;obuchowymi&quot;)
--cecho(&quot;\n&lt;red&gt;Piercing: &quot; .. piercingLoc)
--cecho(&quot;\n&lt;red&gt;Slashing: &quot; .. slashingLoc)
--cecho(&quot;\n&lt;red&gt;Blunt: &quot; .. bluntLoc)

--local levelOne = string.find(line, &quot;doskonale&quot;)
--cecho(&quot;\n&lt;red&gt;LevelOne: &quot; .. levelOne)

--local levelOne = nil
--local levelTwo = nil
--local levelThree = nil
--local hlp = -1
--for i,v in ipairs(armorProtPatterns) do

--  if levelOne == nil then    
--    levelOne = string.find(line, v) 

--    if levelOne ~= nil then
--      cecho(&quot;&lt;red&gt;LevelOne = &quot; .. levelOne .. &quot;\n&quot;)           
--    end 
    
--  end


--  if levelOne ~= nil and levelTwo == nil then    
--    levelTwo = string.find(line, v) 
--    if levelTwo == levelOne then levelTwo = nil end
--    cecho(&quot;&lt;red&gt;Pattern = &quot; .. v .. &quot;\n&quot;)
--    if levelTwo ~= nil then
--      cecho(&quot;&lt;red&gt;LevelTwo = &quot; .. levelTwo .. &quot;\n&quot;)           
--    end 
    
--  end
--end





--print(&quot;Currently selected line:\n\n\n\n &quot;.. line)

--if string.findPattern(line, level11) then
--  local selection = selectString(level11, 1)
--  fg(&quot;red&quot;)
--  replace(level11 .. &quot; [0/12]&quot;)
--end

-- Find level
--local armorLevel = eqProtLvls.getProtection(eq)
--if string.findPattern(line, level11) then

--end

-- Assign level to protection


--local level
--local dmgType
--for word in line:gmatch(&quot;%w+&quot;) do 
--  if string.findPattern(line, level11
--end

--cecho(&quot;&lt;red&gt;\nInvoked!&quot;)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#5cff67</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze .* chroni .* przed obrazeniami .*\.$</string>
                        <string>^Twoje doswiadczenie i umiejetnosci podpowiadaja ci, ze ?.* chroni ona kiepsko przed obrazeniami .*\. Ponadto jest .* w parowaniu ciosow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_silver_weapon</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

aeq.ag = &quot;Ag&quot;</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Do wykonania tej broni uzyto srebra, bedzie wiec ona skuteczna przeciw wrogom odpornym na zwykle obrazenia\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>delete_line</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

--local str = matches[2]

--cecho(&quot;&lt;yellow&gt;&quot; .. str)

aeq.deleteLine()</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_wg_vol_kg_ml</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local wg = matches[2]
local vol = matches[3]

aeq.wg = (wg * 1000)
aeq.vol = vol
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Oceniasz, ze .* wazy (\d+) kilogramow, zas je.* objetosc wynosi (\d+) mililitrow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="no" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>zaklada_sie</name>
                    <script>--if (__IS_ASSESS_LINE_DELETE__ == true) then
--  deleteLine()
--end</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Zaklada sie ja na .*\.$</string>
                        <string>^Zalozon?. oslania .*\.$</string>
                        <string>^Zaklada sie go na .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_state_eq_gloves</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[2]
aeq.state = str


if str ~= nil then
  aeq.armType = &quot;ekw&quot;
end

aeq.printAll()
aeq.reset()
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Ten element ekwipunku wyglada na (.*)\.$</string>
                        <string>^Zaklada sie ja na dlonie\.$</string>
                        <string>^Ten .* zostal wykonany .* i wyglada na (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_state_clothes</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[2]
aeq.state = str


if str ~= nil then
  aeq.armType = &quot;ubranie&quot;
end

aeq.printAll()
aeq.reset()
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Ubranie .* wyglada na (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_2h_wpn</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

aeq.th = 1</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Zauwazasz, iz .* jest przystosowan. do chwytania oburacz\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>ocen_wszystko</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

if __IS_OCW_ACTIVE__ == true then
  __IS_ASSESS_LINE_DELETE__ = false
  __IS_OCW_ACTIVE__ = false
end

</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?Slucham\?$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_dmg_type</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[3]

if string.find(str, &quot;klute&quot;) then 
  aeq.wpnPiercing = true
end

if string.find(str, &quot;ciete&quot;) then 
  aeq.wpnSlashing = true
end

if string.find(str, &quot;obuchowe&quot;) then 
  aeq.wpnBlunt = true
end

</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#0000ff</mFgColor>
                    <mBgColor>#000000</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Za (jego|jej) pomoca mozna zadawac rany (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_wg_vol_kg_l</name>
                    <script>local wg = matches[2]
local vol = matches[3]

aeq.wg = (wg * 1000)
aeq.vol = (vol * 1000)</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Oceniasz, ze .* wazy (\d+) kilogram.*, zas je.* objetosc wynosi (\d+) litrow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>read_wg_vol_kg_ml</name>
                    <script>local wg = matches[2]
local vol = matches[3]

aeq.wg = (wg * 1000)
aeq.vol = vol</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^Oceniasz, ze .* wazy (\d+) kilogram.*, zas je.* objetosc wynosi (\d+) mililitrow\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Chasing_Following</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>chasing_uciekl_ci</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local str = matches[2]

__IS_CHASING__ = true
__CHASING_NAME__ = str

</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.*) uciekl ci\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>chasing_podaza_na</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

local name = matches[2]
local dir = matches[3]

-- TODO: move below line inside the if statement
battleCompass.runTable = { } 
table.insert(battleCompass.runTable, dir)
battleCompass.refreshLabels()

if __IS_CHASING__ == true and name == __CHASING_NAME__ then
  __CHASING__DIR__ = dir
end

__IS_FOLLOWING__ = true
__FOLLOWING_DIR__ = dir


--__IS_CHASING__ = false
--__CHASING__DIR__ = nil



--  __IS_CHASING__ = false
--  __CHASING_NAME__ = nil
--  __CHASING_DIR__ = nil</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^(.*) podaza na (.*)\.$</string>
                        <string>^(.*) podazaja na (.*)\.$</string>
                        <string>^(.*) w panice umyka na (.*)\.$</string>
                        <string>^&gt;? ?(.*) przemyka sie na (.*).</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>przybywa</name>
                    <script>-- Copyright 2015 Filip Cyrus Bober.
local dir = matches[2]

if dir == &quot;polnocy&quot; then
  dir = &quot;polnoc&quot;
elseif dir == &quot;polnocnego-wschodu&quot; then
  dir = &quot;polnocny-wschod&quot;
elseif dir == &quot;wschodu&quot; then
  dir = &quot;wschod&quot;
elseif dir == &quot;poludniowego-wschodu&quot; then
  dir = &quot;poludniowy-wschod&quot;
elseif dir == &quot;poludnia&quot; then
  dir = &quot;poludnie&quot;
elseif dir == &quot;poludniowego-zachodu&quot; then
  dir = &quot;poludniowy-zachod&quot;
elseif dir == &quot;zachodu&quot; then
  dir = &quot;zachod&quot;
elseif dir == &quot;polnocnego-zachodu&quot; then
  dir = &quot;polnocny-zachod&quot;
else 
 return
end



arrivalCompass.arrivalTable = { } 
table.insert(arrivalCompass.arrivalTable, dir)
arrivalCompass.refreshLabels()</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^.* przybywaja z (.*)\.$</string>
                        <string>^.* przybywaja ze (.*)\.$</string>
                        <string>^.* przybywa z (.*)\.$</string>
                        <string>^.* przybywa ze (.*)\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Herbs_Usable</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>herbs_under_attack</name>
                    <script>--tempTimer(2, [[ echo(&quot;hello!\n&quot;) ]])

herbsUsable.attacked = true</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>^&gt;? ?.* atakuje cie\!$</string>
                        <string>^&gt;? ?Atakujesz .*\.$</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
            <TriggerGroup isActive="yes" isFolder="yes" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                <name>Magic_Items</name>
                <script></script>
                <triggerType>0</triggerType>
                <conditonLineDelta>0</conditonLineDelta>
                <mStayOpen>0</mStayOpen>
                <mCommand></mCommand>
                <packageName></packageName>
                <mFgColor>#ff0000</mFgColor>
                <mBgColor>#ffff00</mBgColor>
                <mSoundFile></mSoundFile>
                <colorTriggerFgColor>#000000</colorTriggerFgColor>
                <colorTriggerBgColor>#000000</colorTriggerBgColor>
                <regexCodeList/>
                <regexCodePropertyList/>
                <Trigger isActive="yes" isFolder="no" isTempTrigger="no" isMultiline="no" isPerlSlashGOption="no" isColorizerTrigger="no" isFilterTrigger="no" isSoundTrigger="no" isColorTrigger="no" isColorTriggerFg="no" isColorTriggerBg="no">
                    <name>magic_items</name>
                    <script>local str = matches[2]

str = str.lower(str)

local match = nil
for key,value in pairs(magicItems.itemsTable) do 
  --print(key,value)   
  --echo(key .. &quot;, &quot; .. value .. &quot;\n&quot;)
  if selectString(value, 1) &gt; -1 then
    setFgColor(0, 85, 255)
    resetFormat()
  end

end

if selectString( &quot;cie&quot;, 1 ) &gt; -1 then
--fg( &quot;red&quot; )
--bg( &quot;blue&quot; )
--setFgColor(0, 85, 255)
resetFormat()

end
</script>
                    <triggerType>0</triggerType>
                    <conditonLineDelta>0</conditonLineDelta>
                    <mStayOpen>0</mStayOpen>
                    <mCommand></mCommand>
                    <packageName></packageName>
                    <mFgColor>#ff0000</mFgColor>
                    <mBgColor>#ffff00</mBgColor>
                    <mSoundFile></mSoundFile>
                    <colorTriggerFgColor>#000000</colorTriggerFgColor>
                    <colorTriggerBgColor>#000000</colorTriggerBgColor>
                    <regexCodeList>
                        <string>(.*)</string>
                    </regexCodeList>
                    <regexCodePropertyList>
                        <integer>1</integer>
                    </regexCodePropertyList>
                </Trigger>
            </TriggerGroup>
        </TriggerGroup>
    </TriggerPackage>
    <TimerPackage>
        <TimerGroup isActive="no" isFolder="yes" isTempTimer="no" isOffsetTimer="no">
            <name>v126</name>
            <script></script>
            <command></command>
            <packageName></packageName>
            <time>00:00:00.000</time>
        </TimerGroup>
    </TimerPackage>
    <AliasPackage>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>deleteOldProfiles</name>
            <script></script>
            <command></command>
            <packageName>deleteOldProfiles</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>delete old profiles</name>
                <script>deleteOldProfiles(matches[3], matches[2]==&quot;maps&quot;)

--Syntax examples: &quot;delete old profiles&quot;  -&gt; deletes profiles older than 31 days
--					&quot;delete old maps 10&quot;	-&gt; deletes maps older than 10 days</script>
                <command></command>
                <packageName></packageName>
                <regex>^delete old (profiles|maps)(?: (\d+))?$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>echo</name>
            <script></script>
            <command></command>
            <packageName>echo</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>`echo</name>
                <script>local s = matches[2]
cecho(&quot;&lt;yellow&gt;&quot; .. s .. &quot;\n&quot;)
feedTriggers(s)
--echo(&quot;end&quot;)
--s = string.gsub(s, &quot;%$&quot;, &quot;\n&quot;)
--feedTriggers(&quot;\n&quot; .. s .. &quot;\n&quot;)
--echo(&quot;\n&quot;)</script>
                <command></command>
                <packageName></packageName>
                <regex>`echo (.+)</regex>
            </Alias>
            <Alias isActive="yes" isFolder="no">
                <name>`echodir</name>
                <script>local dir = matches[2]
local s = &quot;Podazasz za kims na &quot;.. dir .. &quot;.\n&quot;
echo(s)
feedTriggers(s)</script>
                <command></command>
                <packageName></packageName>
                <regex>^`echodir (.*)$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>run-lua-code-v4</name>
            <script></script>
            <command></command>
            <packageName>run-lua-code-v4</packageName>
            <regex></regex>
            <Alias isActive="yes" isFolder="no">
                <name>run lua code</name>
                <script>local f,e = loadstring(&quot;return &quot;..matches[2])
if not f then
	f,e = assert(loadstring(matches[2]))
end

local r = f()
if r ~= nil then display(r) end</script>
                <command></command>
                <packageName></packageName>
                <regex>^lua (.*)$</regex>
            </Alias>
        </AliasGroup>
        <AliasGroup isActive="yes" isFolder="yes">
            <name>v126</name>
            <script></script>
            <command></command>
            <packageName>v126</packageName>
            <regex></regex>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>mapper</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>mapperTest</name>
                    <script>local areaName = &quot;Test_Area&quot;


echo(&quot;1. Creating new area\n&quot;)

echo(&quot;Getting area table\n&quot;)
local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
echo(&quot;Setting new id\n&quot;)
local newid = table.maxn(tr) + 1

echo(&quot;Setting area name\n&quot;)
setAreaName( newid, areaName )
echo(string.format(&quot;Created new area %s (%d)&quot;, areaName, newid))


echo(&quot;\n\n&quot;)

echo(&quot;2. Creating first room\n&quot;)
echo(&quot;Choosing room id\n&quot;)
usableId = createRoomID() 
echo(&quot;Room id = &quot; .. usableId .. &quot;\n&quot;)

local x = 1
local y = 1
local z = 0

echo(&quot;Adding room\n&quot;)
addRoom(usableId)
echo(&quot;Setting coordinates\n&quot;)
setRoomCoordinates(usableId, x, y, z)
echo(&quot;Setting room area\n&quot;)
setRoomArea(usableId, 1)
echo(&quot;Centering the view\n&quot;)
centerview(usableId)

echo(&quot;\n\n&quot;)

echo(&quot;3. Setting exit stubs\n&quot;)
setExitStub(usableId, 2, true) 



echo(&quot;Test successful\n&quot;)





</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mapper test$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>addKnownRoom</name>
                    <script>if __IS_MAPPING_MODE_ON__ == false then
  cecho(&quot;&lt;red&gt;Error: Mapping mode is on. Use m mapon to turn on the mapper.\n&lt;reset&gt;&quot;)
  return
end

if gmcp.room.info.map == nil then
  cecho(&quot;&lt;red&gt;There is no GMCP map data. Try to add this room manually\n&lt;reset&gt;&quot;)
  return
end

if __CURRENT_AREA_ID__ == nil then
  cecho(&quot;&lt;red&gt;Error: Current area is not set&lt;reset&gt;\n&quot;)
  return
end


local domain = string.lower(gmcp.room.info.map.domain)
local name = string.lower(gmcp.room.info.map.name)
local x  = tonumber(gmcp.room.info.map.x)
local y  = tonumber(gmcp.room.info.map.y)
local z = 0  -- for known map z is always 0
local offsetKeyX = domain .. &quot;_&quot; .. name .. &quot;_x&quot;
local offsetKeyY = domain .. &quot;_&quot; .. name .. &quot;_y&quot;

echo(&quot;offsetX = &quot; .. offsetKeyX .. &quot;\n&quot;)

if mmpOffsets.offsets[offsetKeyX] == nil then
  cecho(&quot;&lt;red&gt;Error: offset table does not contain a proper key\n&lt;reset&gt;&quot;)
  return
end 

--x = x + mmpOffsets.offsets[offsetKeyX]
--y = y + mmpOffsets.offsets[offsetKeyY]
x = mmpOffsets.knownToMapX(x, mmpOffsets.offsets[offsetKeyX])
y = mmpOffsets.knownToMapY(y, mmpOffsets.offsets[offsetKeyY])

echo(&quot;x = &quot; .. x .. &quot;\n&quot;)
echo(&quot;y = &quot; .. y .. &quot;\n&quot;)
echo(&quot;z = &quot; .. z .. &quot;\n&quot;)
echo(&quot;domain = &quot; .. domain .. &quot;\n&quot;)
echo(&quot;name = &quot; .. name .. &quot;\n&quot;)


local roomId = createRoomID()
--addRoom(roomId)
--setRoomCoordinates(roomId, x, y, z)
--setRoomArea(roomId, __CURRENT_AREA_ID__)

success = mmp.addRoom(__CURRENT_AREA_ID__, roomId, x, y, z)

if success == true then
  cecho(&quot;&lt;yellow&gt;Room added. Id = &quot; .. roomId .. &quot; (&quot; .. x .. &quot;, &quot; .. y .. &quot;, &quot; .. z .. &quot;)\n&lt;reset&gt;&quot;)
  __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__
  __CURRENT_ROOM_ID__  = roomId
  __LAST_AREA_ID__ = __CURRENT_AREA_ID__
  centerview(roomId)
else
  cecho(&quot;&lt;red&gt;Error: room was not added!\n&lt;reset&gt;&quot;)
end




</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addKnownRoom$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mapperOn</name>
                    <script>__IS_MAPPING_MODE_ON__ = true
cecho(&quot;&lt;yellow&gt;Mapper turned on\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m mapon$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mapperOff</name>
                    <script>__IS_MAPPING_MODE_ON__ = false
cecho(&quot;&lt;yellow&gt;Mapper turned off\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m mapoff$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>addRoom</name>
                    <script>if __IS_MAPPING_MODE_ON__ == false then
  cecho(&quot;&lt;red&gt;Error: Mapping mode is on. Use m mapon to turn on the mapper.\n&lt;reset&gt;&quot;)
  return
end

if __CURRENT_AREA_ID__ == nil then
  cecho(&quot;&lt;red&gt;Error: Current area is not set&lt;reset&gt;\n&quot;)
  return
end

local x = tonumber(matches[2])
local y = tonumber(matches[3])
local z = tonumber(matches[4])

local roomId = createRoomID()
--addRoom(roomId)
--setRoomCoordinates(roomId, x, y, z)
--setRoomArea(roomId, __CURRENT_AREA_ID__)

success = mmp.addRoom(__CURRENT_AREA_ID__, roomId, x, y, z)

if success == true then
  cecho(&quot;&lt;yellow&gt;Room added. Id = &quot; .. roomId .. &quot; (&quot; .. x .. &quot;, &quot; .. y .. &quot;, &quot; .. z .. &quot;)\n&lt;reset&gt;&quot;)
  __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__
  __CURRENT_ROOM_ID__  = roomId
  __LAST_AREA_ID__ = __CURRENT_AREA_ID__
  centerview(roomId)
else
  cecho(&quot;&lt;red&gt;Error: room was not added!\n&lt;reset&gt;&quot;)
end





</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>m addRoom (\-?\w+) (\-?\w+) (\-?\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>showAreas</name>
                    <script>display(getAreaTable())</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m showAreas$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>setCurrentArea</name>
                    <script>local areaName = matches[2]

local areaId, fullName = mmp.findAreaID(areaName)

if areaId == false then
  cecho(&quot;&lt;red&gt;Error: &quot; .. areaName .. &quot; does not exist\n&lt;reset&gt;&quot;)
  return
end


__CURRENT_AREA_ID__ = areaId

cecho(&quot;&lt;yellow&gt;Area Id = &quot; .. areaId .. &quot;, areaName = &quot; .. fullName .. &quot;\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m setCurrentArea (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>setCurrentRoomChar</name>
                    <script>local roomChar = matches[2]

if __IS_MAPPING_MODE_ON__ == false then
  cecho(&quot;&lt;red&gt;Error: Mapping mode is on. Use m mapon to turn on the mapper.\n&lt;reset&gt;&quot;)
  return
end

if __CURRENT_AREA_ID__ == nil then
  cecho(&quot;&lt;red&gt;Error: Current area is not set&lt;reset&gt;\n&quot;)
  return
end

if __CURRENT_ROOM_ID__ == nil then
  cecho(&quot;&lt;red&gt;Error: Current room is not set&lt;reset&gt;\n&quot;)
end

setRoomChar(__CURRENT_ROOM_ID__, roomChar)
centerview(__CURRENT_ROOM_ID__)

cecho(&quot;&lt;yellow&gt;Room character set&lt;reset&gt;\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m setCurrentRoomChar (\w)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>addArea</name>
                    <script>if __IS_MAPPING_MODE_ON__ == false then
  cecho(&quot;&lt;red&gt;Error: Mapping mode is on. Use m mapon to turn on the mapper.\n&lt;reset&gt;&quot;)
  return
end

local areaName = matches[2]





--local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
--local newid = table.maxn(tr) + 1

mmp.addArea(areaName)
cecho(&quot;&lt;yellow&gt;Created new area: &quot; .. areaName .. &quot;\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addArea (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>addVisibleExits</name>
                    <script>if __IS_MAPPING_MODE_ON__ == false then
  cecho(&quot;&lt;red&gt;Error: Mapping mode is on. Use m mapon to turn on the mapper.\n&lt;reset&gt;&quot;)
  return
end

if gmcp.room.info.exits == nil then
  cecho(&quot;&lt;red&gt;There is no GMCP map data. Try to add exits manually\n&lt;reset&gt;&quot;)
  return
end

if __CURRENT_AREA_ID__ == nil then
  cecho(&quot;&lt;red&gt;Error: Current area is not set&lt;reset&gt;\n&quot;)
  return
end

success = mmp.addVisibleExits(__CURRENT_ROOM_ID__)

if success == true then
  cecho(&quot;&lt;yellow&gt;Exit stubs added.&lt;reset&gt;\n&quot;)
  centerview(__CURRENT_ROOM_ID__)
else
  cecho(&quot;&lt;red&gt;Error: exit stubs not added!&lt;reset&gt;\n&quot;)
end
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addVisibleExits$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Combat</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>k_wszystkich</name>
                    <script>send(&quot;k wszystkich&quot;)

--local rnd2 = math.random(1, 100)
--if rnd2 &lt; 95 then
--  return
--end

--local rnd = math.random (1,100)

--if rnd &gt; 90 then
--  send(&quot;rozejrzyj sie uwaznie&quot;)
--elseif rnd &gt; 80 then
--  send(&quot;rozejrzyj sie szybko&quot;)
--elseif rnd &gt; 70 then
--  send(&quot;rozejrzyj sie blyskawicznie&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;rozejrzyj sie pobieznie&quot;)
--elseif rnd &gt; 50 then
--  send(&quot;rozejrzyj sie przelotnie&quot;)
--end

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^kw$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wesprzyj</name>
                    <script>send(&quot;wesprzyj&quot;)

--local rnd2 = math.random(1, 100)
--if rnd2 &lt; 99 then
--  return
--end

--local rnd = math.random(1,100)

--if rnd &gt; 95 then
--  send(&quot;usmiechnij sie walecznie&quot;)
--elseif rnd &gt; 85 then
--  send(&quot;usmiechnij sie zlowrogo&quot;)
--elseif rnd &gt; 85 then
--  send(&quot;usmiechnij sie krwiozerczo&quot;)
--elseif rnd &gt; 80 then
--  send(&quot;usmiechnij sie z ekscytacja&quot;)
--elseif rnd &gt; 75 then
--  send(&quot;usmiechnij sie krwiozerczo&quot;)
--elseif rnd &gt; 70 then
--  send(&quot;zazgrzytaj&quot;)
--elseif rnd &gt; 65 then
--  send(&quot;podskocz bojowo&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;usmiechnij sie srogo&quot;)
--elseif rnd &gt; 55 then
--  send(&quot;warknij groznie&quot;)
--elseif rnd &gt; 50 then
--  send(&quot;warknij bojowo&quot;)
--else  
  --send(&quot;warknij przenikliwie&quot;)
  --send(&quot;krzyknij bojowo&quot;)
--end

--zazgrzytaj
--usmiechnij sie walecznie

--z ekscytacja

-- todo: osobna, globalna funkcja bojowa</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wsp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przestan_zaslaniac</name>
                    <script>send(&quot;przestan zaslaniac&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pz$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zabij_cel_ataku</name>
                    <script>send(&quot;zabij cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zca$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wesprzyj_target</name>
                    <script>local target = matches[2]

send(&quot;wesprzyj &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wsp (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zaslon_target</name>
                    <script>local target = matches[2]

send(&quot;zaslon &quot; .. target)

local rnd2 = math.random(1, 100)
if rnd2 &lt; 99 then
  return
end

local rnd = math.random (1,100)

--if rnd &gt; 90 then
--  send(&quot;usmiechnij sie walecznie&quot;)
--elseif rnd &gt; 80 then
--  send(&quot;usmiechnij sie uspokajajaco do &quot; .. target)
--elseif rnd &gt; 70 then
--  send(&quot;zazgrzytaj&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;skin glowa na &quot; .. target)
--elseif rnd &gt; 50 then
  --send(&quot;mrugnij do &quot; .. target)
--  send(&quot;usmiechnij sie krzywo&quot;)
--elseif rnd &gt; 30 then
--  send(&quot;warknij cicho&quot;)
--elseif rnd &gt; 5 then
--  send(&quot;zazgrzytaj&quot;)
--else
--  send(&quot;gpzaslon &quot; .. target)
--end


--^zs (.*)$</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zs ((\w+)?(.*))$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zaslon_target_przed</name>
                    <script>--^zsp (.*) przed (.*)$

local target = matches[2]
local enemy = matches[3]

send(&quot;zaslon &quot; .. target .. &quot; przed &quot; .. enemy)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zs (.*) p (.*)$</regex>
                </Alias>
                <Alias isActive="no" isFolder="no">
                    <name>zaslon_target_przed_v2</name>
                    <script>local target = matches[2]
local enemy = matches[2]

--send(&quot;zaslon &quot; .. target .. &quot; przed &quot; .. enemy)
send(&quot;zaslon przed &quot; .. enemy)

local rnd = math.random (1,100)
local rnd2 = math.random (1,100)

if rnd &gt; 70 then
  send(&quot;usmiechnij sie walecznie&quot;)
elseif rnd &gt; 50 then
  send(&quot;usmiechnij sie uspokajajaco&quot;)
elseif rnd &gt; 30 then
  send(&quot;zazgrzytaj&quot;)
elseif rnd &gt; 20 then
  send(&quot;warknij cicho&quot;)
else  
  send(&quot;kopnij &quot;.. enemy)
end

--if rnd &gt; 70 then
--  send(&quot;popatrz przenikliwie na &quot; .. enemy)
--elseif rnd &gt; 50 then
--  send(&quot;warknij cicho na &quot; .. enemy)
--elseif rnd &gt; 30 then
--  send(&quot;popatrz nienawistnie na &quot; .. enemy)
--elseif rnd &gt; 5 then
--  send(&quot;zazgrzytaj&quot;)
--else  
--  send(&quot;popatrz opiekunczo na &quot; .. target)
--end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zsp (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wez_monety_z_ciala</name>
                    <script>send(&quot;wez monety&quot;)
send(&quot;wez monety z ciala&quot;)
send(&quot;wez monety z drugiego ciala&quot;)
send(&quot;wez monety z trzeciego ciala&quot;)
send(&quot;wez monety z czwartego ciala&quot;)
send(&quot;wez monety z piatego ciala&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wmc$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przelam_obrone</name>
                    <script>target = matches[2]

send(&quot;przestan kryc sie za zaslona&quot;)
send(&quot;przelam obrone &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pob (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przestan_kryc_sie</name>
                    <script>send(&quot;przestan kryc sie za zaslona&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pksz$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zabij</name>
                    <script>local target = matches[2]

send(&quot;zabij &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zb (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wskaz_przeciwnika</name>
                    <script>send(&quot;wskaz przeciwnika jako cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wcp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zaslon_przed_przeciwnikiem</name>
                    <script>send(&quot;zaslon przed przeciwnikiem&quot;)

--local rnd2 = math.random(1, 100)
--if rnd2 &lt; 99 then
--  return
--end

--local rnd = math.random (1,100)

--if rnd &gt; 80 then
--  send(&quot;usmiechnij sie walecznie&quot;)
--elseif rnd &gt; 70 then
--  send(&quot;usmiechnij sie uspokajajaco&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;zazgrzytaj&quot;)
--elseif rnd &gt; 50 then
--  send(&quot;usmiechnij sie groznie&quot;)
--end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zsp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zaslon_cel_obrony</name>
                    <script>send(&quot;zaslon cel obrony&quot;)

--local rnd2 = math.random(1, 100)
--if rnd2 &lt; 99 then
--  return
--end

--local rnd = math.random (1,100)

--if rnd &gt; 80 then
--  send(&quot;usmiechnij sie walecznie&quot;)
--elseif rnd &gt; 70 then
--  send(&quot;zazgrzytaj&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;usmiechnij sie uspokajajaco&quot;)
--elseif rnd &gt; 50 then
--  send(&quot;usmiechnij sie opiekunczo&quot;)
--end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zco$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zaslon_przed_kims</name>
                    <script>local enemy = matches[2]

send(&quot;zaslon przed &quot; .. enemy)

--local rnd2 = math.random(1, 100)
--if rnd2 &lt; 99 then
--  return
--end

--local rnd = math.random (1,100)

--if rnd &gt; 90 then
--  send(&quot;usmiechnij sie walecznie&quot;)
--elseif rnd &gt; 80 then
--  send(&quot;usmiechnij sie uspokajajaco&quot;)
--elseif rnd &gt; 70 then
--  send(&quot;zazgrzytaj&quot;)
--elseif rnd &gt; 60 then
--  send(&quot;warknij cicho&quot;)
--elseif rnd &gt; 50 then
--  send(&quot;kopnij &quot;.. enemy)
--end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zsp ((\w+)(.*)?)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wskaz_cel_ataku</name>
                    <script>local target = matches[2]

send(&quot;wskaz &quot; .. target .. &quot; jako cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wca (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przelam_obrone_celu_ataku</name>
                    <script>send(&quot;przestan kryc sie za zaslona&quot;)
send(&quot;przelam obrone celu ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pobt$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wskaz_i_zabij</name>
                    <script>local target = matches[2]

send(&quot;wskaz &quot; .. target .. &quot; jako cel ataku&quot;)
send(&quot;zabij &quot; .. target)

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wiz (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przelam_obrone</name>
                    <script>local target = matches[2]

send(&quot;przestan kryc sie za zaslona&quot;)
send(&quot;przelam obrone &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pob (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>obejrzyj_przeciwnika</name>
                    <script>send(&quot;obejrzyj przeciwnika&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^obp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>rozkaz_zaatakowac</name>
                    <script>local target = matches[2]
send(&quot;rozkaz druzynie zaatakowac &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^rda (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>rozkaz_zaatakowac_cel</name>
                    <script>send(&quot;rozkaz druzynie zaatakowac cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^rdat$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>rozkaz_druzynie_zaslonic</name>
                    <script>
-- rdz ciebie, gianne
local target = matches[2]
send(&quot;rozkaz druzynie zaslonic &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^rdz (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wskaz_cel_obrono</name>
                    <script>
--wsko siebie, gianne
local target = matches[2]
send(&quot;wskaz &quot; .. target .. &quot; jako cel obrony&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wsko (.*)$</regex>
                </Alias>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Weapons</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>dobadz_pierwszej_broni</name>
                        <script>send(&quot;dobadz broni&quot;)
--send(&quot;dobadz drugiej broni druga reka&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^dbh1$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>dobadz_drugiej_broni</name>
                        <script>send(&quot;dobadz drugiej broni druga reka&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^dbh2$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>opusc_bron</name>
                        <script>send(&quot;opusc druga bron&quot;)
send(&quot;opusc bron&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^opb$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>dobadz_z_p1</name>
                        <script>if scabbard.prof == 0 then
  send(&quot;podobadz broni z &quot; .. scabbard.oneCzego)
elseif scabbard.prof == 1 then
  send(&quot;powyjmij bron z &quot; .. scabbard.twoCzego)
  send(&quot;powyjmij bron z &quot; .. scabbard.oneCzego)

  send(&quot;dobadz broni&quot;)
  send(&quot;dobadz drugiej broni druga reka&quot;)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^dbp1$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>schowaj_p1</name>
                        <script>if scabbard.prof == 0 then
  send(&quot;poschowaj bron do &quot; .. scabbard.oneCzego)
elseif scabbard.prof == 1 then
  send(&quot;poschowaj bron do &quot; .. scabbard.oneCzego)
  send(&quot;poschowaj bron do &quot; .. scabbard.twoCzego)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^ops1$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>dobadz_z_p2</name>
                        <script>send(&quot;podobadz broni z &quot; .. scabbard.twoCzego)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^dbp2$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>schowaj_p1</name>
                        <script>send(&quot;poschowaj bron do &quot; .. scabbard.twoCzego)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^ops2$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>dobadz_broni</name>
                        <script>send(&quot;dobadz broni&quot;)
send(&quot;dobadz drugiej broni druga reka&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^db$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Armor</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>zdejmij_zbroje</name>
                        <script>send(&quot;otworz &quot; .. __CONTAINER_CO__)

send(&quot;zdejmij wszystkie zbroje&quot;)
send(&quot;wloz wszystkie zbroje do &quot; .. __CONTAINER__CZEGO__)

send(&quot;zamknij &quot; .. __CONTAINER_CO__)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^zdwz$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>zaloz_zbroje</name>
                        <script>send(&quot;otworz &quot; .. __CONTAINER_CO__)

send(&quot;wez wszystkie zbroje ze &quot; .. __CONTAINER__CZEGO__)
send(&quot;zaloz wszystkie zbroje&quot;)

send(&quot;zamknij &quot; .. __CONTAINER_CO__)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^zawz$</regex>
                    </Alias>
                </AliasGroup>
                <Alias isActive="yes" isFolder="no">
                    <name>rozkaz_komu_zaslonic_kogo</name>
                    <script>local targetOne = matches[2]
local targetTwo = matches[3]

send(&quot;rozkaz &quot; .. targetOne .. &quot; zaslonic &quot; .. targetTwo)

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^rkz (.*) (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>przelam_obrone_przeciwnika</name>
                    <script>send(&quot;przestan kryc sie za zaslona&quot;)
send(&quot;przelam obrone przeciwnika&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pobp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>ocen_przeciwnika</name>
                    <script>send(&quot;ocen przeciwnika&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ocp$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>utility</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>wejdz_na_statek</name>
                    <script>send(&quot;wejdz na statek&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ws$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zejdz_ze_statku</name>
                    <script>send(&quot;zejdz ze statku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zs$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>kup_bilet_i_wejdz_na_statek</name>
                    <script>send(&quot;otworz swoja sakiewke&quot;)
send(&quot;wez monety ze swojej sakiewki&quot;)
send(&quot;kup bilet&quot;)
send(&quot;wloz monety do swojej sakiewki&quot;)
send(&quot;zamknij swoja sakiewke&quot;)
send(&quot;wejdz na statek&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^kbw$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>napij_sie_z_buklaka</name>
                    <script>send(&quot;napij sie do syta z buklaka&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^npb$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>otworz_plecak</name>
                    <script>send(&quot;otworz swoj plecak&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^op$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zamknij_plecak</name>
                    <script>send(&quot;zamknij swoj plecak&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>napij_sie_do_syta</name>
                    <script>send(&quot;napij sie do syta&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^nps$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zejdz_po_drabinie</name>
                    <script>send(&quot;opusc bron&quot;)
send(&quot;zejdz po drabinie&quot;)
send(&quot;dobadz broni&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zpd$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wejdz_po_drabinie</name>
                    <script>send(&quot;opusc bron&quot;)
send(&quot;wejdz po drabinie&quot;)
send(&quot;dobadz broni&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wpd$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>napelnij_buklak_z</name>
                    <script>local target = matches[2]

send(&quot;napelnij buklak &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^npb (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wejdz_do_dylizansu</name>
                    <script>send(&quot;otworz swoja sakiewke&quot;)
send(&quot;wez monety ze swojej sakiewki&quot;)

send(&quot;wejdz do dylizansu&quot;)
send(&quot;wejdz do powozu&quot;)
send(&quot;wejdz do wozu&quot;)

send(&quot;wloz monety do swojej sakiewki&quot;)
send(&quot;zamknij swoja sakiewke&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wdd$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Repair</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>repair_all</name>
                    <script>send(&quot;otworz swoja sakiewke&quot;)
send(&quot;wez monety ze swojej sakiewki&quot;)

send(&quot;naostrz wszystkie bronie&quot;)

send(&quot;powyjmij bron z &quot; .. scabbard.oneCzego)
send(&quot;naostrz bron&quot;)
send(&quot;poschowaj bron do &quot; .. scabbard.oneCzego)

send(&quot;powyjmij bron z &quot; .. scabbard.twoCzego)
send(&quot;naostrz bron&quot;)
send(&quot;poschowaj bron do &quot; .. scabbard.twoCzego)

send(&quot;powyjmij bron z &quot; .. scabbard.threeCzego)
send(&quot;naostrz bron&quot;)
send(&quot;poschowaj bron do &quot; .. scabbard.threeCzego)

send(&quot;napraw wszystkie zbroje&quot;)


--send(&quot;naostrz bron&quot;)
--send(&quot;naostrz druga bron&quot;)

--send(&quot;napraw pierwsza zbroje&quot;)
--send(&quot;napraw druga zbroje&quot;)
--send(&quot;napraw trzecia zbroje&quot;)
--send(&quot;napraw czwarta zbroje&quot;)
--send(&quot;napraw piata zbroje&quot;)
--send(&quot;napraw szosta zbroje&quot;)
--send(&quot;napraw siodma zbroje&quot;)
--send(&quot;napraw osma zbroje&quot;)

send(&quot;wloz monety do swojej sakiewki&quot;)
send(&quot;zamknij swoja sakiewke&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^npw$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Mining</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>mining_fatigue_control_on</name>
                    <script>__IS__MINING__FATIGUE__STOP__ = true

cecho(&quot;&lt;yellow&gt;Fatigue controll is on.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mining fOn$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mining_fatigue_control_off</name>
                    <script>__IS__MINING__FATIGUE__STOP__ = false

cecho(&quot;&lt;yellow&gt;Fatigue controll is off.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mining fOff$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>sprzedaj_brylki_i_odloz</name>
                    <script>send(&quot;odloz brylki gruzu&quot;)

send(&quot;otworz swoj plecak&quot;)

send(&quot;wez brylki gruzu ze swojego plecaka&quot;)
send(&quot;odloz brylki gruzu&quot;)

send(&quot;wez brylki gruzu ze swojego plecaka&quot;)
send(&quot;odloz brylki gruzu&quot;)

send(&quot;wez brylki gruzu ze swojego plecaka&quot;)
send(&quot;odloz brylki gruzu&quot;)

send(&quot;wez brylki wegla ze swojego plecaka&quot;)
send(&quot;wez brylki zelaza ze swojego plecaka&quot;)

send(&quot;wloz brylki zlota do swojego plecaka&quot;)

send(&quot;sprzedaj brylki&quot;)

send(&quot;zamknij swoj plecak&quot;)

--

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^msb$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wez_brylki</name>
                    <script>send(&quot;wez brylki&quot;)

send(&quot;otworz swoj plecak&quot;)
send(&quot;wloz brylki do swojego plecaka&quot;)
send(&quot;zamknij plecak&quot;)

send(&quot;wez brylki&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mwb$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mining_on</name>
                    <script>__IS_MINING_ON__ = true
cecho(&quot;&lt;yellow&gt;Mining on.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mining on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mining_off</name>
                    <script>__IS_MINING_ON__ = false
cecho(&quot;&lt;yellow&gt;Mining off.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^mining off$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Fishing</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>fishing_on</name>
                    <script>__IS_FISHING_ON__ = true

cecho(&quot;&lt;yellow&gt;Fishing mode is on.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^fishing on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>fishing_off</name>
                    <script>__IS_FISHING_ON__ = false

cecho(&quot;&lt;yellow&gt;Fishing mode is off.\n&lt;reset&gt;&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^fishing off$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Herbalism</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>zajrzyj_do_woreczkow</name>
                    <script>send(&quot;zajrzyj do pierwszego woreczka&quot;)
send(&quot;zajrzyj do drugiego woreczka&quot;)
send(&quot;zajrzyj do trzeciego woreczka&quot;)
send(&quot;zajrzyj do czwartego woreczka&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zdw$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>ziola_do_sloika</name>
                    <script>send(&quot;otworz pierwszy sloik&quot;)
send(&quot;wloz ziola do  pierwszego sloika&quot;)
send(&quot;zamknij pierwszy sloik&quot;)

send(&quot;otworz drugi sloik&quot;)
send(&quot;wloz ziola do  drugiego sloika&quot;)
send(&quot;zamknij drugi sloik&quot;)

send(&quot;otworz trzeci sloik&quot;)
send(&quot;wloz ziola do  trzeciego sloika&quot;)
send(&quot;zamknij trzeci sloik&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ziola do sloika$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>sprzedaj_ziola</name>
                    <script>send(&quot;otworz sloik&quot;)
send(&quot;otworz drugi sloik&quot;)
send(&quot;otworz trzeci sloik&quot;)

send(&quot;wez ziola z pierwszego sloika&quot;)
send(&quot;wez ziola z drugiego sloika&quot;)
send(&quot;wez ziola z trzeciego sloika&quot;)

send(&quot;sprzedaj ziola&quot;)


send(&quot;zamknij sloiki&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^sprzedaj zebrane ziola$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>szukaj_ziol</name>
                    <script>send(&quot;szukaj ziol&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^sz$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zmien_woreczek</name>
                    <script>local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__

send(&quot;zamknij woreczki&quot;)
send(&quot;otworz &quot; .. container)

send(&quot;odtrocz pierwszy woreczek&quot;)
send(&quot;wloz pierwszy woreczek do &quot; .. containerTo)
send(&quot;wez otwarty woreczek z &quot; .. containerTo)
send(&quot;przytrocz woreczek&quot;)

send(&quot;zamknij &quot; .. container)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zmien woreczek$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zmien_drugi_woreczek</name>
                    <script>local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__


send(&quot;zamknij woreczki&quot;)
send(&quot;otworz &quot; .. container)

send(&quot;odtrocz drugi woreczek&quot;)
send(&quot;wloz drugi woreczek do &quot; .. containerTo)

send(&quot;odtrocz pierwszy woreczek&quot;)							-- w tym momencie jedyny
send(&quot;wloz pierwszy woreczek do &quot; .. containerTo)

send(&quot;wez otwarty woreczek z &quot; .. containerTo)  -- drugi woreczek
send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- pierwszy woreczek

send(&quot;przytrocz pierwszy woreczek&quot;)
send(&quot;przytrocz drugi woreczek&quot;)

send(&quot;zamknij &quot; .. container)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zmien drugi woreczek$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zmien_trzeci_woreczek</name>
                    <script>local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__


local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__


send(&quot;zamknij woreczki&quot;)
send(&quot;otworz &quot; .. container)

-- Zmieniany jako pierwszy, zeby w plecaku byl na dole
send(&quot;odtrocz trzeci woreczek&quot;)							-- trzeci woreczek
send(&quot;wloz trzeci woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- pierwszy woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- drugi woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- trzeci woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)

send(&quot;wez otwarty woreczek z &quot; .. containerTo)  -- trzeci woreczek
send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- drugi woreczek
send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- pierwszy woreczek

send(&quot;przytrocz pierwszy woreczek&quot;)
send(&quot;przytrocz drugi woreczek&quot;)
send(&quot;przytrocz trzeci woreczek&quot;)

send(&quot;zamknij &quot; .. container)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zmien trzeci woreczek$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zmien_czwarty_woreczek</name>
                    <script>local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__


local container = __CONTAINER_CO__
local containerTo = __CONTAINER__CZEGO__


send(&quot;zamknij woreczki&quot;)
send(&quot;otworz &quot; .. container)

send(&quot;odtrocz czwarty woreczek&quot;)							-- czwarty woreczek
send(&quot;wloz czwarty woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- pierwszy woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- drugi woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)

send(&quot;odtrocz woreczek&quot;)							-- trzeci woreczek
send(&quot;wloz woreczek do &quot; .. containerTo)


send(&quot;wez otwarty woreczek z &quot; .. containerTo)  -- czwarty woreczek
send(&quot;przytrocz woreczek&quot;)

send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- trzeci woreczek
send(&quot;przytrocz woreczek&quot;)

send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- drugi woreczek
send(&quot;przytrocz woreczek&quot;)

send(&quot;wez zamkniety woreczek z &quot; .. containerTo)  -- pierwszy woreczek
send(&quot;przytrocz woreczek&quot;)

send(&quot;zamknij &quot; .. container)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zmien czwarty woreczek$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Herb_Consumption</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>dziurawiec_heal</name>
                    <script>send(&quot;otworz pierwszy woreczek&quot;)
send(&quot;wez ziolo z pierwszego woreczka&quot;)
send(&quot;opusc bron&quot;)
send(&quot;rozgryz czterokanciasta lodyge&quot;)
send(&quot;dobadz broni&quot;)
send(&quot;wloz czterokanciaste rozgalezione lodygi do pierwszego woreczka&quot;)
send(&quot;zamknij pierwszy woreczek&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^heal hp$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Comparison</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>porownaj_cechy</name>
                    <script>local target = matches[2]

send(&quot;porownaj sile &quot; .. target)
send(&quot;porownaj zrecznosc &quot; .. target)
send(&quot;porownaj wytrzymalosc &quot; .. target)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pc (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>porownaj_z_przeciwnikiem</name>
                    <script>send(&quot;porownaj sile z przeciwnikiem&quot;)
send(&quot;porownaj zrecznosc z przeciwnikiem&quot;)
send(&quot;porownaj wytrzymalosc z przeciwnikiem&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^pcp$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>mapperNew</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>room_info</name>
                    <script>local roomId = __CURRENT_ROOM_ID__
if not roomExists(roomId) then 
  echo(&quot;Does not exist\n&quot;) 
  return
end

local x,y,z = getRoomCoordinates(roomId)
local areaId = getRoomArea(roomId) 
local areaName = getRoomAreaName(areaId) 

cecho(&quot;&lt;yellow&gt;CurrentRoomId = &quot; .. roomId ..&quot;\n&quot;)

cecho(&quot;&lt;yellow&gt;x = &quot; .. x .. &quot;\n&quot;)
  cecho(&quot;&lt;yellow&gt;y = &quot; .. y .. &quot;\n&quot;)
  cecho(&quot;&lt;yellow&gt;z = &quot; .. z .. &quot;\n&quot;)
  cecho(&quot;&lt;yellow&gt;area = &quot; .. areaName .. &quot;\n&quot;)

--cecho(&quot;&lt;yellow&gt;Exits: &quot; .. getRoomExits(__CURRENT_ROOM_ID__) .. &quot;\n&quot;)
local normalExits = getRoomExits(roomId)
local specialExits = getSpecialExits(roomId)

cecho(&quot;&lt;yellow&gt;Normal exits: \n&quot;)
display(normalExits)

cecho(&quot;&lt;yellow&gt;Special exits: \n&quot;)
display(specialExits)


</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m roomInfo$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>add_special_exit_from_to</name>
                    <script>local roomFromId = tonumber(matches[2])
local roomToId = tonumber(matches[3])
local exitCommand = matches[4]

cecho(&quot;roomFromId = &quot; .. roomFromId .. &quot;\n&quot;)
cecho(&quot;roomToId = &quot; .. roomToId .. &quot;\n&quot;)
cecho(&quot;exitCommand = &quot; .. exitCommand .. &quot;\n&quot;)

mmp.addSpecialExit(roomFromId, roomToId, exitCommand)

cecho(&quot;&lt;yellow&gt;Exit added\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addSpExitFromTo (\w+) (\w+) (\w+)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>add_spExit_previous_current</name>
                    <script>local roomFromId = __LAST_ROOM_ID__
local roomToId = __CURRENT_ROOM_ID__
local exitCommand = matches[2]

mmp.addSpecialExit(roomFromId, roomToId, exitCommand)

cecho(&quot;&lt;yellow&gt;Special exit added\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addSpExitPrevCurrent (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mapping_on</name>
                    <script>__IS_MAPPING_ON__ = true
echo(&quot;Mapping on\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mapping_off</name>
                    <script>__IS_MAPPING_ON__ = false
echo(&quot;Mapping off\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m off$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>painting_on</name>
                    <script>__IS_PAINTING_ON__ = true
echo(&quot;Painting on\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m pnt on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>painting_off</name>
                    <script>__IS_PAINTING_ON__ = false
echo(&quot;Painting off\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m pnt off$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>set_env_color</name>
                    <script>local color = matches[2]

if __IS_PAINTING_ON__ == false then
  __IS_PAINTING_ON__ = true
  cecho(&quot;&lt;yellow&gt;Painting on\n&quot;)
end

if table.contains(mmp.envColors, color) then
  __CURRENT_ENV_COLOR__ = mmp.envColors[color]
  cecho(&quot;&lt;yellow&gt;Color changed\n&quot;)
else
  cecho(&quot;&lt;yellow&gt;Given environment does not exist.\n&quot;)
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m env (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mark_room</name>
                    <script>local mark = matches[2]
local roomId = __CURRENT_ROOM_ID__
--echo(&quot;Mark = &quot; .. mark .. &quot;\n&quot;)
mmp.markRoom(roomId, mark)
cecho(&quot;&lt;yellow&gt;Room marked\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m mark (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>clear_queue</name>
                    <script>__CMD_LIST__ = nil --List.new() -- commands within one location
__MOVE_CMD_LIST__ = nil --List.new()
__TMP_MOVE_CMD_LIST__ = nil
__MOVEMENT_QUEUED__ = 0
cecho(&quot;&lt;yellow&gt;Queue cleared.\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m cq$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>unmark_room</name>
                    <script>local roomId = __CURRENT_ROOM_ID__
mmp.unmarkRoom(roomId)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m unmark$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>mark_char</name>
                    <script>local roomChar = matches[2]
setRoomChar(__CURRENT_ROOM_ID__, roomChar)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m markChar (\w)</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>exit_stubs_on</name>
                    <script>__IS_CONNECTING_STUBS__ = true
cecho(&quot;&lt;yellow&gt;Exits stubs on\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m stubs on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>exit_stubs_off</name>
                    <script>__IS_CONNECTING_STUBS__ = false
cecho(&quot;&lt;yellow&gt;Exits stubs off\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m stubs off$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>addExit</name>
                    <script>--m addExit e barak
local dir = matches[2]			-- sp exits are NESW on the map anyway
local exitCommand = matches[3]
local currentRoomId = __CURRENT_ROOM_ID__


--mmp.addExitDir(roomFromId, dir, exitCommand)
--mmp.addSpecialExit(roomFromId, roomToId, exitCommand)

setExitStub(currentRoomId, mmp.exitmap[dir], true)
mmp.addSpecialExitDir(currentRoomId, dir, exitCommand)
mmp.centerView(currentRoomId)
cecho(&quot;&lt;yellow&gt;Special exit added.\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addExit (n|ne|e|se|s|sw|w|nw|dol|gora|wyjscie|wejscie) (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>room_id</name>
                    <script>local roomId = __CURRENT_ROOM_ID__
if not roomExists(roomId) then 
  echo(&quot;Does not exist\n&quot;) 
  return
end

cecho(&quot;&lt;yellow&gt;roomId = &quot; .. roomId .. &quot;\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m roomId$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>user_data_add_route</name>
                    <script>--m addRoute ee 1,2,3,4,5

local dir = matches[2]
local commandString = matches[3]

--echo(&quot;Echo!&quot;)
echo(&quot;dir: &quot; .. dir .. &quot;\n&quot;)
echo(&quot;commands: &quot; .. commandString .. &quot;\n&quot;)


-- read commands from string
local commandTable = string.split(commandString, &quot;,&quot;)
for k,v in ipairs(commandTable) do
  echo(&quot;command &quot; .. k .. &quot;: &quot; .. v .. &quot;\n&quot;)
end

local currentRoomId = __CURRENT_ROOM_ID__
if currentRoomId == nil then
  echo(&quot;user_data_add_route error -&gt; current room id == nil\n&quot;)
  return
end

setRoomUserData(currentRoomId, &quot;exitScript&quot;.. dir, commandString)
cecho(&quot;&lt;yellow&gt;Route where dir = &quot; .. dir .. &quot; and commands = &quot; .. commandString .. &quot; added.\n&quot;)






--commandString = mmp.getExitScript(currentRoomId, dir)

--mmp.printExitScript(currentRoomId, dir)

--echo(&quot;Invoking exit script\n&quot;)
--mmp.invokeExitScript(commandString)
--echo(&quot;Exit script invoked\n&quot;)

--clearSpecialExits(currentRoomId)
--echo(&quot;Exits cleared\n&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m addRoute (n|ne|e|se|s|sw|w|nw|dol|gora|wyjscie|wejscie) (.*)$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>user_data_delete_routes</name>
                    <script>local currentRoomId = __CURRENT_ROOM_ID__
if currentRoomId == nil then
  echo(&quot;user_data_delete_routes -&gt; current room id == nil\n&quot;)
  return
end


clearRoomUserData(currentRoomId)
cecho(&quot;Routes cleared\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m delRoutes$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>routes_on</name>
                    <script>__IS_ROUTES_ON__ = true
cecho(&quot;&lt;yellow&gt;Routes on\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m routes on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>routes_off</name>
                    <script>__IS_ROUTES_ON__ = false
cecho(&quot;&lt;yellow&gt;Routes off\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m routes off$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>room_id</name>
                    <script>local roomId = __CURRENT_ROOM_ID__
if not roomExists(roomId) then 
  echo(&quot;Does not exist\n&quot;) 
  return
else
  echo(&quot;RoomId = &quot; .. roomId .. &quot;\n&quot;)
  local areaId = getRoomArea(roomId) 
  local areaName = getRoomAreaName(areaId)
  echo(&quot;AreaName = &quot; .. areaName .. &quot;\n&quot;)
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^m roomId$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Technical</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>ping</name>
                    <script>local ping = getNetworkLatency()
cecho(&quot;&lt;yellow&gt;Ping = &quot; .. ping .. &quot;\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ping$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Eq_Assess_Table</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>assess_short_on</name>
                    <script>__IS_ASSESS_LINE_DELETE__ = true
cecho(&quot;&lt;yellow&gt;Deleting obsolete lines on\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^assess short on$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>assess_short_off</name>
                    <script>__IS_ASSESS_LINE_DELETE__ = false
cecho(&quot;&lt;yellow&gt;Deleting obsolete lines off\n&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^assess short off$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>ocen_wszystko</name>
                    <script>-- If assess delete is active then ocw would work anyway
if __IS_ASSESS_LINE_DELETE__ == false then
  __IS_ASSESS_LINE_DELETE__ = true
  __IS_OCW_ACTIVE__ = true
end



send(&quot;ocen zalozone zbroje&quot;)
send(&quot;ocen dobyte bronie&quot;)
send(&quot;Slucham&quot;)

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ocw$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Say</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Druchii</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>khdorznij_cialo</name>
                        <script>send(&quot;khdorznij cialo&quot;)
send(&quot;khdorznij drugie cialo&quot;)
send(&quot;khdorznij trzecie cialo&quot;)
send(&quot;khdorznij czwarte cialo&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^khd$</regex>
                    </Alias>
                    <AliasGroup isActive="yes" isFolder="yes">
                        <name>druchii_say</name>
                        <script></script>
                        <command></command>
                        <packageName></packageName>
                        <regex></regex>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_normal</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 55 then
  send(&quot;ppowiedz zimno &quot; .. say)
elseif rnd &gt; 50 then
  send(&quot;ppowiedz zuchwale &quot; .. say)
elseif rnd &gt; 45 then
  send(&quot;ppowiedz zawadiacko &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz ozieble &quot; .. say)
elseif rnd &gt; 35 then
  send(&quot;ppowiedz arogancko &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz z usmieszkiem &quot; .. say)
elseif rnd &gt; 25 then
  send(&quot;ppowiedz z grymasem &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz proznie &quot; .. say)
elseif rnd &gt; 15 then
  send(&quot;ppowiedz wyniosle &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz z pycha &quot; .. say)
elseif rnd &gt; 5 then
  send(&quot;ppowiedz powoli &quot; .. say)
else
  send(&quot;ppowiedz drapieznie &quot; .. say)
end

-- 35%, 30%, 20%, 10%, 5%

--z niechecia

--wzgardliwie
-- z dystansem
--przeszywajaco
--szyderczo
-- olewczo
-- od niechcenia

--NormalCommunication:
--1. zimno
--2. wyniosle
--3. proznie 
--4. surowo
--5. z usmieszkiem


-- 1. zimno
-- 2. chlodno
-- 3. wyniosle
-- 4. cierpko
-- 5. zjadliwie
-- 6. zjadliwie
-- 7. 
-- 8. chlodno
-- 9. mrozaco
-- 10. lodowato

--LesserRaces:
-- 1. zimno
-- 2. wyniosle
-- 3. z niechecia
-- 4. nieprzychylnie
-- 5. cynicznie
-- 6. ironicznie
-- 7. z niesmakiem
-- 8. z niechecia
-- 9. z irytacja
-- 10. lekcewazaco
-- 11. mrozaco
-- 12. lodowato
-- wzgardliwie
--z politowaniem


--Enemies:
--z zawiscia
-- 1. lodowato
-- 2. arogancko
-- 3. drapieznie
-- 4. jadowicie
-- 5. kpiaco
-- 6. nienawistnie
-- 7. ze wzgarda
-- 8. z zawiscia
-- 9. morderczo
-- 10. drwiaco
-- 11. z kpina
-- 12. zlowieszczo

--FearedEnemies:
-- 1. ozieble
-- 2. czujnie
-- 3. badawczo
-- 4. lodowato
-- 5. dziwnie
-- 6. jadowicie
-- 7. nieufnie
-- 8. podejrzliwie
-- 9. przeciagle
-- 10. zwodniczo

--Friends:
-- 1. zimno
-- 2. ozieble
-- 3. 
-- 4. 
-- 5. wyniosle
-- 6. pewnie
-- 7. stanowczo
-- 8. 
-- 9. swobodnie
-- 10. melodyjnie

--Combat:
-- 1. agresywnie
-- 2. krwiozerczo
-- 3. drapieznie
-- 4. wojowniczo
-- 5. sadystycznie
-- 6. dramatycznie
-- 7. msciwie
-- 8. fatalistycznie
-- 9. euforycznie
-- 10. z satysfakcja
--11. bezwzglednie
--12. bezlitosnie
--13. okrutnie
--14. przez zeby
--15. porywczo
--16. z determinacja
--17. z pasja
--18. z wsciekloscia 
--19. z ekscytacja
--20. z radoscia 
--22. w skupieniu





























--NormalCommunication:
-- 1. zimno
-- 2. chlodno
-- 3. wyniosle
-- 4. cierpko
-- 5. zjadliwie
-- 6. zjadliwie
-- 7. 
-- 8. chlodno
-- 9. mrozaco
-- 10. lodowato

--LesserRaces:
-- 1. zimno
-- 2. wyniosle
-- 3. z niechecia
-- 4. nieprzychylnie
-- 5. cynicznie
-- 6. ironicznie
-- 7. z niesmakiem
-- 8. z niechecia
-- 9. z irytacja
-- 10. lekcewazaco
-- 11. mrozaco
-- 12. lodowato


--Enemies:
-- 1. lodowato
-- 2. arogancko
-- 3. drapieznie
-- 4. jadowicie
-- 5. kpiaco
-- 6. nienawistnie
-- 7. ze wzgarda
-- 8. z zawiscia
-- 9. morderczo
-- 10. drwiaco

--FearedEnemies:
-- 1. ozieble
-- 2. czujnie
-- 3. badawczo
-- 4. lodowato
-- 5. dziwnie
-- 6. jadowicie
-- 7. nieufnie
-- 8. podejrzliwie
-- 9. przeciagle
-- 10. zwodniczo

--Friends:
-- 1. zimno
-- 2. ozieble
-- 3. 
-- 4. 
-- 5. wyniosle
-- 6. pewnie
-- 7.
-- 8. 
-- 9. swobodnie
-- 10. melodyjnie

--Combat:
-- 1. agresywnie
-- 2. krwiozerczo
-- 3. drapieznie
-- 4. wojowniczo
-- 5. sadystycznie
-- 6. dramatycznie
-- 7. msciwie
-- 8. fatalistycznie
-- 9. euforycznie
-- 10. z satysfakcja
--11. bezwzglednie
--12. bezlitosnie
--13. okrutnie
--14. przez zeby
--15. porywczo
--16. z determinacja
--17. z pasja
--18. z wsciekloscia 
--19. z ekscytacja
--20. z radoscia 
--22. w skupieniu







































--NormalCommunication:
-- 1. zimno
-- 2.
-- 3. ozieble
-- 4.
-- 5. cynicznie
-- 6. 
-- 7. 
-- 8. 
-- 9. 
-- 10. 

--LesserRaces:
-- 1. zimno
-- 2.
-- 3. ozieble
-- 4.
-- 5. cynicznie
-- 6. z wyzszoscia
-- 7. niedbale
-- 8. lekcewazaco
-- 9. beznamietnie
-- 10. od niechcenia


--Enemies:
-- 1. lodowato
-- 2.
-- 3. z wyzszoscia
-- 4. jadowicie
-- 5. zlowrogo
-- 6. wyzywajoco
-- 7. ze wzgarda
-- 8. ironicznie
-- 9. kpiaco
-- 10. zawistnie

--FearedEnemies:
-- 1. lodowato
-- 2.
-- 3. z wyzszoscia
-- 4. jadowicie
-- 5. zlowrogo
-- 6. wyzywajoco
-- 7. ze wzgarda
-- 8. ironicznie
-- 9. kpiaco
-- 10. zawistnie

--Friends:
-- 1. 
-- 2.
-- 3. 
-- 4. hardo
-- 5. pewnie
-- 6. szorstko
-- 7.
-- 8.
-- 9.
-- 10.

--Combat:
-- 1. agresywnie
-- 2. krwiozerczo
-- 3. drapieznie
-- 4. wojowniczo
-- 5. sadystycznie
-- 6. dramatycznie
-- 7. msciwie
-- 8. fatalistycznie
-- 9. euforycznie
-- 10. z satysfakcja


















--dramatycznie
--krwiozerczo
--nienawistnie
--sadystycznie
--wojowniczo
--wsciekle
--z wsciekloscia
--zapalczywie
--z pasja
--z okrucienstwem
--zawziecie
--z fatalizmem
--zapalczywie
--z rozkosza

--zimno
--beznamietnie
--dumnie
--falszywie
--hardo
--jadowicie &lt;----
--kasliwie
--lekcewazoco
--kwasno
--pewnie
--proznie
--sarkastycznie
--sykliwie
--swobodnie
--tajemniczo
--zlowrogo
--zjadliwie
--z irytacja
--z przymusem

--z kpina
--olewczo
--przesmiewczo
--upokarzajaco
--z pogarda
--ze wstretem
--ze wzgarda
--wzgardliwie

--lodowato
--nienawistnie


</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^d'(.*)(?&lt;!\?)(?&lt;!\!)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_allies</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

--using look begind assertion

if rnd &gt; 75 then
  send(&quot;ppowiedz chlodno &quot; .. say)
elseif rnd &gt; 65 then
  send(&quot;ppowiedz zimno &quot; .. say)
elseif rnd &gt; 60 then
  send(&quot;ppowiedz zwiezle &quot; .. say)
elseif rnd &gt; 55 then
  send(&quot;ppowiedz pewnie &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz z dystansem &quot; .. say)
elseif rnd &gt; 35 then
  send(&quot;ppowiedz z usmieszkiem &quot; .. say)
elseif rnd &gt; 30 then  
  send(&quot;ppowiedz zuchwale &quot; .. say)
elseif rnd &gt; 25 then  
  send(&quot;ppowiedz wyniosle &quot; .. say)
elseif rnd &gt; 20 then  
  send(&quot;ppowiedz przeciagle &quot; .. say)
elseif rnd &gt; 15 then  
  send(&quot;ppowiedz arogancko &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz swobodnie &quot; .. say)
elseif rnd &gt; 5 then  
  send(&quot;ppowiedz stanowczo &quot; .. say)
else
  send(&quot;ppowiedz cicho &quot; .. say)
end

</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^da'(.*)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_normal_q</name>
                            <script>local say = matches[2] .. matches[3]

local rnd = math.random (1,100)


if rnd &gt; 50 then
  send(&quot;ppowiedz badawczo &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz zuchwale &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz z dystansem &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz podejrzliwie &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz z namyslem &quot; .. say)
else
  send(&quot;ppowiedz melodyjnie &quot; .. say)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^d'(.*)(\?)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_lesserRaces</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 70 then
  send(&quot;ppowiedz zimno &quot; .. say)
elseif rnd &gt; 60 then
  send(&quot;ppowiedz wyniosle &quot; .. say)
elseif rnd &gt; 50 then
  send(&quot;ppowiedz z wyzszoscia &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz z irytacja &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz z niechecia &quot; .. say)
elseif rnd &gt; 20 then  
  send(&quot;ppowiedz z niesmakiem &quot; .. say)
elseif rnd &gt; 15 then
  send(&quot;ppowiedz lekcewazaco &quot; .. say)
elseif rnd &gt; 10 then  
  send(&quot;ppowiedz z usmieszkiem &quot; .. say)
elseif rnd &gt; 5 then  
  send(&quot;ppowiedz cynicznie &quot; .. say)
elseif rnd &gt; 3 then  
  send(&quot;ppowiedz olewczo &quot; .. say)
elseif rnd &gt; 2 then  
  send(&quot;ppowiedz od niechcenia &quot; .. say)
else
  send(&quot;ppowiedz z politowaniem &quot; .. say)
end

</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^dl'(.*)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_enemies</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 60 then
  send(&quot;ppowiedz lodowato &quot; .. say)
elseif rnd &gt; 45 then
  send(&quot;ppowiedz jadowicie &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz nienawistnie &quot; .. say)
elseif rnd &gt; 35 then
  send(&quot;ppowiedz ze wzgarda &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz z zawiscia &quot; .. say)
elseif rnd &gt; 25 then  
  send(&quot;ppowiedz przeszywajaco &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz kpiaco &quot; .. say)
elseif rnd &gt; 15 then  
  send(&quot;ppowiedz z kpina &quot; .. say)
elseif rnd &gt; 10 then  
  send(&quot;ppowiedz szyderczo &quot; .. say)
elseif rnd &gt; 5 then  
  send(&quot;ppowiedz zlowieszczo &quot; .. say)
else
  send(&quot;ppowiedz cynicznie &quot; .. say)
end
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^de'(.*)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_fearedEnemies</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 85 then
  send(&quot;ppowiedz ozieble &quot; .. say)
elseif rnd &gt; 60 then
  send(&quot;ppowiedz podejrzliwie &quot; .. say)
elseif rnd &gt; 50 then
  send(&quot;ppowiedz badawczo &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz z rezerwa &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz z namyslem &quot; .. say)
elseif rnd &gt; 25 then  
  send(&quot;ppowiedz czujnie &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz zwodniczo &quot; .. say)
elseif rnd &gt; 15 then  
  send(&quot;ppowiedz z gotowoscia &quot; .. say)
elseif rnd &gt; 10 then  
  send(&quot;ppowiedz z przymusem &quot; .. say)
elseif rnd &gt; 5 then  
  send(&quot;ppowiedz dziwnie &quot; .. say)
else
  send(&quot;ppowiedz lodowato &quot; .. say)
end
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^df'(.*)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_combat</name>
                            <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 95 then
  --send(&quot;ppowiedz agresywnie &quot; .. say)
  send(&quot;krzyknij agresywnie &quot; .. say)
elseif rnd &gt; 90 then
  send(&quot;ppowiedz krwiozerczo &quot; .. say)
elseif rnd &gt; 85 then
  send(&quot;ppowiedz drapieznie &quot; .. say)
elseif rnd &gt; 80 then
  send(&quot;ppowiedz wojowniczo &quot; .. say)
elseif rnd &gt; 75 then
  send(&quot;ppowiedz sadystycznie &quot; .. say)
elseif rnd &gt; 70 then  
  send(&quot;ppowiedz dramatycznie &quot; .. say)
elseif rnd &gt; 65 then
  send(&quot;ppowiedz msciwie &quot; .. say)
elseif rnd &gt; 60 then  
  send(&quot;ppowiedz fatalistycznie &quot; .. say)
elseif rnd &gt; 55 then  
  send(&quot;ppowiedz euforycznie &quot; .. say)
elseif rnd &gt; 50 then  
  send(&quot;ppowiedz z satysfakcja &quot; .. say)
elseif rnd &gt; 45 then  
  send(&quot;ppowiedz bezwzglednie &quot; .. say)
elseif rnd &gt; 40 then  
  send(&quot;ppowiedz bezlitosnie &quot; .. say)
elseif rnd &gt; 35 then  
  send(&quot;ppowiedz okrutnie &quot; .. say)
elseif rnd &gt; 30 then  
  send(&quot;ppowiedz przez zeby &quot; .. say)
elseif rnd &gt; 25 then  
  send(&quot;ppowiedz porywczo &quot; .. say)
elseif rnd &gt; 20 then  
  send(&quot;ppowiedz z determinacja &quot; .. say)
elseif rnd &gt; 15 then  
  send(&quot;ppowiedz z pasja &quot; .. say)
elseif rnd &gt; 10 then  
  send(&quot;ppowiedz z wsciekloscia &quot; .. say)
elseif rnd &gt; 5 then  
  send(&quot;ppowiedz z ekscytacja &quot; .. say)
elseif rnd &gt; 4 then  
  send(&quot;ppowiedz z radoscia &quot; .. say)
elseif rnd &gt; 3 then  
  send(&quot;ppowiedz w skupieniu &quot; .. say)
else
  send(&quot;ppowiedz oblakanczo &quot; .. say)
end



--Combat:
-- 1. agresywnie
-- 2. krwiozerczo
-- 3. drapieznie
-- 4. wojowniczo
-- 5. sadystycznie
-- 6. dramatycznie
-- 7. msciwie
-- 8. fatalistycznie
-- 9. euforycznie
-- 10. z satysfakcja
--11. bezwzglednie
--12. bezlitosnie
--13. okrutnie
--14. przez zeby
--15. porywczo
--16. z determinacja
--17. z pasja
--18. z wsciekloscia 
--19. z ekscytacja
--20. z radoscia 
--22. w skupieniu
</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^dc'(.*)$</regex>
                        </Alias>
                        <Alias isActive="yes" isFolder="no">
                            <name>druchii_normal_o</name>
                            <script>local say = matches[2] .. matches[3]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz glosno &quot; .. say)  
elseif rnd &gt; 40 then
  send(&quot;ppowiedz gromko &quot; .. say)  
else  
  send(&quot;ppowiedz donosnie &quot; .. say)
end</script>
                            <command></command>
                            <packageName></packageName>
                            <regex>^d'(.*)(\!)$</regex>
                        </Alias>
                    </AliasGroup>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Asur_say</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_normal</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 70 then
  send(&quot;ppowiedz spokojnie &quot; .. say)  
elseif rnd &gt; 50 then
  send(&quot;ppowiedz powoli &quot; .. say)  
elseif rnd &gt; 45 then
  send(&quot;ppowiedz melodyjnie &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz dostojnie &quot; .. say)  
elseif rnd &gt; 35 then
  send(&quot;ppowiedz powaznie &quot; .. say) 
elseif rnd &gt; 30 then
  send(&quot;ppowiedz zdecydowanie &quot; .. say)
elseif rnd &gt; 25 then
  send(&quot;ppowiedz z namyslem &quot; .. say)
elseif rnd &gt; 22 then
  send(&quot;ppowiedz patetycznie &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz z rezerwa &quot; .. say)
elseif rnd &gt; 18 then
  send(&quot;ppowiedz z rozwaga &quot; .. say)
elseif rnd &gt; 16 then
  send(&quot;ppowiedz nobliwie &quot; .. say)
elseif rnd &gt; 14 then  
  send(&quot;ppowiedz podniosle &quot; .. say)
elseif rnd &gt; 12 then
  send(&quot;ppowiedz przekonujaco &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz z dystansem &quot; .. say)
elseif rnd &gt; 8 then
  send(&quot;ppowiedz surowo &quot; .. say)
elseif rnd &gt; 5 then
  send(&quot;ppowiedz wyniosle &quot; .. say)  
elseif rnd &gt; 4 then  
  send(&quot;ppowiedz szlachetnie &quot; .. say)
elseif rnd &gt; 3 then  
  send(&quot;ppowiedz wyrozumiale &quot; .. say)
elseif rnd &gt; 2 then  
  send(&quot;ppowiedz beznamietnie &quot; .. say)
else  
  send(&quot;ppowiedz denerwujaco &quot; .. say)
end

--podniosle
--z rezerwa
--wyrozumiale
--z rozwaga
-- z dystansem
--z namyslem

--?
--badawczo
--cierpliwie
--powaznie</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^h'(.*)(?&lt;!\?)(?&lt;!\!)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_normal_q</name>
                        <script>local say = matches[2] .. matches[3]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz spokojnie &quot; .. say)  
elseif rnd &gt; 60 then
  send(&quot;ppowiedz badawczo &quot; .. say)   
elseif rnd &gt; 50 then
  send(&quot;ppowiedz z zaciekawieniem &quot; .. say)  
elseif rnd &gt; 40 then
  send(&quot;ppowiedz przenikliwie &quot; .. say) 
elseif rnd &gt; 35 then
  send(&quot;ppowiedz z ciekawoscia &quot; .. say)
elseif rnd &gt; 30 then
  send(&quot;ppowiedz powoli &quot; .. say) 
elseif rnd &gt; 25 then
  send(&quot;ppowiedz wnikliwie &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz dociekliwie &quot; .. say)
elseif rnd &gt; 15 then
  send(&quot;ppowiedz melodyjnie &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz podejrzliwie &quot; .. say)  
elseif rnd &gt; 5 then
  send(&quot;ppowiedz cierpliwie &quot; .. say) 
elseif rnd &gt; 3 then
  send(&quot;ppowiedz nobliwie &quot; .. say)
else  
  send(&quot;ppowiedz denerwujaco &quot; .. say)
end

--przenikliwie
--z zaciekawieniem</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^h'(.*)(\?)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_allies</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 70 then
  send(&quot;ppowiedz spokojnie &quot; .. say)  
elseif rnd &gt; 30 then
  send(&quot;ppowiedz powoli &quot; .. say)  
elseif rnd &gt; 25 then
  send(&quot;ppowiedz melodyjnie &quot; .. say) 
elseif rnd &gt; 20 then
  send(&quot;ppowiedz powaznie &quot; .. say) 
elseif rnd &gt; 20 then
  send(&quot;ppowiedz zdecydowanie &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz z namyslem &quot; .. say)
elseif rnd &gt; 20 then
  send(&quot;ppowiedz z rozwaga &quot; .. say)
elseif rnd &gt; 15 then
  send(&quot;ppowiedz wyraznie &quot; .. say)  
elseif rnd &gt; 7 then
  send(&quot;ppowiedz swobodnie &quot; .. say)
elseif rnd &gt; 5 then
  send(&quot;ppowiedz pewnie &quot; .. say)  
elseif rnd &gt; 3 then  
  send(&quot;ppowiedz szlachetnie &quot; .. say)
elseif rnd &gt; 3 then  
  send(&quot;ppowiedz nobliwie &quot; .. say)  
else  
  send(&quot;ppowiedz z usmiechem &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^ha'(.*)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_enemies</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 70 then
  send(&quot;ppowiedz zimno &quot; .. say)  
elseif rnd &gt; 60 then
  send(&quot;ppowiedz przeszywajaco &quot; .. say)  
elseif rnd &gt; 50 then
  send(&quot;ppowiedz zlowieszczo &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz z niesmakiem &quot; .. say)  
elseif rnd &gt; 30 then
  send(&quot;ppowiedz chlodno &quot; .. say) 
elseif rnd &gt; 20 then
  send(&quot;ppowiedz powaznie &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz czujnie &quot; .. say)
elseif rnd &gt; 5 then
  send(&quot;ppowiedz badawczo &quot; .. say)
else  
  send(&quot;ppowiedz szlachetnie &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^he'(.*)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_combat</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz glosno &quot; .. say)  
elseif rnd &gt; 70 then
  send(&quot;ppowiedz dramatycznie &quot; .. say)
elseif rnd &gt; 60 then
  send(&quot;ppowiedz zdecydowanie &quot; .. say)  
elseif rnd &gt; 55 then
  send(&quot;ppowiedz gromko &quot; .. say) 
elseif rnd &gt; 50 then
  send(&quot;ppowiedz donosnie &quot; .. say)
elseif rnd &gt; 40 then
  send(&quot;ppowiedz bezwzglednie &quot; .. say)  
elseif rnd &gt; 30 then
  send(&quot;ppowiedz bezlitosnie &quot; .. say) 
elseif rnd &gt; 20 then
  send(&quot;ppowiedz wyraznie &quot; .. say)
elseif rnd &gt; 10 then
  send(&quot;ppowiedz morderczo &quot; .. say)
elseif rnd &gt; 5 then
  send(&quot;ppowiedz brawurowo &quot; .. say)
else
  send(&quot;ppowiedz przeszywajaco &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^hc'(.*)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>asur_normal_o</name>
                        <script>local say = matches[2] .. matches[3]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz glosno &quot; .. say)  
else  
  send(&quot;ppowiedz donosnie &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^h'(.*)(\!)$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Eltharis</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>eltharis_normal</name>
                        <script>local say = matches[2]

local rnd2 = math.random(1, 100)
if rnd2 &gt; 5 then
  send(&quot;ppowiedz melodyjnie &quot; .. say)  
  return
elseif rnd2 &gt; 4 then
  send(&quot;ppowiedz dzwiecznie &quot; .. say) 
  return
elseif rnd2 &gt; 3 then
  send(&quot;ppowiedz przekonujaco &quot; .. say) 
elseif rnd2 &gt; 1 then
  send(&quot;ppowiedz pretensjonalnie &quot; .. say) 
else

  local rnd = math.random (1,100)

  if rnd &gt; 80 then
    send(&quot;ppowiedz melodyjnie &quot; .. say)   
  elseif rnd &gt; 70 then
    send(&quot;ppowiedz dzwiecznie &quot; .. say)  
  elseif rnd &gt; 60 then
    send(&quot;ppowiedz przekonujaco &quot; .. say) 
  elseif rnd &gt; 55 then
    send(&quot;ppowiedz spokojnie &quot; .. say)
  elseif rnd &gt; 50 then
    send(&quot;ppowiedz plynnie &quot; .. say)
  elseif rnd &gt; 45 then
    send(&quot;ppowiedz pretensjonalnie &quot; .. say) 
  elseif rnd &gt; 40 then
    send(&quot;ppowiedz zdecydowanie &quot; .. say) 
  elseif rnd &gt; 35 then
    send(&quot;ppowiedz konkretnie &quot; .. say)
  elseif rnd &gt; 30 then
    send(&quot;ppowiedz z namyslem &quot; .. say) 
  elseif rnd &gt; 25 then
    send(&quot;ppowiedz plynnie &quot; .. say)
  elseif rnd &gt; 20 then
    send(&quot;ppowiedz dzwiecznie &quot; .. say) 
  elseif rnd &gt; 15 then
    send(&quot;ppowiedz dwornie &quot; .. say)
  elseif rnd &gt; 10 then
    send(&quot;ppowiedz energicznie &quot; .. say) 
  elseif rnd &gt; 5 then
    send(&quot;ppowiedz donosnie &quot; .. say) 
  elseif rnd &gt; 2 then
    send(&quot;ppowiedz beznamietnie &quot; .. say)
  else 
    send(&quot;ppowiedz szorstko &quot; .. say) 
  end

end
  
</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^e'(.*)(?&lt;!\?)(?&lt;!\!)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>eltharis_combat</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 60 then
  send(&quot;ppowiedz brawurowo &quot; .. say) 
elseif rnd &gt; 40 then
  send(&quot;ppowiedz drapieznie &quot; .. say)  
elseif rnd &gt; 20 then
  send(&quot;ppowiedz hardo &quot; .. say)  
else
  send(&quot;ppowiedz z ekscytacja &quot; .. say) 
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^ec'(.*)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>eltharis_normal_q</name>
                        <script>local say = matches[2] .. matches[3]

local rnd2 = math.random(1, 100)

if rnd2 &gt; 50 then
  send(&quot;ppowiedz przenikliwie &quot; .. say)  
  return
elseif rnd2 &gt; 10 then
  send(&quot;ppowiedz badawczo &quot; .. say)
  return
elseif rnd2 &gt; 2 then
   send(&quot;ppowiedz podejrzliwie &quot; .. say)
else

local rnd = math.random (1,100)

  if rnd &gt; 90 then
    send(&quot;ppowiedz spokojnie &quot; .. say)
  elseif rnd &gt; 80 then
    send(&quot;ppowiedz dociekliwie &quot; .. say)  
  elseif rnd &gt; 80 then
    send(&quot;ppowiedz pytajaco &quot; .. say) 
  elseif rnd &gt; 70 then
    send(&quot;ppowiedz w zadumie &quot; .. say)  
  elseif rnd &gt; 60 then
    send(&quot;ppowiedz badawczo &quot; .. say)   
  elseif rnd &gt; 50 then
    send(&quot;ppowiedz z zaciekawieniem &quot; .. say)  
  elseif rnd &gt; 40 then
    send(&quot;ppowiedz przenikliwie &quot; .. say) 
  elseif rnd &gt; 10 then
    send(&quot;ppowiedz z ciekawoscia &quot; .. say)
  elseif rnd &gt; 5 then
    send(&quot;ppowiedz podstepnie &quot; .. say)
  else
    send(&quot;ppowiedz podejrzliwie &quot; .. say)
  end

end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^e'(.*)(\?)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>eltharis_normal_o</name>
                        <script>local say = matches[2] .. matches[3]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz glosno &quot; .. say)  
else  
  send(&quot;ppowiedz donosnie &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^e'(.*)(\!)$</regex>
                    </Alias>
                </AliasGroup>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>Others</name>
                    <script></script>
                    <command></command>
                    <packageName></packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>obludnie</name>
                        <script>local say = matches[2]

local rnd = math.random (1,100)

if rnd &gt; 80 then
  send(&quot;ppowiedz makiawelicznie &quot; .. say)    
elseif rnd &gt; 40 then
  send(&quot;ppowiedz falszywie &quot; .. say) 
elseif rnd &gt; 10 then
  send(&quot;ppowiedz falszywie &quot; .. say)
else 
  send(&quot;ppowiedz klamliwie &quot; .. say)
end</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^o'(.*)$</regex>
                    </Alias>
                    <Alias isActive="yes" isFolder="no">
                        <name>cicho</name>
                        <script>local say = matches[2]
send(&quot;ppowiedz cicho &quot; .. say)  </script>
                        <command></command>
                        <packageName></packageName>
                        <regex>^w'(.*)$</regex>
                    </Alias>
                </AliasGroup>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Time</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>show_time</name>
                    <script>--echo(getTime(true, &quot;hh:mm:ss&quot;))
--echo(getTime(true, &quot;ss&quot;)) 

--watch = watch or createStopWatch()
--startStopWatch(watch)

--time = getStopWatchTime(watch)
--print(&quot;The code took: &quot;..stopStopWatch(watch)..&quot;s to run.&quot;)
--print(&quot;time [s] = &quot; .. time)
--print(time/60)
--shms(tonumber(time), true)

--startStopWatch(watch)

--currenttimestop = getStopWatchTime(getTimestamp(getLineCount()))



--watches.herbsWatch = watches.herbsWatch or createStopWatch()
--startStopWatch(watches.herbsWatch)

--local time = getStopWatchTime(watches.herbsWatch)

--echo(&quot;Herbs timer = &quot; .. time .. &quot;\n&quot;)
--resetStopWatch(watches.herbsWatch)
--startStopWatch(watches.herbsWatch)

cecho(&quot;&lt;DarkOrchid&gt; This is the color.\n&quot;)
setFgColor(85, 0, 255)
echo(&quot;This is the new color\n&quot;)
--local r,g,b = unpack(color_table.Foreground)
--setFgColor(r, g, b)
resetFormat()
echo(&quot;This is the new color\n&quot;)

</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^time$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Golemy</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>przeszukaj_pancerz</name>
                    <script>send(&quot;odloz pancerz&quot;)
send(&quot;wez pancerz z plecaka&quot;)
send(&quot;przeszukaj pancerz&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ppan$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wspzs</name>
                    <script>send(&quot;wesprzyj&quot;)
send(&quot;zaslon konstantyna&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wspz$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>wez_pancerz_i_daj</name>
                    <script>send(&quot;wez pancerz&quot;)
send(&quot;daj pancerz rafghalowi&quot;)

--send(&quot;wez pancerz&quot;)
--send(&quot;wloz pancerz do plecaka&quot;)

send(&quot;wesprzyj&quot;)
send(&quot;zabij cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^wpid$</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Exp</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <Alias isActive="yes" isFolder="no">
                    <name>orki_bez_snotlinga</name>
                    <script>send(&quot;zabij drugiego goblina&quot;)
send(&quot;zabij trzeciego goblina&quot;)
send(&quot;zabij czwartego goblina&quot;)
send(&quot;zabij orka&quot;)
send(&quot;zabij drugiego orka&quot;)
send(&quot;zabij trzeciego orka&quot;)
send(&quot;zabij goblina&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ork exp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>orki_ze_snotlingiem</name>
                    <script>-- Kolejnosc taka jaka powinna byc i na koncu ustawienie pierwszego celu

send(&quot;zabij drugiego snotlinga&quot;)
send(&quot;zabij trzeciego snotlinga&quot;)
send(&quot;zabij czwartego snotlinga&quot;)
send(&quot;zabij goblina&quot;)
send(&quot;zabij drugiego goblina&quot;)
send(&quot;zabij trzeciego goblina&quot;)
send(&quot;zabij czwartego goblina&quot;)
send(&quot;zabij orka&quot;)
send(&quot;zabij drugiego orka&quot;)
send(&quot;zabij trzeciego orka&quot;)
send(&quot;zabij snotlinga&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^ork exp snt$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>snotlingi_boss</name>
                    <script>send(&quot;zabij drugiego snotlinga&quot;)
send(&quot;zabij trzeciego snotlinga&quot;)
send(&quot;zabij czwartego snotlinga&quot;)
send(&quot;zabij pierwszego snotlinga&quot;)
send(&quot;zabij drugiego snotlinga&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^snot exp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>zjawy</name>
                    <script>send(&quot;zabij zjawe&quot;)
send(&quot;zabij druga zjawe&quot;)
send(&quot;zabij trzecia zjawe&quot;)
send(&quot;zabij czwarta zjawe&quot;)
send(&quot;zabij piata zjawe&quot;)
send(&quot;zabij zjawe&quot;)
send(&quot;wskaz zjawe jako cel ataku&quot;)
</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^zjawa exp$</regex>
                </Alias>
                <Alias isActive="yes" isFolder="no">
                    <name>golem_aggro</name>
                    <script>send(&quot;zabij pierwszego golema&quot;)
send(&quot;zabij drugiego golema&quot;)
send(&quot;zabij trzeciego golema&quot;)
send(&quot;zabij czwartego golema&quot;)
send(&quot;zabij pierwszego golema&quot;)

send(&quot;zaslon przed trzecim golemem&quot;)
send(&quot;wesprzyj&quot;)
send(&quot;zabij cel ataku&quot;)</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>golem exp</regex>
                </Alias>
            </AliasGroup>
            <AliasGroup isActive="yes" isFolder="yes">
                <name>Performance</name>
                <script></script>
                <command></command>
                <packageName></packageName>
                <regex></regex>
                <AliasGroup isActive="yes" isFolder="yes">
                    <name>`echo</name>
                    <script></script>
                    <command></command>
                    <packageName>`echo</packageName>
                    <regex></regex>
                    <Alias isActive="yes" isFolder="no">
                        <name>`echo</name>
                        <script>--http://forums.mudlet.org/viewtopic.php?f=8&amp;t=1478
local s = matches[2]

s = string.gsub(s, &quot;%$&quot;, &quot;\n&quot;)
feedTriggers(&quot;\n&quot; .. s .. &quot;\n&quot;)
echo(&quot;\n&quot;)</script>
                        <command></command>
                        <packageName></packageName>
                        <regex>`echo (.+)</regex>
                    </Alias>
                </AliasGroup>
                <Alias isActive="yes" isFolder="no">
                    <name>exec_time_tester</name>
                    <script>testwatch = testwatch or createStopWatch()
-- edit iterations to change how many times the code loops
local iterations = 1000
-- edit timelimit to change how long maximum, in seconds, it will be allowed to loop
local timelimit = 5

startStopWatch(testwatch)
for i = 1,iterations
do
        --stick code to test under here
        roomChanged()
        --stick code to test above here
        if i == iterations then
                local speed = stopStopWatch(testwatch)
                cecho(&quot;\nScript ran &quot;..iterations..&quot; iterations of the specified code in: &lt;red&gt;&quot;..speed)
                resetStopWatch(testwatch)
        elseif getStopWatchTime(testwatch) &gt;= timelimit then
                cecho(&quot;\nTime limit of &lt;red&gt;&quot;..timelimit..&quot;&lt;grey&gt; seconds reached after &lt;red&gt;&quot;..i..&quot;&lt;grey&gt; iterations, stopwatch aborted.&quot;)
                stopStopWatch(testwatch)
                resetStopWatch(testwatch)
                break
        end
end</script>
                    <command></command>
                    <packageName></packageName>
                    <regex>^timeExec run$</regex>
                </Alias>
            </AliasGroup>
        </AliasGroup>
    </AliasPackage>
    <ActionPackage/>
    <ScriptPackage>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>deleteOldProfiles</name>
            <packageName>deleteOldProfiles</packageName>
            <script></script>
            <eventHandlerList/>
            <Script isActive="yes" isFolder="no">
                <name>deleteOldProfiles</name>
                <packageName></packageName>
                <script>function deleteOldProfiles(keepdays_arg, delete_maps)

--[[
	Deletes old profiles/maps in the &quot;current&quot;/&quot;map&quot; folders of the Mudlet home directory.
	The following files are NOT deleted:
	- Files newer than the amount of days specified as an argument to deleteOldProfiles(), or 31 days if not specified.	
	- One file for every month before that. Specifically: The first available file of every month prior to this.
	Setting the second argument to true will delete maps instead of profiles. (e.g. deleteOldProfiles(10, true))
--]]

	local keepdays = tonumber(keepdays_arg) or 31
	local profile_table = {}
	local used_last_mod_months = {}
	local slash = (string.char(getMudletHomeDir():byte()) == &quot;/&quot;) and &quot;/&quot; or &quot;\\&quot;
	local dirpath = getMudletHomeDir()..slash..(delete_maps and &quot;map&quot; or &quot;current&quot;)
	local delnum = 0

	-- Traverse the profiles folder and create a table of files:
	for filename in lfs.dir(dirpath) do
		if filename~=&quot;.&quot; and filename~=&quot;..&quot; then
			profile_table[#profile_table+1] = {name = filename, last_mod = lfs.attributes(dirpath..slash..filename, &quot;modification&quot;)}
		end
	end

	-- Sort the table according to last modification date from old to new:
	table.sort(profile_table, function (a,b) return a.last_mod &lt; b.last_mod end)

	echo(string.format(&quot;\nDeleting old %s. Files newer than %d days and one profile for every month before that will be kept.&quot;, delete_maps and &quot;maps&quot; or &quot;profiles&quot;, keepdays))
	for i,v in ipairs(profile_table) do
		local days = math.floor(os.difftime(os.time(), v.last_mod)/86400)
		local last_mod_month = os.date(&quot;%Y/%m&quot;, v.last_mod)
		if days &gt; keepdays then
			-- For profiles older than X days, check if we already kept a table for this month:
			if not table.contains(used_last_mod_months, last_mod_month) then
				-- If not, do nothing and mark this month as &quot;kept&quot;.
				used_last_mod_months[#used_last_mod_months+1] = last_mod_month
			else
				-- Otherwise remove the file:
				local success, errorstring = os.remove(dirpath..slash..v.name)
				if success then
					delnum = delnum + 1
				else
					cecho(&quot;\n&lt;red&gt;ERROR: &quot;..errorstring)
				end
			end
		end
	end
	echo(string.format(&quot;\nDeletion complete. %d/%d files were removed successfully.&quot;, delnum, #profile_table))
end
</script>
                <eventHandlerList/>
            </Script>
        </ScriptGroup>
        <ScriptGroup isActive="yes" isFolder="yes">
            <name>v126</name>
            <packageName>v126</packageName>
            <script></script>
            <eventHandlerList/>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Mapper</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>roomChanged</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--Remember:
	-- Last area (if we entered a cave it was from there
	-- Last move command

roomChg = roomChg or {}

function roomChanged()
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;roomChg -&gt; roomChanged -&gt; GMCP received\n&quot;) end
 
  rLstCmd.addQueued()

  if __IS_MAPPING_ON__ == false then    
    roomChg.clearCmdList()
    roomChg.assignLastMoveCommand()
    if roomChg.hasTrackedSpecialExit() == true then 
      return
    end
    roomChg.trackPosition()
    return
  end
 
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Room changed\n&quot;) end
  if __IS_DEBUG_ON__ == true then echo(&quot;1. Updating position \n&quot;) end
  roomChg.updatePosition()
  if __IS_DEBUG_ON__ == true then echo(&quot;2. Clearing command list \n&quot;) end
  roomChg.clearCmdList()  
  if __IS_DEBUG_ON__ == true then echo(&quot;3. Assigning last move command \n&quot;) end
  roomChg.assignLastMoveCommand()
  if __IS_DEBUG_ON__ == true then echo(&quot;4. Last move command assigned \n&quot;) end
  if roomChg.hasTrackedSpecialExit() == true then 
    return
  end
  if gmcp.room.info.map ~= nil then
    if __IS_DEBUG_ON__ == true then echo(&quot;5.1.1 Adding known room \n&quot;) end
    roomChg.addKnownRoom()  
    if __IS_DEBUG_ON__ == true then echo(&quot;5.1.2 Adding known room \n&quot;) end
    roomChg.connectPrevToCurrent()  
  else
    if __IS_DEBUG_ON__ == true then echo(&quot;5.2 Adding unknown room \n&quot;) end   
    roomChg.addUnknownRoomGMCP()
  end
   
  if __IS_DEBUG_ON__ == true then echo(&quot;6. Connecting previous to current \n&quot;) end
  --roomChg.connectPrevToCurrent() 
  if __IS_DEBUG_ON__ == true then echo(&quot;7. Writing exits\n&quot;) end
  roomChg.writeExits()  
  if __IS_DEBUG_ON__ == true then echo(&quot;8. Done\n&quot;) end
end

function roomChg.addKnownRoom()
  --local map = gmcp.room.info.map
  local gmcpRoomId = gmcp.Room.id

  if gmcpRoomId == nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Location unknown&quot;) end
    return false
  end
  
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Location known\n&quot;) end
  --local x = gmcp.room.info.map.x
  --local y = gmcp.room.info.map.y
  --local z = 0
  --local area = gmcp.room.info.map.name
  local area = __CURRENT_AREA_ID__


  if __IS_DEBUG_ON__ == true then roomChg.printRoomData(x, y, area) end
  
  -- Add area
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Adding area\n&quot;) end
  local areaName = domain.. &quot;:&quot; .. area .. &quot;:Known&quot;
  areaName = globalFunctions.deleteWhiteSpaces(areaName)
  local areaId = roomChg.AddArea(areaName)   
  
  if __IS_DEBUG_ON__ == true then echo(&quot;areaId = &quot; .. areaId .. &quot;\n&quot;) end
  -- Add room
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Adding room\n&quot;) end
  local roomId = roomChg.AddRoom(areaId, x, y, z)  

  if __IS_DEBUG_ON__ == true then echo(&quot;roomId = &quot; .. roomId .. &quot;\n&quot;) end
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Centering view\n&quot;) end
  mmp.centerView(roomId)  


  __LAST_POS_X__ = x
  __LAST_POS_Y__ = y
  __LAST_POS_Z__ = z

  __LAST_KNOWN_ROOM__ = roomId 


  --Delete old stubs
  mmp.deleteAllStubs(roomId)
  
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Adding visible exits\n&quot;) end
  mmp.addVisibleExits(roomId)
  
  if __IS_CONNECTING_STUBS__ == true then    
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Connecting exit stubs\n&quot;) end
    roomChg.connectStubs(roomId)    
    if __IS_DEBUG_ON__ == true then cecho(&quot;roomChg -&gt; addKnownRoom -&gt; stubs connected.\n&quot;) end
  else
    mmp.connectLastReverse(roomId)
  end

   

  --__LAST_ROOM_ID__ = __CURRENT_ROOM_ID__  
  --__CURRENT_ROOM_ID__ =  roomId

  --__LAST_AREA_ID__ = __CURRENT_AREA_ID__
  --__CURRENT_AREA_ID__ = areaId

  return true
end

function roomChg.AddRoom(areaId, x, y, z) 
  local roomId = mmp.addRoom(areaId, x, y, z)
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;View centered&quot;) end
  __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__  
  __CURRENT_ROOM_ID__ =  roomId

  __LAST_AREA_ID__ = __CURRENT_AREA_ID__
  __CURRENT_AREA_ID__ = areaId
  return roomId
end

function roomChg.AddArea(areaName)
  if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; Add Area -&gt; Start\n&quot;) end 
  local areaId, fullName = mmp.findAreaID(areaName)

  if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; Add Area -&gt; check if is nil\n&quot;) end
  if (areaId == nil) then
    areaId = mmp.addArea(areaName)
  end

  if (__IS_DEBUG_ON__ == true) and (areaId ~= nil) then cecho(&quot;&lt;yellow&gt;areaId = &quot; .. areaId .. &quot;\n&quot;) end
  
  if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; Add Area -&gt; returning id = &quot; .. areaId .. &quot;\n&quot;) end
  return areaId
end

function roomChg.connectStubs(roomId)
  mmp.connectExitStubs(roomId)
end

function roomChg.updateLastLocation()  
  __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__  
  __LAST_AREA_ID__ = __CURRENT_AREA_ID__
  --setRoomEnv(__CURRENT_ROOM_ID__, mmp.envColors.default)
end

function roomChg.printRoomData(x, y, area)
  cecho(&quot;&lt;yellow&gt;x = &quot; .. x .. &quot;\n&quot;)
  cecho(&quot;&lt;yellow&gt;y = &quot; .. y .. &quot;\n&quot;)
  cecho(&quot;&lt;yellow&gt;area = &quot; .. area .. &quot;\n&quot;)

  if __LAST_ROOM_ID__ == nil then 
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;LastRoomId = nil\n&quot;) end
    return 
  end

  if __CURRENT_ROOM_ID__ == nil then 
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;CurrentRoomId = nil\n&quot;) end;
    return
  end

end

function roomChg.connectPrevToCurrent()
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; Start \n&quot;) end
  local lastCommand = mmp.commandToExit(__LAST_MOVE_COMMAND__)  
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; Last move command read \n&quot;) end
  if  (not table.contains(mmp.exitmap, lastCommand))  or (lastCommand == nil) then 
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; No exit map for this command. Returning. \n&quot;) end
    return false
  end
  
  if (__CURRENT_ROOM_ID__ == nil) or (__LAST_ROOM_ID__ == nil) then
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; Room id == false. Returning. \n&quot;) end
    return false
  end
  
  local gmcpExits = __LAST_ROOM_EXITS__
  local isConnected = false
  
  if (gmcpExits == nil) then 
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; no gmcp exits. Returning \n&quot;) end
    return false 
  end


  -- This will work only if there was gmpc exit specified. If there was none, it will just return.
  if (__IS_CONNECT_KNOWN_GMCP_ONLY__) and (not table.contains(gmcpExits, lastCommand)) then  
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; no gmcp exits. Returning \n&quot;) end
    return
  end

  if __IS_DEBUG_ON__ == true then
    echo(&quot;\n\nCreating one way connection.\n&quot;)
    echo(&quot;From room &quot; .. __LAST_ROOM_ID__ .. &quot; to &quot; .. __CURRENT_ROOM_ID__ .. &quot; direction: &quot; .. mmp.exitmap[lastCommand] .. &quot;\n&quot;)
    cecho(&quot;&lt;yellow&gt;Dir &quot; .. mmp.exitmap[lastCommand] .. &quot; &lt;=&gt; &quot; .. lastCommand .. &quot;\n&quot;)    
  end
   
  isConnected = mmp.connectFromTo(__LAST_ROOM_ID__, __CURRENT_ROOM_ID__, mmp.exitmap[lastCommand])    
  

  if (__IS_DEBUG_ON__ == true) and (isConnected == true) then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; Connection created\n&quot;)
  elseif (__IS_DEBUG_ON__ == true) and (isConnected == false) then echo(&quot;roomChg -&gt; connectPrevToCurrent -&gt; Connection not created\n&quot;)  end

end

function roomChg.addUnknownRoomGMCP()

  if gmcp.Room.id ~= nil then
    if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; addUnknownRoomGMCP -&gt;&gt;  Map info present. Returning.\n&quot;) end
    return false
  end

  if gmcp.Room.Info == nil then
    if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; addUnknownRoomGMCP -&gt;No GMCP location data. Returning.\n&quot;) end
    return false
  end

  --local lastCmd = __LAST_COMMAND__
  local lastCmd = mmp.commandToExit(__LAST_MOVE_COMMAND__) 
  if not table.contains(mmp.exitmap, lastCmd) then
    if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; addUnknownRoomGMCP -&gt; Command not valid. Returning\n&quot;) end
    return false
  end

  --cecho(&quot;&lt;yellow&gt;Last move command = &quot; .. __LAST_MOVE_COMMAND__ .. &quot;\n&quot;)
  local x, y, z = roomChg.modifyCoords(__LAST_MOVE_COMMAND__)

  -- Like: Imperium:Parravon:Known
  local areaName = getRoomAreaName(getRoomArea(__LAST_KNOWN_ROOM__))
  --areaName, _ = string.gsub(areaName, &quot;:Known$&quot;, &quot;:Out&quot;)
  local areaId = roomChg.AddArea(areaName)
  local roomId = roomChg.AddRoom(areaId, x, y, z)
  mmp.centerView(roomId)
  mmp.addVisibleExits(roomId)  
  --roomChg.connectStubs(roomId) -- don't automatically connect stubs
  roomChg.connectOut()
  __LAST_POS_X__ = x
  __LAST_POS_Y__ = y
  __LAST_POS_Z__ = z  
  return true
end

function roomChg.modifyCoords(cmd)
  

  local x = __LAST_POS_X__
  local y = __LAST_POS_Y__
  local z = __LAST_POS_Z__

  if mmp.dirN[cmd] then
    y = y + __AREA_SIZE__
  elseif mmp.dirNE[cmd] then  
    x = x + __AREA_SIZE__
    y = y + __AREA_SIZE__
  elseif mmp.dirNW[cmd] then
    x = x - __AREA_SIZE__
    y = y + __AREA_SIZE__
  elseif mmp.dirE[cmd] then
    x = x + __AREA_SIZE__     
  elseif mmp.dirW[cmd] then
    x = x - __AREA_SIZE__
  elseif mmp.dirS[cmd] then 
    y = y - __AREA_SIZE__
  elseif mmp.dirSE[cmd] then 
    x = x + __AREA_SIZE__
    y = y - __AREA_SIZE__
  elseif mmp.dirSW[cmd] then 
    x = x - __AREA_SIZE__
    y = y - __AREA_SIZE__
  elseif mmp.dirUp[cmd] then
    z = z + __AREA_SIZE__
  elseif mmp.dirDown[cmd] then
    z = z - __AREA_SIZE__
  elseif mmp.dirOut[cmd] then 
    x = x + __AREA_WIDTH_OFFSET__
  elseif mmp.dirIn[cmd] then 
    x = x - __AREA_WIDTH_OFFSET__
  end

  return x, y, z
end

function roomChg.clearCmdList()
  __CMD_LIST__ = nil
  __CMD_LIST__ = List.new()
end

function roomChg.assignLastMoveCommand()
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; assignLastMoveCommand -&gt; start\n&quot;) end
  if __MOVE_CMD_LIST__ == nil then 
    return
  end

  --if next(__MOVE_CMD_LIST__) == nil then
  if table.size(__MOVE_CMD_LIST__) &lt; 3 then
    __LAST_MOVE_COMMAND__ = nil
    return
  end

  if __MOVE_CMD_LIST__.first &gt; __MOVE_CMD_LIST__.last then
    __LAST_MOVE_COMMAND__ = nil
    return
  end
 
  __LAST_MOVE_COMMAND__ = List.popleft(__MOVE_CMD_LIST__)  
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; assignLastMoveCommand -&gt; popleft -&gt; &quot; .. __LAST_MOVE_COMMAND__ .. &quot;\n&quot;) end
end

function roomChg.writeExits()
  --if not table.contains(mmp.exitmap, cmd) then return end
  local exits = gmcp.room.info.exits
  if exits == nil then
    __LAST_ROOM_EXITS__ = nil
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;yellow&gt;There is no GMCP map data. Try to add exits manually\n&lt;reset&gt;&quot;) end
    return
  end  
  __LAST_ROOM_EXITS__ = exits
  
end

function roomChg.updatePosition()  
  local map = gmcp.room.info.map

  if map == nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;roomChg -&gt; updatePosition -&gt; Location unknown (no GMPC)\n&quot;) end
    return false
  end
  
  if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; updatePosition -&gt; Location known (GMCP received)\n&quot;) end
  local x = gmcp.room.info.map.x
  local y = gmcp.room.info.map.y
  local z = 0
  if __IS_DEBUG_ON__ == true then echo(&quot;roomChg -&gt; updatePosition -&gt; x = &quot; .. x .. &quot;, y = &quot; .. y .. &quot;, z = &quot; .. z .. &quot;\n&quot;) end

  __LAST_POS_X__ = x
  __LAST_POS_Y__ = -y
  __LAST_POS_Z__ = z

  return true
end

function roomChg.connectOut()
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Last move command: &quot; .. __LAST_MOVE_COMMAND__ .. &quot;\n&quot;) end
  local lastCommand = mmp.commandToExit(__LAST_MOVE_COMMAND__)
  if  (not table.contains(mmp.exitmap, lastCommand)) or (lastCommand == nil) then 
    return false
  end
  
  if (__CURRENT_ROOM_ID__ == nil) or (__LAST_ROOM_ID__ == nil) then
    return false
  end

  local isConnected = false  
   
  isConnected = mmp.connectFromTo(__LAST_ROOM_ID__, __CURRENT_ROOM_ID__, mmp.exitmap[lastCommand])
  if __IS_DEBUG_ON__ == true then 
    echo(&quot;\n\nCreating one way connection.\n&quot;) 
    echo(&quot;From room &quot; .. __LAST_ROOM_ID__ .. &quot; to &quot; .. __CURRENT_ROOM_ID__ .. &quot; direction: &quot; .. mmp.exitmap[lastCommand] .. &quot;\n&quot;)
    echo(&quot;Dir &quot; .. mmp.exitmap[lastCommand] .. &quot; &lt;=&gt; &quot; .. lastCommand .. &quot;\n&quot;)
  end

end

function roomChg.saveCurrentRoomData(roomId, areaId)
  __LAST_KNOWN_ROOM__ = roomId
  __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__  
  __CURRENT_ROOM_ID__ =  roomId

  __LAST_AREA_ID__ = __CURRENT_AREA_ID__
  __CURRENT_AREA_ID__ = areaId
end

function roomChg.hasTrackedSpecialExit()
  -- If there is special exit equal to last command
  if __CURRENT_ROOM_ID__ == nil then return false end  

  local spExits = getSpecialExits(__CURRENT_ROOM_ID__)

  if table.is_empty(spExits) then return false end

  if table.contains(spExits, __LAST_COMMAND__) then  
  -- Set new room coordinates as current
    local newRoomId = nil
    for exitRoomId,num in pairs(spExits) do
      if table.contains(spExits[exitRoomId], __LAST_COMMAND__) then 
        newRoomId = exitRoomId
        break
      end
    end

    if newRoomId == nil then
      cecho(&quot;&lt;red&gt;roomChg -&gt; hasTrackedSpecialExit() -&gt; room == nil&quot;)
      return false
    end

    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; hasTrackedSpecialExit -&gt; before getRoomCoordinates\n&quot;) end

    --mmp.centerView(newRoomId)
    local x,y,z = getRoomCoordinates(newRoomId)
    __LAST_POS_X__ = x
    __LAST_POS_Y__ = y
    __LAST_POS_Z__ = z

    mmp.centerView(newRoomId)
    local areaId = getRoomArea(newRoomId)
    roomChg.saveCurrentRoomData(newRoomId, areaId)

    if __IS_ROUTES_FEEDBACK__ == true then
      mmp.showRoutes(newRoomId)
    end

    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; hasTrackedSpecialExit -&gt; Moved through special exit\n&quot;) end

    return true				-- moved through special exit
  end
  return false
  -- TODO: add separate queue for special exits possibly
end

function roomChg.trackPosition()
  if __IS_AUTOMAPPER_ON__ == true then 
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Automapper is on. Returning. \n&quot;) end
  end

  local areaName = nil
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Updating position \n&quot;) end

  local hasUpdatedGMCP = roomChg.updatePosition()
  if hasUpdatedGMCP == true then
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Area known. Updating areaName. \n&quot;) end
    areaName = roomChg.getKnownAreaName()
  else
    local x, y, z = roomChg.modifyCoords(__LAST_MOVE_COMMAND__)
    __LAST_POS_X__ = x
    __LAST_POS_Y__ = y
    __LAST_POS_Z__ = z
  
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Area out. Updating areaName \n&quot;) end
      --areaName = roomChg.getOutAreaName()
  end

  if areaName == nil then
    areaName = roomChg.getOutAreaName()
  end
    
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Getting area and room ids \n&quot;) end
  
  local roomId = nil
  local exits
  local areaId = mmp.getAreaId(areaName)

  -- If there is a current room, we can check it's exits or we can use gmpc data is any
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; checking exits table \n&quot;) end  
  --if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; __CURRENT_ROOM_ID__ = &quot; .. __CURRENT_ROOM_ID__ .. &quot;\n&quot;) end
  if hasUpdatedGMCP == false and __CURRENT_ROOM_ID__ ~= nil then--and gmcp.room.info.map == nil then
    exits = getRoomExits(__CURRENT_ROOM_ID__)
    
    local lastCommand = mmp.exitmap[mmp.exitmap[mmp.commandToExit(__LAST_MOVE_COMMAND__)]]
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; lastCommand = &quot; .. lastCommand ..  &quot;\n&quot;) end
      if table.contains(exits, lastCommand) then 
        if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; roomId from exits table \n&quot;) end
        roomId = exits[lastCommand]
      end 
  end
  
  if roomId == nil then    
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; roomId from (x, y, z) \n&quot;) end
    roomId = mmp.getRoomId(areaId, __LAST_POS_X__, __LAST_POS_Y__, __LAST_POS_Z__)
  else
    -- Room coordinates may differ because of manual room addition
    local x, y, z = getRoomCoordinates(roomId)
    __LAST_POS_X__ = x
    __LAST_POS_Y__ = y
    __LAST_POS_Z__ = z
  end 


  --local areaId = mmp.getAreaId(areaName)
  --roomId = mmp.getRoomId(areaId, __LAST_POS_X__, __LAST_POS_Y__, __LAST_POS_Z__)

  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Centering the view \n&quot;) end
  if roomId ~= nil then
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; roomId = &quot; .. roomId ..  &quot;\n&quot;) end
    mmp.centerView(roomId)
    roomChg.saveCurrentRoomData(roomId, areaId)

    if __IS_ROUTES_FEEDBACK__ == true then
      mmp.showRoutes(roomId)
    end
  else
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Error: Room id = nil. Returning \n&quot;) end
    if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; Room id won't be changed \n&quot;) end
    --__CURRENT_ROOM_ID__ = nil
    --__CURRENT_AREA_ID_ = nil
  end

  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; trackPosition -&gt; End. \n&quot;) end
end

function roomChg.getKnownAreaName()
  local area = gmcp.room.info.map.name
  local domain = gmcp.room.info.map.domain
  
  local areaName = domain.. &quot;:&quot; .. area .. &quot;:Known&quot;
  areaName = globalFunctions.deleteWhiteSpaces(areaName)
  return areaName
end

function roomChg.getOutAreaName()
  if __IS_DEBUG_ON__ then echo(&quot;roomChg -&gt; getOutAreaName -&gt; Start. \n&quot;) end
  local areaName = getRoomAreaName(getRoomArea(__LAST_KNOWN_ROOM__))
  areaName, _ = string.gsub(areaName, &quot;:Known$&quot;, &quot;:Out&quot;)
  return areaName
end

</script>
                    <eventHandlerList>
                        <string>gmcp.Room.Info</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>mapperScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mudlet = mudlet or {}; mudlet.mapper_script = true


--__IS_DEBUG_ON__ = true
--__IS_MAPPER_MODE_ON__ = false
--__CURRENT_AREA_ID__ = nil
--__CURRENT_ROOM_ID__ = nil
--__LAST_ROOM_ID__ = nil     -- last added/visited room id
--__LAST_AREA_ID__ = nil     -- last added/visited area
--__IS_MAPPING_MODE_ON__ = false
--__IS_TRACKING_ON__ = true

--_LAST_AREA_ID = nil
--_LAST_ROOM_ID = nil
--_CURRENT_ROOM_ID = nil 


mmp = mmp or {}

mmp.exitmap = {
  n = 1,
  north = 1,
  ne = 2,
  northeast = 2,
  nw = 3,
  northwest = 3,
  e = 4,
  east = 4,
  w = 5,
  west = 5,
  s = 6,
  south = 6,
  se = 7,
  southeast = 7,
  sw = 8,
  southwest = 8,
  u = 9,
  up = 9,
  d = 10,
  down = 10,
  [&quot;in&quot;] = 11,
  out = 12,
  [1] = &quot;north&quot;,
  [2] = &quot;northeast&quot;,
  [3] = &quot;northwest&quot;,
  [4] = &quot;east&quot;,
  [5] = &quot;west&quot;,
  [6] = &quot;south&quot;,
  [7] = &quot;southeast&quot;,
  [8] = &quot;southwest&quot;,
  [9] = &quot;up&quot;,
  [10] = &quot;down&quot;,
  [11] = &quot;in&quot;,
  [12] = &quot;out&quot;,
  --[1] = &quot;polnoc&quot;,
  --[2] = &quot;polnocny-wschod&quot;,
  --[3] = &quot;polnocny-zachod&quot;,
  --[4] = &quot;wschod&quot;,
  --[5] = &quot;zachod&quot;,
  --[6] = &quot;poludnie&quot;,
  --[7] = &quot;poludniowy-wschod&quot;,
  --[8] = &quot;poludniowy-zachod&quot;,
  --[9] = &quot;gora&quot;,
  --[10] = &quot;dol&quot;,
  --[11] = &quot;wejscie&quot;,
  --[12] = &quot;wyjscie&quot;,
  [&quot;polnoc&quot;] = 1,
  [&quot;polnocny-wschod&quot;] = 2,
  [&quot;polnocny-zachod&quot;] = 3,
  [&quot;wschod&quot;] = 4,
  [&quot;zachod&quot;] = 5,
  [&quot;poludnie&quot;] = 6,
  [&quot;poludniowy-wschod&quot;] = 7,
  [&quot;poludniowy-zachod&quot;] = 8,
  [&quot;g&quot;] = 9,
  [&quot;gora&quot;] = 9,
  [&quot;d&quot;] = 10,
  [&quot;dol&quot;] = 10,
  [&quot;wejscie&quot;] = 11,
  [&quot;wyjscie&quot;] = 12,
}

mmp.exitShortMap = {
 [&quot;north&quot;] = &quot;n&quot;,
 [&quot;northeast&quot;] = &quot;ne&quot;,
 [&quot;northwest&quot;] = &quot;nw&quot;,
 [&quot;east&quot;] = &quot;e&quot;,
 [&quot;west&quot;] = &quot;w&quot;,
 [&quot;south&quot;] = &quot;s&quot;,
 [&quot;southeast&quot;] = &quot;se&quot;,
 [&quot;southwest&quot;] = &quot;sw&quot;,
 [&quot;up&quot;] = &quot;gora&quot;,
 [&quot;down&quot;] = &quot;dol&quot;,
 [&quot;in&quot;] = &quot;wejscie&quot;,
 [&quot;out&quot;] = &quot;wyjscie&quot;,
}

mmp.exitmapReversed = {
  [1] = &quot;south&quot;,
  [2] = &quot;southwest&quot;,
  [3] = &quot;southeast&quot;,
  [4] = &quot;west&quot;,
  [5] = &quot;east&quot;,
  [6] = &quot;north&quot;,
  [7] = &quot;northwest&quot;,
  [8] = &quot;northeast&quot;,
  [9] = &quot;down&quot;,
  [10] = &quot;up&quot;,
  [11] = &quot;out&quot;,
  [12] = &quot;in&quot;,
}

mmp.dirN = Set { &quot;polnoc&quot;, &quot;n&quot; }
mmp.dirNE = Set { &quot;polnocny-wschod&quot;, &quot;ne&quot; }
mmp.dirE = Set { &quot;wschod&quot;, &quot;e&quot; }
mmp.dirSE = Set { &quot;poludniowy-wschod&quot;, &quot;se&quot; }
mmp.dirS = Set { &quot;poludnie&quot;, &quot;s&quot; }
mmp.dirSW = Set { &quot;poludniowy-zachod&quot;, &quot;sw&quot; }
mmp.dirW = Set { &quot;zachod&quot;, &quot;w&quot; }
mmp.dirNW = Set { &quot;polnocny-zachod&quot;, &quot;nw&quot; }
mmp.dirUp = Set { &quot;gora&quot;, &quot;g&quot;, &quot;wejdz po drabinie&quot;, &quot;wespnij sie na gore&quot;, &quot;wespnij sie na most&quot;, &quot;wejdz na most&quot;}
mmp.dirDown = Set { &quot;dol&quot;, &quot;d&quot;, &quot;jaskinia&quot;, &quot;zejdz po drabinie&quot;, &quot;zejdz na dol&quot;, &quot;zejdz pod most&quot;}
mmp.dirIn = Set { &quot;wejscie&quot;, &quot;wejdz do baraku&quot; }
mmp.dirOut = Set { &quot;wyjscie&quot;, &quot;drzwi&quot; }

--setCustomEnvColor(300, 100,100,100,255)
--setRoomEnv(roomId, 300)
mmp.envColors = {
  connection = 300,
  default = 301,
  forest = 302,
  water = 303,
  town = 304,
  cave = 305,
  fountain = 306,
  meadow = 307,
  sand = 308,
  harbor = 309,
  stone = 310,
  blacksmith = 311,
  shop = 312,
  herbalist = 313,
  bank = 314,
  post = 315,
  tavern = 316,
  market = 317,
  auction = 318,
  gate = 319,
  bakery = 320,
  meditation = 321,
  secret = 322,
  order = 323,
  fish = 324,
  swamp = 324,
  jeweler = 325,
  ferry = 326,
  library = 327,
  [&quot;connection&quot;] = 300,
  [&quot;default&quot;] = 301,
  [&quot;forest&quot;] = 302,
  [&quot;water&quot;] = 303,
  [&quot;town&quot;] = 304,
  [&quot;cave&quot;] = 305,
  [&quot;fountain&quot;] = 306,
  [&quot;meadow&quot;] = 307,
  [&quot;sand&quot;] = 308,
  [&quot;harbor&quot;] = 309,
  [&quot;stone&quot;] = 310,
  [&quot;blacksmith&quot;] = 311,
  [&quot;shop&quot;] = 312,
  [&quot;herbalist&quot;] = 313,
  [&quot;bank&quot;] = 314,
  [&quot;post&quot;] = 315,
  [&quot;tavern&quot;] = 316,
  [&quot;market&quot;] = 317,
  [&quot;auction&quot;] = 318,
  [&quot;gate&quot;] = 319,
  [&quot;bakery&quot;] = 320,
  [&quot;meditation&quot;] = 321,
  [&quot;secret&quot;] = 322,
  [&quot;order&quot;] = 323,
  [&quot;fish&quot;] = 324,
  [&quot;swamp&quot;] = 324,
  [&quot;jeweler&quot;] = 325,
  [&quot;ferry&quot;] = 326,
  [&quot;library&quot;] = 327,
}

setCustomEnvColor(mmp.envColors.default, 40,40,40,255)
setCustomEnvColor(mmp.envColors.forest, 0,85,0,255)
setCustomEnvColor(mmp.envColors.water, 0,0,200,255)
setCustomEnvColor(mmp.envColors.town, 100,0,0,255)
setCustomEnvColor(mmp.envColors.cave, 140,140,140,255)
setCustomEnvColor(mmp.envColors.fountain, 60,120,205,255) 
setCustomEnvColor(mmp.envColors.meadow, 34,139,34,255)
setCustomEnvColor(mmp.envColors.sand, 218,165,32,255)  
setCustomEnvColor(mmp.envColors.harbor, 112,138,144,255)  
setCustomEnvColor(mmp.envColors.stone, 105,105,105,255) 
setCustomEnvColor(mmp.envColors.blacksmith, 170,85,0,255) 
setCustomEnvColor(mmp.envColors.shop, 139,0,0,255) 
setCustomEnvColor(mmp.envColors.herbalist, 0,128,0,255) 
setCustomEnvColor(mmp.envColors.bank, 184,134,11,255)
setCustomEnvColor(mmp.envColors.post, 0,0,128,255) 
setCustomEnvColor(mmp.envColors.tavern, 150,55,0,255)
setCustomEnvColor(mmp.envColors.market, 178,34,34,255)
setCustomEnvColor(mmp.envColors.auction, 139,0,139,255)
setCustomEnvColor(mmp.envColors.gate, 100,0,0,255)
setCustomEnvColor(mmp.envColors.bakery, 139,69,0,255)
setCustomEnvColor(mmp.envColors.meditation, 75,0,130,255)
setCustomEnvColor(mmp.envColors.secret, 128,0,128,255)
setCustomEnvColor(mmp.envColors.order, 210,105,30,255)
setCustomEnvColor(mmp.envColors.fish, 32,178,170,255)
setCustomEnvColor(mmp.envColors.swamp, 79,120,47,255)
setCustomEnvColor(mmp.envColors.jeweler, 218,165,32,255)
setCustomEnvColor(mmp.envColors.ferry, 30,144,255,255)
setCustomEnvColor(mmp.envColors.library, 60,0,150,255)
 


--blacksmith, shop, bank, post, zielarz, dylizans, meditation, tavern, skup/targowisko(market), gates, auction house
mmp.roomMarks = {
  fountain = { mmp.envColors.fountain, &quot;F&quot; },
  harbor = { mmp.envColors.harbor, &quot;H&quot; },
  blacksmith = { mmp.envColors.blacksmith, &quot;K&quot; },
  shop = { mmp.envColors.shop, &quot;S&quot; },
  herbalist = { mmp.envColors.herbalist, &quot;Z&quot; },
  bank = { mmp.envColors.bank, &quot;B&quot; },
  post = { mmp.envColors.post, &quot;P&quot; },
  tavern = { mmp.envColors.tavern, &quot;T&quot; },
  market = { mmp.envColors.market, &quot;m&quot; },
  auction = { mmp.envColors.auction, &quot;A&quot; },
  gate = { mmp.envColors.auction, &quot;G&quot; },
  bakery = { mmp.envColors.bakery, &quot;B&quot; },
  meditation = { mmp.envColors.meditation, &quot;M&quot; },
  secret = { mmp.envColors.secret, &quot;*&quot; },
  order = { mmp.envColors.order, &quot;O&quot; },
  fish = { mmp.envColors.fish, &quot;r&quot; },
  jeweler = { mmp.envColors.jeweler, &quot;J&quot; },
  ferry = { mmp.envColors.ferry, &quot;S&quot; },
  library = { mmp.envColors.library, &quot;L&quot; },
  [&quot;fountain&quot;] = { mmp.envColors.fountain, &quot;F&quot; },
  [&quot;harbor&quot;] = { mmp.envColors.harbor, &quot;H&quot; },
  [&quot;blacksmith&quot;] = { mmp.envColors.blacksmith, &quot;K&quot; },
  [&quot;shop&quot;] = { mmp.envColors.shop, &quot;S&quot; },
  [&quot;herbalist&quot;] = { mmp.envColors.herbalist, &quot;Z&quot; },
  [&quot;bank&quot;] = { mmp.envColors.bank, &quot;B&quot; },
  [&quot;post&quot;] = { mmp.envColors.post, &quot;P&quot; },
  [&quot;market&quot;] = { mmp.envColors.market, &quot;m&quot; },
  [&quot;auction&quot;] = { mmp.envColors.auction, &quot;A&quot; },
  [&quot;gate&quot;] = { mmp.envColors.gate, &quot;G&quot; },
  [&quot;bakery&quot;] = { mmp.envColors.bakery, &quot;B&quot; },
  [&quot;meditation&quot;] = { mmp.envColors.meditation, &quot;M&quot; },
  [&quot;secret&quot;] = { mmp.envColors.secret, &quot;*&quot; },
  [&quot;order&quot;] = { mmp.envColors.order, &quot;O&quot; },
  [&quot;fish&quot;] = { mmp.envColors.fish, &quot;r&quot; },
  [&quot;ferry&quot;] = { mmp.envColors.ferry, &quot;R&quot; },
  [&quot;library&quot;] = { mmp.envColors.library, &quot;L&quot; },
}


local main = Geyser.Container:new({x=0,y=0,width=&quot;100%&quot;,height=&quot;100%&quot;,name=&quot;mapperContainer&quot;})
 
mmp.mapper = Geyser.Mapper:new({
  name = &quot;mapperScript.mapper&quot;,
  x = &quot;70%&quot;, y = 0, -- edit here if you want to move it
  width = &quot;30%&quot;, height = &quot;50%&quot;
}, main)


--specific ID
function mmp.addRoom(areaId, roomId, x, y, z)  
  if mmp.areaExists(areaId) == false then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: area does not exist!\n&lt;reset&gt;&quot;) end
    return false
  end

  
  --roomId = select(2, next(getRoomsByPosition(areaId,x,y,z)))  
  if next(getRoomsByPosition(areaId, x, y, z)) ~= nil then
    --if roomId ~= nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: room already exists!\n&lt;reset&gt;&quot;) end
    --__CURRENT_ROOM_ID__ = roomId
    roomId = select(2, next(getRoomsByPosition(areaId,x,y,z)))
    mmp.setRoomEnvColor(roomId)
    return roomId
  end
 
  addRoom(roomId)
  setRoomCoordinates(roomId, x, y, z)
  setRoomArea(roomId, areaId)
  --__CURRENT_ROOM_ID__ = roomId

  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;blue&gt;Room added.\n&lt;reset&gt;&quot;) end
  return roomId
end


-- Generated id
function mmp.addRoom(areaId, x, y, z)
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Adding room \n&quot;) end
  if mmp.areaExists(areaId) == false then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: area does not exist!\n&lt;reset&gt;&quot;) end
    return false
  end


  local roomId = select(2, next(getRoomsByPosition(areaId,x,y,z)))  
    if roomId ~= nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: room already exists!\n&lt;reset&gt;&quot;) end
    --__CURRENT_ROOM_ID__ = roomId
    mmp.setRoomEnvColor(roomId)
    return roomId
  end  
 
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Creating Id \n&quot;) end
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Coordinates = (&quot; .. x .. &quot;, &quot; .. y .. &quot;, &quot; .. z .. &quot;)\n&quot;) end
  
  if gmcp.Room.id ~= nil then
    --roomId = createRoomID() 
    roomId = gmcp.Room.id
  end

  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; RoomId = &quot; .. roomId .. &quot;\n&quot;) end
  addRoom(roomId)
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Room added\n&quot;) end
  setRoomCoordinates(roomId, x, y, z)
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Room created. Setting room area.\n&quot;) end
  setRoomArea(roomId, areaId)
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; Room area set\n&quot;) end
  
  mmp.setRoomEnvColor(roomId)
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;blue&gt;Room added.\n&lt;reset&gt;&quot;) end
  return roomId
end

function mmp.addArea(areaName)
  local areaId, fullName = mmp.findAreaID(areaName)

  if areaId ~= nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: &quot; .. areaName .. &quot; already exists!\n&lt;reset&gt;&quot;) end
    return areaId
  end

  areaId = addAreaName(areaName)  
   if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;blue&gt;Area added.\n&lt;reset&gt;&quot;) end
  return areaId
end



function mmp.areaExists(areaId)
  if getAreaRooms(areaId) ~= nil then
    return true
  else
    return false
  end 
end



function mmp.addVisibleExits(roomId)
  if gmcp.room.info.exits == nil then
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;red&gt;There is no GMCP map data. Try to add exits manually\n&lt;reset&gt;&quot;) end
    return
  end
  
  local exits = gmcp.room.info.exits

  if table.contains(exits, &quot;polnocny-zachod&quot;) then
    setExitStub(roomId, mmp.exitmap.nw, true)
  end

  if table.contains(exits, &quot;polnoc&quot;) then
    setExitStub(roomId, mmp.exitmap.n, true)
  end

  if table.contains(exits, &quot;polnocny-wschod&quot;) then
    setExitStub(roomId, mmp.exitmap.ne, true)
  end

  if table.contains(exits, &quot;wschod&quot;) then
    setExitStub(roomId, mmp.exitmap.e, true)
  end

  if table.contains(exits, &quot;poludniowy-wschod&quot;) then
    setExitStub(roomId, mmp.exitmap.se, true)
  end

  if table.contains(exits, &quot;poludnie&quot;) then
    setExitStub(roomId, mmp.exitmap.s, true)
  end

  if table.contains(exits, &quot;poludniowy-zachod&quot;) then
    setExitStub(roomId, mmp.exitmap.sw, true)
  end

  if table.contains(exits, &quot;zachod&quot;) then
    setExitStub(roomId, mmp.exitmap.w, true)
  end

  -- up and down stubs dont work on the known map (z == 0)
  if table.contains(exits, &quot;dol&quot;) then
    setExitStub(roomId, mmp.exitmap.down, true)
  end

  if table.contains(exits, &quot;gora&quot;) then
    setExitStub(roomId, mmp.exitmap.up, true)
  end

  return true
end

function mmp.translateAreaExceptions(areaname)
  if areaname == &quot;Imperium:Wissenland:Known&quot; then
    return &quot;Imperium:Wissenland_i_Sudenland:Known&quot;
  end

  return areaname
end

function mmp.findAreaID(areaname)
  local list = getAreaTable()
  -- iterate over the list of areas, matching them with substring match. 
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; findAreaID -&gt; table received\n&quot;) end

  if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; findAreaID -&gt; old areaname = &quot; .. areaname .. &quot;\n&quot;) end
  areaname = mmp.translateAreaExceptions(areaname)
  if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; findAreaID -&gt; new areaname = &quot; .. areaname .. &quot;\n&quot;) end

  local returnid, fullareaname
  for area, id in pairs(list) do
    if area:find(areaname, 1, true) then
      if returnid then return false, &quot;more than one area matches&quot; end
      returnid = id; fullareaname = area
    end
  end
 
  return returnid, fullareaname
end

function mmp.centerView(roomId)
  centerview(roomId)
end

function mmp.connectExitStubs(roomId)
    local exits = getRoomExits(roomId) 
    local stubs = getExitStubs(roomId)
    if (type(stubs)) ~= &quot;table&quot; then return end
    if stubs then
      for i,v in pairs(stubs) do
      connectExitStub(roomId, v)
    end
  end
end

function mmp.connectLastReverse(roomId)
    local stubs = getExitStubs(roomId) 
    if (type(stubs)) ~= &quot;table&quot; then return end

    local lastMoveNo = mmp.exitmap[__LAST_MOVE_COMMAND__]
    if lastMoveNo == nil then return end
    local lastMoveReversedDir = mmp.exitmapReversed[lastMoveNo]
    local lastMoveReversedDirNo = mmp.exitmap[lastMoveReversedDir]

    if table.contains(stubs, mmp.exitmap[lastMoveReversedDir]) then
      mmp.connectFromTo(roomId, __LAST_ROOM_ID__, lastMoveReversedDirNo)      
    end       
end

function mmp.deleteAllStubs(roomId)
  local exitStubs = getExitStubs(roomId)
  if type(exitStubs) ~= &quot;table&quot; then return end
  for i,v in pairs(exitStubs) do
    setExitStub(roomId, v,false)
  end
end

function mmp.connectFromTo(fromId, toId, directionNo)
  if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; Start\n&quot;) end
  if (fromId == nil) or (toId == nil) then
    if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; from or to == nil. Returning.\n&quot;) end
    return false
  end
  
  local exits = getRoomExits(fromId)
  if exits == nil then 
    if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; exits == nil. Returning\n&quot;) end
    return false 
  end
  
  if table.contains(exits, mmp.exitmap[directionNo]) then
    if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; exit already exists. Returning\n&quot;) end
    return false
  end   

  if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; Adding exit\n&quot;) end


  -- Check if there is already connection from fromId to toId
  if mmp.isConnected(fromId, toId) then
    if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; connectFromTo -&gt; Rooms are already connected. Returning\n&quot;) end
    
    return false
  end
  return setExit(fromId, toId, directionNo) 
end

function mmp.isConnected(fromId, toId)

  local exits = getRoomExits(fromId)
  for direction,num in pairs(exits) do
    if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; isConnected -&gt; Checking direction = &quot; .. direction .. &quot;, and num = &quot; .. num .. &quot;\n&quot;) end
    if num == toId then return true end      
  end

  return false
end

function mmp.addSpecialExit(roomFromId, roomToId, exitCommand)
  if gmcp.room.info.exits == nil then
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;red&gt;There is no GMCP map data. Try to add exits manually\n&lt;reset&gt;&quot;) end
    return
  end

  if roomExists(roomFromId) == false or roomExists(roomToId) == false then
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;red&gt;There is no romm with a given id\n&lt;reset&gt;&quot;) end
  end

  addSpecialExit(roomFromId, roomToId, exitCommand) 
end

function mmp.commandToExit(cmd)
  if mmp.dirN[cmd] then return &quot;polnoc&quot;
  elseif mmp.dirNE[cmd] then return &quot;polnocny-wschod&quot;
  elseif mmp.dirNW[cmd] then return &quot;polnocny-zachod&quot;
  elseif mmp.dirE[cmd] then return &quot;wschod&quot;
  elseif mmp.dirW[cmd] then return &quot;zachod&quot; 
  elseif mmp.dirS[cmd] then return &quot;poludnie&quot;
  elseif mmp.dirSE[cmd] then return &quot;poludniowy-wschod&quot; 
  elseif mmp.dirSW[cmd] then return &quot;poludniowy-zachod&quot; 
  elseif mmp.dirUp[cmd] then return &quot;gora&quot; 
  elseif mmp.dirDown[cmd] then return &quot;dol&quot; 
  elseif mmp.dirOut[cmd] then return &quot;wyjscie&quot;
  elseif mmp.dirIn[cmd] then return &quot;wejscie&quot; 
  else return nil
  end
end

function mmp.setRoomEnvColor(roomId)
  if __CURRENT_ENV_COLOR__ == nil then
  __CURRENT_ENV_COLOR__ = mmp.envColors.default
  end

  if __IS_PAINTING_ON__ then
    
    if mmp.hasMark(roomId) then 
      if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; setRoomEnvColor -&gt; Room is marked. Returning\n&quot;) end
      return
    end

    setRoomEnv(roomId, __CURRENT_ENV_COLOR__)
  else
    if not table.contains(mmp.envColors, getRoomEnv(roomId)) then
      if __IS_DEBUG_ON__ then echo(&quot;mmp -&gt; setRoomEnvColor -&gt; env not recognized. Changing to default\n&quot;) end
      setRoomEnv(roomId, mmp.envColors.default)
    end
  end
end

function mmp.hasMark(roomId)
  local roomChar = getRoomChar(roomId or 0)
  if (roomChar == &quot;&quot;) or (roomChar == &quot;_&quot;) then
    return false
  else
    return true
  end
end

function mmp.markRoom(roomId, mark)
 --__CURRENT_ENV_COLOR__ = mmp.envColors[color]
  local envColor = mmp.roomMarks[mark][1]
  --echo(&quot;Room color = &quot; .. mmp.roomMarks[mark][1] .. &quot;\n&quot;)
  --echo(&quot;Room char = &quot; .. mmp.roomMarks[mark][2] .. &quot;\n&quot;)
  local roomMark = mmp.roomMarks[mark][2]  
  setRoomEnv(roomId, envColor)
  setRoomChar(roomId, roomMark) 
  
end

function mmp.unmarkRoom(roomId)
  setRoomChar(roomId, &quot;_&quot;)
end

function mmp.getRoomId(areaId, x, y, z)
  if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; getRoomId -&gt; Checking room id\n&quot;) end
  if mmp.areaExists(areaId) == false then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;mmp -&gt; getRoomId -&gt; Error: area does not exist!\n&lt;reset&gt;&quot;) end
    return false
  end

    if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; getRoomId -&gt; (areaId, x, y, z) = &quot; .. &quot;(&quot; .. areaId .. &quot;, &quot; .. x .. &quot;, &quot; .. y .. &quot;, &quot; .. z .. &quot;)\n&quot;) end
  local roomId = select(2, next(getRoomsByPosition(areaId,x,y,z)))
  if roomId ~= nil then  
    return roomId
  else
      if __IS_DEBUG_ON__ == true then echo(&quot;mmp -&gt; getRoomId -&gt; room id not found!\n&quot;) end
    return nil
  end

end

function mmp.getAreaId(areaName)
  local areaId, fullName = mmp.findAreaID(areaName)
  return areaId
end

function mmp.addSpecialExitDir(currentRoomId, dir, exitCommand)
  local fromId = currentRoomId

  local exits = getRoomExits(fromId)
  --cecho(&quot;&lt;yellow&gt;Checkpoint 1\n&quot;)
  if table.contains(exits, mmp.exitmap[dir]) then
    echo(&quot;Room in this direction already exists\n&quot;)
    return
  end

  -- add room in direction dir
  local x, y, z = roomChg.modifyCoords(dir)

  local areaName = getRoomAreaName(getRoomArea(__LAST_KNOWN_ROOM__))
  areaName, _ = string.gsub(areaName, &quot;:Known$&quot;, &quot;:Out&quot;)
  local areaId = roomChg.AddArea(areaName)


  --local areaId = __CURRENT_AREA_ID__

  local roomToId = mmp.addRoom(areaId, x, y, z)

  -- add special exit from current room to the new room



  addSpecialExit(fromId, roomToId, exitCommand) 
end


function mmp.getExitScript(roomId, dir)
   --room is the room id #, dir is the direction we are attempting
	local exitScript = getRoomUserData(roomId, &quot;exitScript&quot;..dir)
	if exitScript ~= &quot;&quot; then
		--assert(loadstring(exitScript)) ()
      return exitScript
	else
     return nil
   end
end

function mmp.printExitScript(roomId, dir)
   --room is the room id #, dir is the direction we are attempting
	local exitScript = getRoomUserData(roomId, &quot;exitScript&quot;..dir)
	if exitScript ~= &quot;&quot; then
		cecho(&quot;&lt;yellow&gt;[&quot; .. dir .. &quot; -&gt; &quot; .. exitScript .. &quot;]\n&quot;)
	end
end

function mmp.invokeExitScript(exitScript)
  local commandTable = string.split(exitScript, &quot;,&quot;)
  for k,v in ipairs(commandTable) do
    --echo(&quot;command &quot; .. k .. &quot;: &quot; .. v .. &quot;\n&quot;)
    send(v)
  end
end

function mmp.showRoutes(roomId)
  local exits = getRoomExits(roomId)
 
  --local dir = nil
  --for direction,num in pairs(exits) do
    --echo(&quot;direction = &quot; .. direction .. &quot;, num = &quot; .. num .. &quot;\n&quot;)
    --echo(&quot;direction = &quot; .. mmp.exitShortMap[direction] .. &quot;, num = &quot; .. num .. &quot;\n&quot;)
    
    --dir = mmp.exitShortMap[direction]
    --if dir ~= nil then
      --mmp.printExitScript(roomId, dir)
    --end
  --end

  for long, short in pairs(mmp.exitShortMap) do
    mmp.printExitScript(roomId, short)
  end


end

function mmp.exitGo(dir)
  if __IS_ROUTES_ON__ == false then
    send(dir)
    return
  end

  local currentRoomId = __CURRENT_ROOM_ID__
  if currentRoomId == nil then
    --echo(&quot;num walking -&gt; current room id == nil\n&quot;)
    send(dir)
    return
  end

  commandString = mmp.getExitScript(currentRoomId, dir)
  if commandString == nil then
    send(dir)
    --cecho(&quot;&lt;yellow&gt;getExitScript = nil. Returning\n&quot;)
    return
  end

  --Show 
  --mmp.printExitScript(currentRoomId, dir)

  -- Invoke
  mmp.invokeExitScript(commandString)
end












</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>readLastCommand</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

rLstCmd = rLstCmd or {}

function readLastCommand(_, command)
  rLstCmd.storeCommand(command)
  rLstCmd.addCmdToQueue(command)  
end

function rLstCmd.storeAsCommand(cmd)
  if __IS_DEBUG_ON__ == true then echo(&quot;rLstCmd -&gt; sotreAsCommand -&gt; cmd = &quot; .. cmd .. &quot;\n&quot;) end
  rLstCmd.storeCommand(cmd)
  rLstCmd.addCmdToQueue(cmd)
end

function rLstCmd.storeCommand(cmd)
  __LAST_COMMAND__ = cmd
end

-- Add all commands sent from this location. Clears the queue when new locations is entered (roomChanged)
function rLstCmd.addCmdToQueue(cmd)
  if __CMD_LIST__ == nil then __CMD_LIST__ = List.new() end
  if __MOVE_CMD_LIST__ == nil then __MOVE_CMD_LIST__ = List.new() end
  if __TMP_MOVE_CMD_LIST__ == nil then __TMP_MOVE_CMD_LIST__ = List.new() end

  if (__IS_MAPPING_ON__ == true) and (table.size(__TMP_MOVE_CMD_LIST__) &gt; 2) then
    cecho(&quot;&lt;yellow&gt;Move will cause coherency lost. Aborting move command.\n&quot;)    
    denyCurrentSend()
    return
  end

  List.pushright(__CMD_LIST__, cmd)
 
  cmd = rLstCmd.filterHide(cmd)

  local moveCmd = mmp.commandToExit(cmd)
  if moveCmd ~= nil then        
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Size before push = &quot; .. table.size(__TMP_MOVE_CMD_LIST__) .. &quot;\n&quot;) end
    List.pushright(__TMP_MOVE_CMD_LIST__, cmd)
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Size after push = &quot; .. table.size(__TMP_MOVE_CMD_LIST__) .. &quot;\n&quot;) end
    --rLstCmd.addQueued()
    --__MOVEMENT_QUEUED__ = __MOVEMENT_QUEUED__ + 1
    if __IS_DEBUG_ON__ == true then  cecho(&quot;&lt;yellow&gt;Move command to be written = &quot; .. moveCmd .. &quot;\n&quot;) end
  end
    
  if __IS_DEBUG_ON__ == true then  
    cecho(&quot;&lt;yellow&gt;Tmp list: \n&quot;)
    display(__TMP_MOVE_CMD_LIST__)
    cecho(&quot;&lt;yellow&gt;Real list: \n&quot;)
    display(__MOVE_CMD_LIST__)
  end  

  if (table.size(__TMP_MOVE_CMD_LIST__)) &gt; 3 then
    cecho(&quot;&lt;yellow&gt;Coherency lost\n&quot;)
    display(__TMP_MOVE_CMD_LIST__)
  end 

  -- if coherency lost:
  --if (__TMP_MOVE_CMD_LIST__ ~= nil) and (type(__TMP_MOVE_CMD_LIST__) == &quot;table&quot;) then      
    --if __IS_DEBUG_ON__ == true then  echo(&quot;rLstCmd -&gt; addCmdToQueue -&gt; coherency 1\n&quot;) end
    --local numb = __TMP_MOVE_CMD_LIST__
    --if (table.size(__TMP_MOVE_CMD_LIST__)) &gt; 4 then
      --if __IS_DEBUG_ON__ == true then  echo(&quot;rLstCmd -&gt; addCmdToQueue -&gt; Coherency lost, number = &quot; .. table.size(__TMP_MOVE_CMD_LIST__) .. &quot;\n&quot;) end
      --return
      --Add last element (like a stack)
      --List.pushright(__MOVE_CMD_LIST__, List.popright(__TMP_MOVE_CMD_LIST__))
      --__TMP_MOVE_CMD_LIST__ = List.new()
    --end    
  --end
end

function rLstCmd.addQueued()
  -- queue waiting commands 
  --echo(&quot;Adding command if &quot; .. __MOVEMENT_QUEUED__ .. &quot; is equal to 0\n&quot;)
  if (not (__TMP_MOVE_CMD_LIST__.first &gt; __TMP_MOVE_CMD_LIST__.last)) then
    --cecho(&quot;&lt;yellowList before: \n&quot;)
    --display(__TMP_MOVE_CMD_LIST__)
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Size before pop = &quot; .. table.size(__TMP_MOVE_CMD_LIST__) .. &quot;\n&quot;) end
    List.pushright(__MOVE_CMD_LIST__, List.popleft(__TMP_MOVE_CMD_LIST__))
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;yellow&gt;Size after pop = &quot; .. table.size(__TMP_MOVE_CMD_LIST__) .. &quot;\n&quot;) end
    --cecho(&quot;&lt;yellow&gt;List after: \n&quot;)
    --display(__TMP_MOVE_CMD_LIST__)
  end
end

function rLstCmd.filterHide(cmd)
  local dir
  dir, _ = string.gsub(cmd, &quot;^(przemknij sie na &quot;, &quot;&quot;)
  return dir
end





</script>
                    <eventHandlerList>
                        <string>sysDataSendRequest</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>List</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

List = List or {}
function List.new ()
  return {first = 0, last = -1}
end

function List.pushleft (list, value)
  local first = list.first - 1
  list.first = first
  list[first] = value
end
    
function List.pushright (list, value)
  local last = list.last + 1
  list.last = last
  list[last] = value
end
    
function List.popleft (list)
  local first = list.first
  if first &gt; list.last then error(&quot;list is empty&quot;) end
  local value = list[first]
  list[first] = nil        -- to allow garbage collection
  list.first = first + 1
  return value
end
    
function List.popright (list)
  local last = list.last
  if list.first &gt; last then error(&quot;list is empty&quot;) end
  local value = list[last]
  list[last] = nil         -- to allow garbage collection
  list.last = last - 1
  return value
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Minor</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>chasingReset</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function chasingReset()
  __IS_CHASING__ = false
  __IS_FOLLOWING__ = false
end</script>
                    <eventHandlerList>
                        <string>gmcp.room.info</string>
                    </eventHandlerList>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>UI</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>compassScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

compass = compass or {}

compass.dirs = {&quot;polnocny-zachod&quot;, &quot;polnoc&quot;, &quot;polnocny-wschod&quot;}

compass.back = Geyser.Label:new({
  name = &quot;compass.back&quot;,
  x = &quot;-32%&quot;,
  y = &quot;55%&quot;,
  width = &quot;10%&quot;,
  height = &quot;10%&quot;,
}, main)

-- Create 3x3 grid
compass.box = Geyser.HBox:new({
  name = &quot;compass.box&quot;,
  x = 0,
  y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},compass.back)

compass.row1 = Geyser.VBox:new({
  name = &quot;compass.row1&quot;,
},compass.box)

compass.row2 = Geyser.VBox:new({
  name = &quot;compass.row2&quot;,
},compass.box)

compass.row3 = Geyser.VBox:new({
  name = &quot;compass.row3&quot;,
},compass.box)

-- Add 9 labels for every compass direction
compass.msgFormatLeft = &quot;&lt;center&gt;&lt;b&gt;&quot;
compass.msgFormaRight = &quot;&lt;/b&gt;&lt;/center&gt;&quot;

compass.nw = Geyser.Label:new({
  name = &quot;compass.nw&quot;,
  --message = &quot; &quot; .. compass.msgFormatLeft .. &quot;NW&quot; .. compass.msgFormaRight .. &quot; &quot;,
  message = compass.msgFormatLeft .. &quot;NW&quot; .. compass.msgFormaRight,
},compass.row1)
 
compass.w = Geyser.Label:new({
  name = &quot;compass.w&quot;,
  message = compass.msgFormatLeft .. &quot;W&quot; .. compass.msgFormaRight,
},compass.row1)
 
compass.sw = Geyser.Label:new({
  name = &quot;compass.sw&quot;,
  message = compass.msgFormatLeft .. &quot;SW&quot; .. compass.msgFormaRight,
},compass.row1)
 
compass.n = Geyser.Label:new({
  name = &quot;compass.n&quot;,
  message = compass.msgFormatLeft .. &quot;N&quot; .. compass.msgFormaRight,
},compass.row2)
 
compass.center = Geyser.Label:new({
  name = &quot;compass.center&quot;,
},compass.row2)
 
compass.s = Geyser.Label:new({
  name = &quot;compass.s&quot;,
  message = compass.msgFormatLeft .. &quot;S&quot; .. compass.msgFormaRight,
},compass.row2)
 
compass.ne = Geyser.Label:new({
  name = &quot;compass.ne&quot;,
  message = compass.msgFormatLeft .. &quot;NE&quot; .. compass.msgFormaRight,
},compass.row3)
 
compass.e = Geyser.Label:new({
  name = &quot;compass.e&quot;,
  message = compass.msgFormatLeft .. &quot;E&quot; .. compass.msgFormaRight,
},compass.row3)
 
compass.se = Geyser.Label:new({
  name = &quot;compass.se&quot;,
  message = compass.msgFormatLeft .. &quot;SE&quot; .. compass.msgFormaRight,
},compass.row3)


function compass.refreshLabels()
  local exits = gmcp.Room.Info.exits

  if exits == nil then
    compass:nwOff()
    compass:nOff()
    compass:neOff()
    compass:eOff()
    compass:seOff()
    compass:sOff()
    compass:swOff()
    compass:wOff()  
    return  
  end
  
  if table.contains(exits, &quot;polnocny-zachod&quot;) then
    compass:nwOn()
  else
    compass:nwOff()
  end

  if table.contains(exits, &quot;polnoc&quot;) then
    compass:nOn()
   else
    compass:nOff()
  end

  if table.contains(exits, &quot;polnocny-wschod&quot;) then
    compass:neOn()
   else
    compass:neOff()
  end

  if table.contains(exits, &quot;wschod&quot;) then
    compass:eOn()
   else
    compass:eOff()
  end

  if table.contains(exits, &quot;poludniowy-wschod&quot;) then
    compass:seOn()
   else
    compass:seOff()
  end

  if table.contains(exits, &quot;poludnie&quot;) then
    compass:sOn()
   else
    compass:sOff()
  end

  if table.contains(exits, &quot;poludniowy-zachod&quot;) then
    compass:swOn()
   else
    compass:swOff()
  end

  if table.contains(exits, &quot;zachod&quot;) then
    compass:wOn()
   else
    compass:wOff()
  end
end

function compassScript()
  compass:resize()
  compass:refreshLabels()  
end

function compass.resize()
  compass.back:resize(compass.back:get_height(),compass.back:get_height())
end





-- set styles
compass.borderWidth = &quot;1px;&quot;
compass.borderStyle = &quot;solid;&quot;
compass.borderRadius = &quot;1px;&quot;

compass.bgOnColor = &quot;rgba(90,90,90,100%);&quot;
compass.borderOnColor = &quot;rgba(120,120,120,100%);&quot;

compass.bgOffColor = &quot;rgba(30,30,30,100%);&quot;
compass.borderOffColor = &quot;rgba30,30,30,100%);&quot;

compass.styleOn = [[
    background-color: ]] .. compass.bgOnColor .. [[
    border-width: ]] .. compass.borderWidth .. [[
    border-style: ]] .. compass.borderStyle .. [[
    border-color: ]] .. compass.borderOnColor .. [[
    border-radius: ]] .. compass.borderRadius .. [[
  ]]

compass.styleOff = [[
    background-color: ]] .. compass.bgOffColor .. [[
    border-width: ]] .. compass.borderWidth .. [[
    border-style: ]] .. compass.borderStyle .. [[
    border-color: ]] .. compass.borderOffColor .. [[
    border-radius: ]] .. compass.borderRadius .. [[
  ]]
-- On ------------------------------------

function compass.nwOn()
  --compass.n:setColor(0, 255, 0)
  compass.nw:setStyleSheet(compass.styleOn)  
  --compass.nw:echo(&quot;NW&quot;, nil, &quot;c&quot;)
end

function compass.nOn()
  compass.n:setStyleSheet(compass.styleOn)  
  --compass.n:echo(&quot;N&quot;, nil, &quot;c&quot;)
end

function compass.neOn()
  compass.ne:setStyleSheet(compass.styleOn)  
end

function compass.eOn()
  compass.e:setStyleSheet(compass.styleOn)  
end

function compass.seOn()
  compass.se:setStyleSheet(compass.styleOn) 
end

function compass.sOn()
  compass.s:setStyleSheet(compass.styleOn)  
end

function compass.swOn()
  compass.sw:setStyleSheet(compass.styleOn) 
end

function compass.wOn()
  compass.w:setStyleSheet(compass.styleOn) 
end


-- Off ------------------------------------
function compass.nwOff()
  compass.nw:setStyleSheet(compass.styleOff)
end

function compass.nOff()
  compass.n:setStyleSheet(compass.styleOff)
end

function compass.neOff()
  compass.ne:setStyleSheet(compass.styleOff)
end

function compass.eOff()
  compass.e:setStyleSheet(compass.styleOff)
end

function compass.seOff()
  compass.se:setStyleSheet(compass.styleOff)
end

function compass.sOff()
  compass.s:setStyleSheet(compass.styleOff)
end

function compass.swOff()
  compass.sw:setStyleSheet(compass.styleOff)
end

function compass.wOff()
  compass.w:setStyleSheet(compass.styleOff)
end</script>
                    <eventHandlerList>
                        <string>gmcp.Room.Info</string>
                        <string>sysWindowResizeEvent</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>statusBarsScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

-- poziomy:
-- kondycja (hp): (0, 6) -&gt; 7 -- &lt;zdrowy = 6&gt;
-- mana (mana): (0,8) -&gt; 9 -- &lt;full mana  = 8&gt;
-- zmeczenie (fatigue): (0, 9) -&gt; 10 -- &lt;zmeczony = 9&gt;
-- obciazenie(encumberance): (0, 5) -&gt; 6 -- &lt;bez obc. = 0&gt;
-- panika (panic): (0, 5) -&gt; 6 -- &lt;bez paniki = 0&gt;
-- glod (stuffed): (0, 3)-&gt; 4 -- &lt;najedzony = 3&gt;
-- pragnienie (soaked) (0, 3) -&gt; 4 -- &lt;napity = 3&gt;
-- upicie (intox): (0, 9) -&gt; 10
-- kac (headache): (0, 5) -&gt; 6
-- postepy (improve): (0, 16) -&gt; 17

statusBars = statusBars or {}


__STATUS_BARS_COLORFULL__ = false

statusBars.back = Geyser.Container:new({
  name = &quot;statusBars.back&quot;,
  x = &quot;-32%&quot;,
  y = &quot;67%&quot;,
  width = &quot;30%&quot;,
  height = &quot;30%&quot;,
}, main)

-- Create box for the bars
statusBars.box = Geyser.VBox:new({
  name = &quot;statusBars.box&quot;,
  x = 0,
  y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},statusBars.back)


-- Add bars
statusBars.hpBar = Geyser.Gauge:new({
  name=&quot;statusBars.hpBar&quot;,
}, statusBars.box)

statusBars.manaBar = Geyser.Gauge:new({
  name=&quot;statusBars.manaBar&quot;,
}, statusBars.box)

statusBars.fatigueBar = Geyser.Gauge:new({
  name=&quot;statusBars.fatigueBar&quot;,
}, statusBars.box)

statusBars.encumberanceBar = Geyser.Gauge:new({
  name=&quot;statusBars.encumberanceBar&quot;,
}, statusBars.box)

statusBars.panicBar = Geyser.Gauge:new({
  name=&quot;statusBars.panicBar&quot;,
}, statusBars.box)

statusBars.stuffedBar = Geyser.Gauge:new({
  name=&quot;statusBars.stuffedBar&quot;,
}, statusBars.box)

statusBars.soakedBar = Geyser.Gauge:new({
  name=&quot;statusBars.soakedBar&quot;,
}, statusBars.box)

statusBars.intoxBar = Geyser.Gauge:new({
  name=&quot;statusBars.intoxBar&quot;,
}, statusBars.box)

statusBars.headacheBar = Geyser.Gauge:new({
  name=&quot;statusBars.headacheBar&quot;,
}, statusBars.box)

statusBars.improveBar = Geyser.Gauge:new({
  name=&quot;statusBars.improveBar&quot;,
}, statusBars.box)

-- Add Labels
statusBars.labelTextColor = &quot;white&quot;

statusBars.hpLabel = Geyser.Label:new({
    name = &quot;statusBars.hpLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.hpBar)
statusBars.hpLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.manaLabel = Geyser.Label:new({
    name = &quot;statusBars.manaLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.manaBar)
statusBars.manaLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.fatigueLabel = Geyser.Label:new({
    name = &quot;statusBars.fatigueLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.fatigueBar)
statusBars.fatigueLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.encumberanceLabel = Geyser.Label:new({
    name = &quot;statusBars.encumberanceLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.encumberanceBar)
statusBars.encumberanceLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.panicLabel = Geyser.Label:new({
    name = &quot;statusBars.panicLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.panicBar)
statusBars.panicLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.stuffedLabel = Geyser.Label:new({
    name = &quot;statusBars.stuffedLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.stuffedBar)
statusBars.stuffedLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.soakedLabel = Geyser.Label:new({
    name = &quot;statusBars.soakedLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.soakedBar)
statusBars.soakedLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.intoxLabel = Geyser.Label:new({
    name = &quot;statusBars.intoxLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.intoxBar)
statusBars.intoxLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.headacheLabel = Geyser.Label:new({
    name = &quot;statusBars.headacheLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.headacheBar)
statusBars.headacheLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])

statusBars.improveLabel = Geyser.Label:new({
    name = &quot;statusBars.improveLabel&quot;,
    x = &quot;0%&quot;, y = &quot;0%&quot;,
    width = &quot;100%&quot;, height = &quot;100%&quot;,
    fgColor = statusBars.labelTextColor,
  }, statusBars.improveBar)
statusBars.improveLabel:setStyleSheet([[
  background-color: rgba(0,0,0,0%);
]])




-- Bar Styles
statusBars.frontBackgroundColor = &quot;QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #98f041, stop: 0.1 #8cf029, stop: 0.49 #66cc00, stop: 0.5 #52a300, stop: 1 #66cc00);&quot;
statusBars.backBackgroundColor =  &quot;QLinearGradient( x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #78bd33, stop: 0.1 #6ebd20, stop: 0.49 #4c9900, stop: 0.5 #387000, stop: 1 #4c9900);&quot;
statusBars.borderTop = &quot;1px black solid;&quot;
statusBars.borderLeft = &quot;1px black solid;&quot;
statusBars.borderBottom = &quot;1px black solid;&quot;
statusBars.radius = &quot;7;&quot;
statusBars.padding = &quot;3px;&quot;

statusBars.frontStyle = [[
    background-color: ]] .. statusBars.frontBackgroundColor .. [[
    border-top: ]] .. statusBars.borderTop .. [[
    border-left: ]] .. statusBars.borderLeft .. [[
    border-bottom: ]] .. statusBars.borderBottom .. [[
    border-radius: ]] .. statusBars.radius .. [[
    padding: ]] .. statusBars.padding .. [[
]]

statusBars.backStyle = [[
    background-color: ]] .. statusBars.backBackgroundColor .. [[
    border-top: ]] .. statusBars.borderTop .. [[
    border-left: ]] .. statusBars.borderLeft .. [[
    border-bottom: ]] .. statusBars.borderBottom .. [[
    border-radius: ]] .. statusBars.radius .. [[
    padding: ]] .. statusBars.padding .. [[
]]

function statusBars.setBgColor(bgColor)
  local barColor = [[
    background-color: ]] .. bgColor .. [[
    border-top: ]] .. statusBars.borderTop .. [[
    border-left: ]] .. statusBars.borderLeft .. [[
    border-bottom: ]] .. statusBars.borderBottom .. [[
    border-radius: ]] .. statusBars.radius .. [[
    padding: ]] .. statusBars.padding .. [[
  ]]
  return barColor
end

-- Default settings
--statusBars.hpBar.front:setStyleSheet(statusBars.frontStyle)
--statusBars.hpBar.back:setStyleSheet(statusBars.backStyle)

-- Define colors
if __STATUS_BARS_COLORFULL__ == true then
  statusBars.frontHpBackgroundColor = &quot;rgba(255,0,0,100%);&quot;
  statusBars.backHpBackgroundColor = &quot;rgba(90,0,0,100%);&quot;

  statusBars.frontManaBackgroundColor = &quot;rgba(0,0,255,100%);&quot;
  statusBars.backManaBackgroundColor = &quot;rgba(0,0,90,100%);&quot;

  statusBars.frontFatigueBackgroundColor = &quot;rgba(220,220,0,100%);&quot;
  statusBars.backFatigueBackgroundColor = &quot;rgba(90,90,0,100%);&quot;

  statusBars.frontEncumberanceBackgroundColor = &quot;rgba(160,160,160,100%);&quot;
  statusBars.backEncumberanceBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontPanicBackgroundColor = &quot;rgba(255,0,255,100%);&quot;
  statusBars.backPanicBackgroundColor = &quot;rgba(90,0,90,100%);&quot;

  statusBars.frontStuffedBackgroundColor = &quot;rgba(255,128,0,100%);&quot;
  statusBars.backStuffedBackgroundColor = &quot;rgba(102,51,0,100%);&quot;

  statusBars.frontSoakedBackgroundColor = &quot;rgba(0,255,255,100%);&quot;
  statusBars.backSoakedBackgroundColor = &quot;rgba(0,51,51,100%);&quot;

  statusBars.frontIntoxBackgroundColor = &quot;rgba(51,255,51,100%);&quot;
  statusBars.backIntoxBackgroundColor = &quot;rgba(0,102,0,100%);&quot;

  statusBars.frontHeadacheBackgroundColor = &quot;rgba(0,255,128,100%);&quot;
  statusBars.backHeadacheBackgroundColor = &quot;rgba(0,102,51,100%);&quot;

  statusBars.frontImproveBackgroundColor = &quot;rgba(127,0,255,100%);&quot;
  statusBars.backImproveBackgroundColor = &quot;rgba(51,0,102,100%);&quot;
else
  -- Define colors
  statusBars.frontHpBackgroundColor = &quot;rgba(255,0,0,100%);&quot;
  statusBars.backHpBackgroundColor = &quot;rgba(90,0,0,100%);&quot;

  statusBars.frontManaBackgroundColor = &quot;rgba(0,0,255,100%);&quot;
  statusBars.backManaBackgroundColor = &quot;rgba(0,0,90,100%);&quot;

  statusBars.frontFatigueBackgroundColor = &quot;rgba(220,220,0,100%);&quot;
  statusBars.backFatigueBackgroundColor = &quot;rgba(90,90,0,100%);&quot;

  statusBars.frontEncumberanceBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backEncumberanceBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontPanicBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backPanicBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontStuffedBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backStuffedBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontSoakedBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backSoakedBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontIntoxBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backIntoxBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontHeadacheBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backHeadacheBackgroundColor = &quot;rgba(64,64,64,100%);&quot;

  statusBars.frontImproveBackgroundColor = &quot;rgba(180,180,180,100%);&quot;
  statusBars.backImproveBackgroundColor = &quot;rgba(64,64,64,100%);&quot;
end



-- Set styles
statusBars.hpBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontHpBackgroundColor))
statusBars.hpBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backHpBackgroundColor))

statusBars.manaBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontManaBackgroundColor))
statusBars.manaBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backManaBackgroundColor))

statusBars.fatigueBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontFatigueBackgroundColor))
statusBars.fatigueBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backFatigueBackgroundColor))

statusBars.encumberanceBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontEncumberanceBackgroundColor))
statusBars.encumberanceBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backEncumberanceBackgroundColor))

statusBars.panicBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontPanicBackgroundColor))
statusBars.panicBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backPanicBackgroundColor))

statusBars.stuffedBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontStuffedBackgroundColor))
statusBars.stuffedBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backStuffedBackgroundColor))

statusBars.soakedBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontSoakedBackgroundColor))
statusBars.soakedBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backSoakedBackgroundColor))

statusBars.intoxBar .front:setStyleSheet(statusBars.setBgColor(statusBars.frontIntoxBackgroundColor))
statusBars.intoxBar .back:setStyleSheet(statusBars.setBgColor(statusBars.backIntoxBackgroundColor))

statusBars.headacheBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontHeadacheBackgroundColor))
statusBars.headacheBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backHeadacheBackgroundColor))

statusBars.improveBar.front:setStyleSheet(statusBars.setBgColor(statusBars.frontImproveBackgroundColor))
statusBars.improveBar.back:setStyleSheet(statusBars.setBgColor(statusBars.backImproveBackgroundColor))



function statusBars.updateStatus()
  if (gmcp.Char.State.hp) then
    statusBars:updateHp()
  end
  
  if (gmcp.Char.State.mana) then
    statusBars:updateMana()
  end 

  if (gmcp.Char.State.fatigue) then
    statusBars:updateFatigue()
  end

  if (gmcp.Char.State.encumberance) then
    statusBars:updateEncumberance()
  end

  if (gmcp.Char.State.panic) then
    statusBars.updatePanic()
  end

  if (gmcp.Char.State.stuffed) then
    statusBars.updateStuffed()
  end

  if (gmcp.Char.State.soaked) then
    statusBars.updateSoaked()
  end

  if (gmcp.Char.State.intox) then
    statusBars.updateIntox()
  end

  if (gmcp.Char.State.headache) then
    statusBars.updateHeadache()
  end

  if (gmcp.Char.State.improve) then
  statusBars.updateImprove()
  end
end

function statusBars.updateHp()
  local currentHp = tonumber(gmcp.Char.State.hp)
  local maxHp = 6

  local statusStr = &quot;Kondycja: &quot;
  
  if (currentHp == 0) then
    statusStr = statusStr .. &quot;ledwo zywy&quot;
  elseif (currentHp == 1) then
    statusStr = statusStr .. &quot;ciezko ranny&quot;
  elseif (currentHp == 2) then
    statusStr = statusStr .. &quot;w zlej kondycji&quot;
  elseif (currentHp == 3) then
    statusStr = statusStr .. &quot;ranny&quot;
  elseif (currentHp == 4) then
    statusStr = statusStr .. &quot;lekko ranny&quot;
  elseif (currentHp == 5) then
    statusStr = statusStr .. &quot;w dobrym stanie&quot;
  elseif (currentHp == 6) then
    statusStr = statusStr .. &quot;w swietnej kondycji&quot;
  end

  statusBars.hpBar:setValue(currentHp, maxHp)
  statusBars.hpLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateMana()
  local currentMana = tonumber(gmcp.Char.State.mana)
  local maxMana = 8

  local statusStr = &quot;Mana: &quot;
  
  if (currentMana == 0) then
    statusStr = statusStr .. &quot;u kresu sil&quot;
  elseif (currentMana == 1) then
    statusStr = statusStr .. &quot;wykonczony&quot;
  elseif (currentMana == 2) then
    statusStr = statusStr .. &quot;wyczerpany&quot;
  elseif (currentMana == 3) then
    statusStr = statusStr .. &quot;w zlej kondycji&quot;
  elseif (currentMana == 4) then
    statusStr = statusStr .. &quot;bardzo zmeczony&quot;
  elseif (currentMana == 5) then
    statusStr = statusStr .. &quot;zmeczony&quot;
  elseif (currentMana == 6) then
    statusStr = statusStr .. &quot;oslabiony&quot;
  elseif (currentMana == 7) then
    statusStr = statusStr .. &quot;lekko oslabiony&quot;
  elseif (currentMana == 8) then
    statusStr = statusStr .. &quot;w pelni sil&quot;
  end

  statusBars.manaBar:setValue(currentMana, maxMana)
  statusBars.manaLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end


function statusBars.updateFatigue()
  local currentFatigue = tonumber(gmcp.Char.State.fatigue)
  local maxFatigue = 9
  currentFatigue = maxFatigue - currentFatigue

  local statusStr = &quot;Zmeczenie: &quot;
  
  if (currentFatigue == 0) then
    statusStr = statusStr .. &quot;w pelni wypoczety&quot;
  elseif (currentFatigue == 1) then
    statusStr = statusStr .. &quot;wypoczety&quot;
  elseif (currentFatigue == 2) then
    statusStr = statusStr .. &quot;troche zmeczony&quot;
  elseif (currentFatigue == 3) then
    statusStr = statusStr .. &quot;zmeczony&quot;
  elseif (currentFatigue == 4) then
    statusStr = statusStr .. &quot;bardzo zmeczony&quot;
  elseif (currentFatigue == 5) then
    statusStr = statusStr .. &quot;nieco wyczerpany&quot;
  elseif (currentFatigue == 6) then
    statusStr = statusStr .. &quot;wyczerpany&quot;
  elseif (currentFatigue == 7) then
    statusStr = statusStr .. &quot;bardzo wyczerpany&quot;
  elseif (currentFatigue == 8) then
    statusStr = statusStr .. &quot;wycienczony&quot;
  elseif (currentFatigue == 9) then
    statusStr = statusStr .. &quot;calkowicie wycienczony&quot;
  end

  --statusBars.fatigueBar:setValue(currentFatigue, maxFatigue, &quot;&lt;b&gt;&quot;..statusStr..&quot;&lt;/b&gt;&quot;)
  statusBars.fatigueBar:setValue(currentFatigue, maxFatigue)
  statusBars.fatigueLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)

end

function statusBars.updateEncumberance()
  local currentEncumberance = tonumber(gmcp.Char.State.encumberance)
  local maxEncumberance = 6

  local statusStr = &quot;Eq: &quot;
  
  if (currentEncumberance == 0) then
    statusStr = statusStr .. &quot;brak obc.&quot;
  elseif (currentEncumberance == 1) then
    statusStr = statusStr .. &quot;wadzi ci troche&quot;
  elseif (currentEncumberance == 2) then
    statusStr = statusStr .. &quot;daje ci sie we znaki&quot;
  elseif (currentEncumberance == 3) then
    statusStr = statusStr .. &quot;jest dosyc klopotliwy&quot;
  elseif (currentEncumberance == 4) then
    statusStr = statusStr .. &quot;jest wyjatkowo ciezki&quot;
  elseif (currentEncumberance == 5) then
    statusStr = statusStr .. &quot;jest niemilosiernie ciezki&quot;
  elseif (currentEncumberance == 6) then
    statusStr = statusStr .. &quot;prawie przygniata cie do ziemi&quot;
  end

  statusBars.encumberanceBar:setValue(currentEncumberance, maxEncumberance)
  statusBars.encumberanceLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updatePanic()
  local currentPanic = tonumber(gmcp.Char.State.panic)
  local maxPanic = 4

  local statusStr = &quot;Strach: &quot;
  
  if (currentPanic == 0) then
    statusStr = statusStr .. &quot;bezpiecznie&quot;
  elseif (currentPanic == 1) then
    statusStr = statusStr .. &quot;spokojnie&quot;
  elseif (currentPanic == 2) then
    statusStr = statusStr .. &quot;nieswojo&quot;
  elseif (currentPanic == 3) then
    statusStr = statusStr .. &quot;nerwowo&quot;
  elseif (currentPanic == 4) then
    statusStr = statusStr .. &quot;przerazony&quot;
  --elseif (currentPanic == 5) then
    --statusStr = statusStr .. &quot;bardzo przerazony&quot;
  end

  statusBars.panicBar:setValue(currentPanic, maxPanic)
  statusBars.panicLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateStuffed()
  local currentStuffed = tonumber(gmcp.Char.State.stuffed)
  local maxStuffed = 3

  local statusStr = &quot;Glod: &quot;
  
  if (currentStuffed == 0) then
    statusStr = statusStr .. &quot;bardzo glody&quot;
  elseif (currentStuffed == 1) then
    statusStr = statusStr .. &quot;glodny&quot;
  elseif (currentStuffed == 2) then
    statusStr = statusStr .. &quot;najedzony&quot;
  elseif (currentStuffed == 3) then
    statusStr = statusStr .. &quot;bardzo najedzony&quot;
  end

  statusBars.stuffedBar:setValue(maxStuffed - currentStuffed, maxStuffed)
  statusBars.stuffedLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateSoaked()
  local currentSoaked = tonumber(gmcp.Char.State.soaked)
  local maxSoaked = 3

  local statusStr = &quot;Pragnienie: &quot;
  
  if (currentSoaked == 0) then
    statusStr = statusStr .. &quot;chce si sie bardzo pic&quot;
  elseif (currentSoaked == 1) then
    statusStr = statusStr .. &quot;chce ci sie pic&quot;
  elseif (currentSoaked == 2) then
    statusStr = statusStr .. &quot;troche chce ci sie pic&quot;
  elseif (currentSoaked == 3) then
    statusStr = statusStr .. &quot;nie chce ci sie pic&quot;
  end

  statusBars.soakedBar:setValue(maxSoaked - currentSoaked, maxSoaked)
  statusBars.soakedLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateIntox()
  local currentIntox = tonumber(gmcp.Char.State.intox)
  local maxIntox = 6

  local statusStr = &quot;Upicie: &quot;
  
  if (currentIntox == 0) then
    statusStr = statusStr .. &quot;trzezwy&quot;
  elseif (currentIntox == 1) then
    statusStr = statusStr .. &quot;podchmielony&quot;
  elseif (currentIntox == 2) then
    statusStr = statusStr .. &quot;podpity&quot;
  elseif (currentIntox == 3) then
    statusStr = statusStr .. &quot;wstawiony&quot;
  elseif (currentIntox == 4) then
    statusStr = statusStr .. &quot;pijany&quot;
  elseif (currentIntox == 5) then
    statusStr = statusStr .. &quot;schlany&quot;
  elseif (currentIntox == 6) then
    statusStr = statusStr .. &quot;nawalony&quot;
  end

  statusBars.intoxBar:setValue(currentIntox, maxIntox)
  statusBars.intoxLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateHeadache()
  local currentHeadache = tonumber(gmcp.Char.State.headache)
  local maxHeadache = 6

  local statusStr = &quot;Kac: &quot;
  
  if (currentHeadache == 0) then
    statusStr = statusStr .. &quot;brak kaca&quot;
  elseif (currentHeadache == 1) then
    statusStr = statusStr .. &quot;lekki&quot;
  elseif (currentHeadache == 2) then
    statusStr = statusStr .. &quot;niemily&quot;
  elseif (currentHeadache == 3) then
    statusStr = statusStr .. &quot;drazniacy&quot;
  elseif (currentHeadache == 4) then
    statusStr = statusStr .. &quot;niezly&quot;
  elseif (currentHeadache == 5) then
    statusStr = statusStr .. &quot;straszliwy&quot;
  elseif (currentHeadache == 6) then
    statusStr = statusStr .. &quot;potworny&quot;
  end

  statusBars.headacheBar:setValue(currentHeadache, maxHeadache)
  statusBars.headacheLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end

function statusBars.updateImprove()
  local currentImprove = tonumber(gmcp.Char.State.improve)
  local maxImprove = 24

  local statusStr = &quot;Postepy: &quot;
  
  if (currentImprove == 0) then
    statusStr = statusStr .. &quot;brak&quot;
  elseif (currentImprove == 1) then
    statusStr = statusStr .. &quot;nieznaczne&quot;
  elseif (currentImprove == 2) then
    statusStr = statusStr .. &quot;2/25&quot;
  elseif (currentImprove == 3) then
    statusStr = statusStr .. &quot;3/25&quot;
  elseif (currentImprove == 4) then
    statusStr = statusStr .. &quot;4/25&quot;
  elseif (currentImprove == 5) then
    statusStr = statusStr .. &quot;5/25&quot;
  elseif (currentImprove == 6) then
    statusStr = statusStr .. &quot;6/25&quot;
  elseif (currentImprove == 7) then
    statusStr = statusStr .. &quot;7/25&quot;
  elseif (currentImprove == 8) then
    statusStr = statusStr .. &quot;8/25&quot;
  elseif (currentImprove == 9) then
    statusStr = statusStr .. &quot;9/25&quot;
  elseif (currentImprove == 10) then
    statusStr = statusStr .. &quot;10/25&quot;
  elseif (currentImprove == 11) then
    statusStr = statusStr .. &quot;11/25&quot;
  elseif (currentImprove == 12) then
    statusStr = statusStr .. &quot;12/25&quot;
  elseif (currentImprove == 13) then
    statusStr = statusStr .. &quot;13/25&quot;
  elseif (currentImprove == 14) then
    statusStr = statusStr .. &quot;14/25&quot;
  elseif (currentImprove == 15) then
    statusStr = statusStr .. &quot;15/25&quot;
  elseif (currentImprove == 16) then
    statusStr = statusStr .. &quot;16/25&quot;
  elseif (currentImprove == 17) then
    statusStr = statusStr .. &quot;17/25&quot;
  elseif (currentImprove == 18) then
    statusStr = statusStr .. &quot;18/25&quot;
  elseif (currentImprove == 19) then
    statusStr = statusStr .. &quot;19/25&quot;
  elseif (currentImprove == 20) then
    statusStr = statusStr .. &quot;20/25&quot;
  elseif (currentImprove == 21) then
    statusStr = statusStr .. &quot;21/25&quot;
  elseif (currentImprove == 22) then
    statusStr = statusStr .. &quot;22/25&quot;
  elseif (currentImprove == 23) then
    statusStr = statusStr .. &quot;23/25&quot;
  elseif (currentImprove == 24) then
    statusStr = statusStr .. &quot;24/25&quot;
  end

  statusBars.improveBar:setValue(currentImprove, maxImprove)
  statusBars.improveLabel:echo(&quot;&lt;center&gt;&lt;b&gt;&quot; .. statusStr .. &quot;&lt;/b&gt;&lt;/center&gt;&quot;)
end


-- Update status (Event)
function statusBarsScript()
  statusBars.updateStatus()
end


</script>
                    <eventHandlerList>
                        <string>gmcp.Char.State</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>battleCompassScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

battleCompass = battleCompass or {}

battleCompass.runTable = { }

battleCompass.back = Geyser.Label:new({
  name = &quot;battleCompass.back&quot;,
  --x = &quot;-32%&quot;,
  x = &quot;-12%&quot;,
  y = &quot;55%&quot;,
  width = &quot;10%&quot;,
  height = &quot;10%&quot;,
}, main)

-- Create 3x3 grid
battleCompass.box = Geyser.HBox:new({
  name = &quot;battleCompass.box&quot;,
  x = 0,
  y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},battleCompass.back)

battleCompass.row1 = Geyser.VBox:new({
  name = &quot;battleCompass.row1&quot;,
},battleCompass.box)

battleCompass.row2 = Geyser.VBox:new({
  name = &quot;battleCompass.row2&quot;,
},battleCompass.box)

battleCompass.row3 = Geyser.VBox:new({
  name = &quot;battleCompass.row3&quot;,
},battleCompass.box)

-- Add 9 labels for every battleCompass direction
battleCompass.msgFormatLeft = &quot;&lt;center&gt;&lt;b&gt;&quot;
battleCompass.msgFormaRight = &quot;&lt;/b&gt;&lt;/center&gt;&quot;

battleCompass.nw = Geyser.Label:new({
  name = &quot;battleCompass.nw&quot;,
  --message = &quot; &quot; .. battleCompass.msgFormatLeft .. &quot;NW&quot; .. battleCompass.msgFormaRight .. &quot; &quot;,
  message = battleCompass.msgFormatLeft .. &quot;NW&quot; .. battleCompass.msgFormaRight,
},battleCompass.row1)
 
battleCompass.w = Geyser.Label:new({
  name = &quot;battleCompass.w&quot;,
  message = battleCompass.msgFormatLeft .. &quot;W&quot; .. battleCompass.msgFormaRight,
},battleCompass.row1)
 
battleCompass.sw = Geyser.Label:new({
  name = &quot;battleCompass.sw&quot;,
  message = battleCompass.msgFormatLeft .. &quot;SW&quot; .. battleCompass.msgFormaRight,
},battleCompass.row1)
 
battleCompass.n = Geyser.Label:new({
  name = &quot;battleCompass.n&quot;,
  message = battleCompass.msgFormatLeft .. &quot;N&quot; .. battleCompass.msgFormaRight,
},battleCompass.row2)
 
battleCompass.center = Geyser.Label:new({
  name = &quot;battleCompass.center&quot;,
},battleCompass.row2)
 
battleCompass.s = Geyser.Label:new({
  name = &quot;battleCompass.s&quot;,
  message = battleCompass.msgFormatLeft .. &quot;S&quot; .. battleCompass.msgFormaRight,
},battleCompass.row2)
 
battleCompass.ne = Geyser.Label:new({
  name = &quot;battleCompass.ne&quot;,
  message = battleCompass.msgFormatLeft .. &quot;NE&quot; .. battleCompass.msgFormaRight,
},battleCompass.row3)
 
battleCompass.e = Geyser.Label:new({
  name = &quot;battleCompass.e&quot;,
  message = battleCompass.msgFormatLeft .. &quot;E&quot; .. battleCompass.msgFormaRight,
},battleCompass.row3)
 
battleCompass.se = Geyser.Label:new({
  name = &quot;battleCompass.se&quot;,
  message = battleCompass.msgFormatLeft .. &quot;SE&quot; .. battleCompass.msgFormaRight,
},battleCompass.row3)


function battleCompass.refreshLabels()
  local exits = battleCompass.runTable

  if __IS_CHASING__ == true then
    battleCompass:centerOn()
  else
    battleCompass:centerOff()
  end

  if exits == nil then
    battleCompass:nwOff()
    battleCompass:nOff()
    battleCompass:neOff()
    battleCompass:eOff()
    battleCompass:seOff()
    battleCompass:sOff()
    battleCompass:swOff()
    battleCompass:wOff()  
    return  
  end
  
  if table.contains(exits, &quot;polnocny-zachod&quot;) then
    battleCompass:nwOn()
  else
    battleCompass:nwOff()
  end

  if table.contains(exits, &quot;polnoc&quot;) then
    battleCompass:nOn()
   else
    battleCompass:nOff()
  end

  if table.contains(exits, &quot;polnocny-wschod&quot;) then
    battleCompass:neOn()
   else
    battleCompass:neOff()
  end

  if table.contains(exits, &quot;wschod&quot;) then
    battleCompass:eOn()
   else
    battleCompass:eOff()
  end

  if table.contains(exits, &quot;poludniowy-wschod&quot;) then
    battleCompass:seOn()
   else
    battleCompass:seOff()
  end

  if table.contains(exits, &quot;poludnie&quot;) then
    battleCompass:sOn()
   else
    battleCompass:sOff()
  end

  if table.contains(exits, &quot;poludniowy-zachod&quot;) then
    battleCompass:swOn()
   else
    battleCompass:swOff()
  end

  if table.contains(exits, &quot;zachod&quot;) then
    battleCompass:wOn()
   else
    battleCompass:wOff()
  end
end

function battleCompassScript()
  -- changing room should refresh the table
  battleCompass.runTable = { } 
  battleCompass:resize()
  battleCompass:refreshLabels()  
end

function battleCompass.resize()
  battleCompass.back:resize(battleCompass.back:get_height(),battleCompass.back:get_height())
end





-- set styles
battleCompass.borderWidth = &quot;1px;&quot;
battleCompass.borderStyle = &quot;solid;&quot;
battleCompass.borderRadius = &quot;1px;&quot;

battleCompass.bgOnColor = &quot;rgba(90,0,0,100%);&quot;
battleCompass.borderOnColor = &quot;rgba(120,0,0,100%);&quot;

battleCompass.bgOffColor = &quot;rgba(30,0,0,100%);&quot;
battleCompass.borderOffColor = &quot;rgba(30,0,0,100%);&quot;

battleCompass.styleOn = [[
    background-color: ]] .. battleCompass.bgOnColor .. [[
    border-width: ]] .. battleCompass.borderWidth .. [[
    border-style: ]] .. battleCompass.borderStyle .. [[
    border-color: ]] .. battleCompass.borderOnColor .. [[
    border-radius: ]] .. battleCompass.borderRadius .. [[
  ]]

battleCompass.styleOff = [[
    background-color: ]] .. battleCompass.bgOffColor .. [[
    border-width: ]] .. battleCompass.borderWidth .. [[
    border-style: ]] .. battleCompass.borderStyle .. [[
    border-color: ]] .. battleCompass.borderOffColor .. [[
    border-radius: ]] .. battleCompass.borderRadius .. [[
  ]]
-- On ------------------------------------

function battleCompass.nwOn()
  --battleCompass.n:setColor(0, 255, 0)
  battleCompass.nw:setStyleSheet(battleCompass.styleOn)  
  --battleCompass.nw:echo(&quot;NW&quot;, nil, &quot;c&quot;)
end

function battleCompass.nOn()
  battleCompass.n:setStyleSheet(battleCompass.styleOn)  
  --battleCompass.n:echo(&quot;N&quot;, nil, &quot;c&quot;)
end

function battleCompass.neOn()
  battleCompass.ne:setStyleSheet(battleCompass.styleOn)  
end

function battleCompass.eOn()
  battleCompass.e:setStyleSheet(battleCompass.styleOn)  
end

function battleCompass.seOn()
  battleCompass.se:setStyleSheet(battleCompass.styleOn) 
end

function battleCompass.sOn()
  battleCompass.s:setStyleSheet(battleCompass.styleOn)  
end

function battleCompass.swOn()
  battleCompass.sw:setStyleSheet(battleCompass.styleOn) 
end

function battleCompass.wOn()
  battleCompass.w:setStyleSheet(battleCompass.styleOn) 
end

function battleCompass.centerOn()
  battleCompass.w:setStyleSheet(battleCompass.styleOn) 
end


-- Off ------------------------------------
function battleCompass.nwOff()
  battleCompass.nw:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.nOff()
  battleCompass.n:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.neOff()
  battleCompass.ne:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.eOff()
  battleCompass.e:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.seOff()
  battleCompass.se:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.sOff()
  battleCompass.s:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.swOff()
  battleCompass.sw:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.wOff()
  battleCompass.w:setStyleSheet(battleCompass.styleOff)
end

function battleCompass.centerOff()
  battleCompass.center:setStyleSheet(battleCompass.styleOff)
end</script>
                    <eventHandlerList>
                        <string>sysWindowResizeEvent</string>
                        <string>gmcp.Room.Info</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>arrivalCompassScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

arrivalCompass = arrivalCompass or {}

arrivalCompass.arrivalTable = { }

arrivalCompass.back = Geyser.Label:new({
  name = &quot;arrivalCompass.back&quot;,
  --x = &quot;-32%&quot;,
  x = &quot;-22%&quot;,
  y = &quot;55%&quot;,
  width = &quot;10%&quot;,
  height = &quot;10%&quot;,
}, main)

-- Create 3x3 grid
arrivalCompass.box = Geyser.HBox:new({
  name = &quot;arrivalCompass.box&quot;,
  x = 0,
  y = 0,
  width = &quot;100%&quot;,
  height = &quot;100%&quot;,
},arrivalCompass.back)

arrivalCompass.row1 = Geyser.VBox:new({
  name = &quot;arrivalCompass.row1&quot;,
},arrivalCompass.box)

arrivalCompass.row2 = Geyser.VBox:new({
  name = &quot;arrivalCompass.row2&quot;,
},arrivalCompass.box)

arrivalCompass.row3 = Geyser.VBox:new({
  name = &quot;arrivalCompass.row3&quot;,
},arrivalCompass.box)

-- Add 9 labels for every arrivalCompass direction
arrivalCompass.msgFormatLeft = &quot;&lt;center&gt;&lt;b&gt;&quot;
arrivalCompass.msgFormaRight = &quot;&lt;/b&gt;&lt;/center&gt;&quot;

arrivalCompass.nw = Geyser.Label:new({
  name = &quot;arrivalCompass.nw&quot;,
  --message = &quot; &quot; .. arrivalCompass.msgFormatLeft .. &quot;NW&quot; .. arrivalCompass.msgFormaRight .. &quot; &quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;NW&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row1)
 
arrivalCompass.w = Geyser.Label:new({
  name = &quot;arrivalCompass.w&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;W&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row1)
 
arrivalCompass.sw = Geyser.Label:new({
  name = &quot;arrivalCompass.sw&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;SW&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row1)
 
arrivalCompass.n = Geyser.Label:new({
  name = &quot;arrivalCompass.n&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;N&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row2)
 
arrivalCompass.center = Geyser.Label:new({
  name = &quot;arrivalCompass.center&quot;,
},arrivalCompass.row2)
 
arrivalCompass.s = Geyser.Label:new({
  name = &quot;arrivalCompass.s&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;S&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row2)
 
arrivalCompass.ne = Geyser.Label:new({
  name = &quot;arrivalCompass.ne&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;NE&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row3)
 
arrivalCompass.e = Geyser.Label:new({
  name = &quot;arrivalCompass.e&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;E&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row3)
 
arrivalCompass.se = Geyser.Label:new({
  name = &quot;arrivalCompass.se&quot;,
  message = arrivalCompass.msgFormatLeft .. &quot;SE&quot; .. arrivalCompass.msgFormaRight,
},arrivalCompass.row3)


function arrivalCompass.refreshLabels()
  local exits = arrivalCompass.arrivalTable

  if __IS_CHASING__ == true then
    arrivalCompass:centerOn()
  else
    arrivalCompass:centerOff()
  end

  if exits == nil then
    arrivalCompass:nwOff()
    arrivalCompass:nOff()
    arrivalCompass:neOff()
    arrivalCompass:eOff()
    arrivalCompass:seOff()
    arrivalCompass:sOff()
    arrivalCompass:swOff()
    arrivalCompass:wOff()  
    return  
  end
  
  if table.contains(exits, &quot;polnocny-zachod&quot;) then
    arrivalCompass:nwOn()
  else
    arrivalCompass:nwOff()
  end

  if table.contains(exits, &quot;polnoc&quot;) then
    arrivalCompass:nOn()
   else
    arrivalCompass:nOff()
  end

  if table.contains(exits, &quot;polnocny-wschod&quot;) then
    arrivalCompass:neOn()
   else
    arrivalCompass:neOff()
  end

  if table.contains(exits, &quot;wschod&quot;) then
    arrivalCompass:eOn()
   else
    arrivalCompass:eOff()
  end

  if table.contains(exits, &quot;poludniowy-wschod&quot;) then
    arrivalCompass:seOn()
   else
    arrivalCompass:seOff()
  end

  if table.contains(exits, &quot;poludnie&quot;) then
    arrivalCompass:sOn()
   else
    arrivalCompass:sOff()
  end

  if table.contains(exits, &quot;poludniowy-zachod&quot;) then
    arrivalCompass:swOn()
   else
    arrivalCompass:swOff()
  end

  if table.contains(exits, &quot;zachod&quot;) then
    arrivalCompass:wOn()
   else
    arrivalCompass:wOff()
  end
end

function arrivalCompassScript()
  -- changing room should refresh the table
  arrivalCompass.arrivalTable = { } 
  arrivalCompass:resize()
  arrivalCompass:refreshLabels()  
end

function arrivalCompass.resize()
  arrivalCompass.back:resize(arrivalCompass.back:get_height(),arrivalCompass.back:get_height())
end





-- set styles
arrivalCompass.borderWidth = &quot;1px;&quot;
arrivalCompass.borderStyle = &quot;solid;&quot;
arrivalCompass.borderRadius = &quot;1px;&quot;

arrivalCompass.bgOnColor = &quot;rgba(0,0,120,100%);&quot;
arrivalCompass.borderOnColor = &quot;rgba(0,0,250,100%);&quot;

arrivalCompass.bgOffColor = &quot;rgba(0,0,30,100%);&quot;
arrivalCompass.borderOffColor = &quot;rgba(0,0,30,100%);&quot;

arrivalCompass.styleOn = [[
    background-color: ]] .. arrivalCompass.bgOnColor .. [[
    border-width: ]] .. arrivalCompass.borderWidth .. [[
    border-style: ]] .. arrivalCompass.borderStyle .. [[
    border-color: ]] .. arrivalCompass.borderOnColor .. [[
    border-radius: ]] .. arrivalCompass.borderRadius .. [[
  ]]

arrivalCompass.styleOff = [[
    background-color: ]] .. arrivalCompass.bgOffColor .. [[
    border-width: ]] .. arrivalCompass.borderWidth .. [[
    border-style: ]] .. arrivalCompass.borderStyle .. [[
    border-color: ]] .. arrivalCompass.borderOffColor .. [[
    border-radius: ]] .. arrivalCompass.borderRadius .. [[
  ]]
-- On ------------------------------------

function arrivalCompass.nwOn()
  --arrivalCompass.n:setColor(0, 255, 0)
  arrivalCompass.nw:setStyleSheet(arrivalCompass.styleOn)  
  --arrivalCompass.nw:echo(&quot;NW&quot;, nil, &quot;c&quot;)
end

function arrivalCompass.nOn()
  arrivalCompass.n:setStyleSheet(arrivalCompass.styleOn)  
  --arrivalCompass.n:echo(&quot;N&quot;, nil, &quot;c&quot;)
end

function arrivalCompass.neOn()
  arrivalCompass.ne:setStyleSheet(arrivalCompass.styleOn)  
end

function arrivalCompass.eOn()
  arrivalCompass.e:setStyleSheet(arrivalCompass.styleOn)  
end

function arrivalCompass.seOn()
  arrivalCompass.se:setStyleSheet(arrivalCompass.styleOn) 
end

function arrivalCompass.sOn()
  arrivalCompass.s:setStyleSheet(arrivalCompass.styleOn)  
end

function arrivalCompass.swOn()
  arrivalCompass.sw:setStyleSheet(arrivalCompass.styleOn) 
end

function arrivalCompass.wOn()
  arrivalCompass.w:setStyleSheet(arrivalCompass.styleOn) 
end

function arrivalCompass.centerOn()
  arrivalCompass.w:setStyleSheet(arrivalCompass.styleOn) 
end


-- Off ------------------------------------
function arrivalCompass.nwOff()
  arrivalCompass.nw:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.nOff()
  arrivalCompass.n:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.neOff()
  arrivalCompass.ne:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.eOff()
  arrivalCompass.e:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.seOff()
  arrivalCompass.se:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.sOff()
  arrivalCompass.s:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.swOff()
  arrivalCompass.sw:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.wOff()
  arrivalCompass.w:setStyleSheet(arrivalCompass.styleOff)
end

function arrivalCompass.centerOff()
  arrivalCompass.center:setStyleSheet(arrivalCompass.styleOff)
end</script>
                    <eventHandlerList>
                        <string>sysWindowResizeEvent</string>
                        <string>gmcp.Room.Info</string>
                    </eventHandlerList>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Obsolete</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="no" isFolder="no">
                    <name>mapperTestScript</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

-- mapper functions:
-- http://wiki.mudlet.org/w/Manual:Mapper_Functions#createRoomID

-- mapping script:
-- http://wiki.mudlet.org/w/Mapping_script

--mudlet = mudlet or {}; mudlet.mapper_script = true


--__IS_DEBUG_ON__ = true
--__IS_MAPPER_MODE_ON__ = false
--__CURRENT_AREA_ID__ = nil
--__CURRENT_ROOM_ID__ = nil
--__LAST_ROOM_ID__ = nil     -- last added/visited room id
--__LAST_AREA_ID__ = nil     -- last added/visited area
--__IS_MAPPING_MODE_ON__ = false

--_LAST_AREA_ID = nil
--_LAST_ROOM_ID = nil
--_CURRENT_ROOM_ID = nil


--mudlet = mudlet or {}; mudlet.mapper_script = true
--mapperScript = mapperScript or {}



--local main = Geyser.Container:new({x=0,y=0,width=&quot;100%&quot;,height=&quot;100%&quot;,name=&quot;mapperContainer&quot;})
 
mapperScript.mapper = Geyser.Mapper:new({
  name = &quot;mapperScript.mapper&quot;,
  x = &quot;70%&quot;, y = 0, -- edit here if you want to move it
  width = &quot;30%&quot;, height = &quot;50%&quot;
}, main)


function mapperScript.CreateFirstLocation()
  cecho(&quot;&lt;yellow&gt; Creating first location\n&lt;reset&gt;&quot;)
end


function mapperScript.createRoom(areaName, x, y, z)
  if mapperScript.areaExists(areaName) then
    local roomId = createRoomID()
    local areaId = mapperScript.findAreaID(areaName)
    addRoom(roomID)
    setRoomCoordinates(roomId, x, y, z)    
    setRoomArea(roomId, areaId)  
  end
end

function mapperScript.areaExists(areaname)
  local id, msg = mapperScript.findAreaID(areaname)
  if id then
    if __IS_DEBUG_ON__ then cecho(&quot;Area: &quot; .. areaname .. &quot; already exists\n&quot;) end
    return true
  else
    if __IS_DEBUG_ON__ then cecho(&quot;Area: &quot; .. areaname .. &quot; does no exist\n&quot;) end
    return false
  end
end

-- using the sample findAreaID() function defined in the getAreaTable() example, 
-- we'll define a function that echo's us a nice list of all rooms in an area with their ID
function mapperScript.roomExistsArNm(areaname, x, y, z)
  local id, msg = mapperScript.findAreaID(areaname)
  if id then
    local roomlist, endresult = getAreaRooms(id), {}
    if table.size(roomlist) &lt; 1 then
      if __IS_DEBUG_ON__ then cecho(&quot;There are no rooms in this area\n&quot;) end
      return false
    end 

    local eX, eY, eZ

    -- obtain a room list for each of the room IDs we got
    -- for key, value in pairs(table) do ...
    for _, id in ipairs(roomlist) do
      --endresult[id] = getRoomName(id)
      local eX, eY, eZ = getRoomCoordinates(id)
      if (eX == x and eY == y and eZ == z) then
        return true
      end
    end

    return false

  elseif not id and msg then
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;yellow&gt;ID not found; &quot; .. msg .. &quot;\n&lt;reset&gt;&quot;) end
    return false
  else
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;yellow&gt;No areas matched the query.\n&lt;reset&gt;&quot;) end
    return false
  end
end

function mapperScript.roomExistsArId(areaId, x, y, z)
  if areaId then
    local roomlist, endresult = getAreaRooms(areaId), {}
    if table.size(roomlist) &lt; 1 then
      if __IS_DEBUG_ON__ then cecho(&quot;There are no rooms in this area\n&quot;) end
      return false
    end 

    local eX, eY, eZ

    -- obtain a room list for each of the room IDs we got
    -- for key, value in pairs(table) do ...
    for _, id in ipairs(roomlist) do
      --endresult[id] = getRoomName(id)
      local eX, eY, eZ = getRoomCoordinates(id)
      if __IS_DEBUG_ON__ then cecho(&quot;Checking coordinates: (&quot;.. eX .. &quot;, &quot; .. eY .. &quot;, &quot; .. eZ .. &quot;)\n&quot;) end
      if (eX == x and eY == y and eZ == z) then
        return true
      end
    end

    return false

  elseif not id and msg then
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;yellow&gt;ID not found; &quot; .. msg .. &quot;\n&lt;reset&gt;&quot;) end
    return false
  else
    if __IS_DEBUG_ON__ then cecho(&quot;&lt;yellow&gt;No areas matched the query.\n&lt;reset&gt;&quot;) end
    return false
  end
end

-- example function that returns the area ID for a given area
function mapperScript.findAreaID(areaname)
  local list = getAreaTable()
 
  -- iterate over the list of areas, matching them with substring match. 
  -- if we get match a single area, then return it's ID, otherwise return
  -- 'false' and a message that there are than one are matches
  local returnid, fullareaname
  for area, id in pairs(list) do
    if area:find(areaname, 1, true) then
      if returnid then return false, &quot;more than one area matches&quot; end
      returnid = id; fullareaname = area
    end
  end
 
  return returnid, fullareaname
end

function mapperScript.createArea(areaName)
  local t = getAreaTable(); local tr = {}; for k,v in pairs(t) do tr[v] = k end
  local newid = table.maxn(tr) + 1

  setAreaName( newid, areaName)
end


























</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="no" isFolder="no">
                    <name>mmpTrackingScript</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

mmpTracking = mmpTracking or {}

function mmpTrackingScript()
  
  if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;blue&gt;mmpTrakcking invoked.\n&lt;reset&gt;&quot;) end

  if __IS_TRACKING_ON__ == false then
    return
  end

  if gmcp.room.info.map == nil then
    --TODO: Invoke manual tracking (from input)
      if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;There is no GMCP map data. Try to add this room manually\n&lt;reset&gt;&quot;) end
    return
  else
    mmpTracking.knownMapTracking()
  end


end

function mmpTracking.knownMapTracking()
  local domain = string.lower(gmcp.room.info.map.domain)
  local name = string.lower(gmcp.room.info.map.name)
  local x  = tonumber(gmcp.room.info.map.x)
  local y  = tonumber(gmcp.room.info.map.y)
  local z = 0  -- for known map z is always 0
  local offsetKeyX = domain .. &quot;_&quot; .. name .. &quot;_x&quot;
  local offsetKeyY = domain .. &quot;_&quot; .. name .. &quot;_y&quot;

  if mmpOffsets.offsets[offsetKeyX] == nil then
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: offset table does not contain a proper key\n&lt;reset&gt;&quot;) end
    return
  end 

  x = mmpOffsets.knownToMapX(x, mmpOffsets.offsets[offsetKeyX])
  y = mmpOffsets.knownToMapY(y, mmpOffsets.offsets[offsetKeyY])
  
  local roomIds = getRoomsByPosition(__CURRENT_AREA_ID__, x, y, z)
  display(getRoomsByPosition(__CURRENT_AREA_ID__, x, y, z))
  if next(roomIds) ~= nil then
  --if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;blue&gt;Centering. Room id = &quot; .. roomIds[0] .. &quot;\n&lt;reset&gt;&quot;) end
    __LAST_ROOM_ID__ = __CURRENT_ROOM_ID__
    __CURRENT_ROOM_ID__  = roomId
    centerview(roomIds[0])
  else
    if __IS_DEBUG_ON__ == true then cecho(&quot;&lt;red&gt;Error: room id is nil\n&lt;reset&gt;&quot;) end
  end

end










</script>
                    <eventHandlerList>
                        <string>gmcp.room.info</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="no" isFolder="no">
                    <name>mmpOffsets</name>
                    <packageName></packageName>
                    <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--przygotowaniu tekstowych map (szerokosc 120 znakow, wysokosc dowolna)
--http://arkadia.rpg.pl/forum/viewtopic.php?f=4&amp;t=588&amp;hilit=mapy+www

mmpOffsets = mmpOffsets or {}

function mmpOffsets.knownToMapX(knownX, offsetX)
  local x = knownX + offsetX
  return x
end

function mmpOffsets.knownToMapY(knownY, offsetY)
  -- y is equal to 0 at top of each map so when it increases
  -- the real y decreases and vice versa
  local y = -knownY + offsetY
  return y
end

-- Nuln center square
mmpOffsets.zeroX = -77 
mmpOffsets.zeroY = -39


-- How much should we add to get our map (0, 0)
mmpOffsets.offsets = {}                        -- arkadia default (0, 0) is TOP left
mmpOffsets.offsets[&quot;imperium_nuln_x&quot;] = 0  
mmpOffsets.offsets[&quot;imperium_nuln_y&quot;] = 0


mmpOffsets.offsets[&quot;imperium_stirland_x&quot;] = 56
mmpOffsets.offsets[&quot;imperium_stirland_y&quot;] = -37</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Herbs</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>herbsIdentification</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

--http://stackoverflow.com/questions/656199/search-for-an-item-in-a-lua-list

function Set (list)
  local set = {}
  for _, l in ipairs(list) do set[l] = true end
  return set
end

hbid = hbid or {}

hbid.tatarak = Set { &quot;aromatyczne klacze&quot; }
hbid.czosnek = Set { 
  &quot;biala pachnaca cebulka&quot;,
  &quot;biala pachnaca cebulke&quot;,
  }
hbid.rosiczkaOkraglolistna = Set {
  &quot;bialokwitnaca drobna roslinka&quot;,
  &quot;bialokwitnaca drobna roslinke&quot;,
  }
hbid.glog = Set {&quot;bialy maly kwiat&quot;}
hbid.mandragora = Set {&quot;bialy rozgaleziony korzen&quot;}
hbid.stroczek = Set {
  &quot;bialy zmutowany grzybek&quot;,
  &quot;bialego zmutowanego grzybka&quot;,
  }
hbid.grabiorog = Set {&quot;brazowawy fosforyzujacy mech&quot;}
hbid.kolaZaostrzona = Set {&quot;brazowe okragle nasionko&quot;}
hbid.bagno = Set {
  &quot;brudnobrazowa cuchnaca galazka&quot;,
  &quot;brudnobrazowa cuchnaca galazke&quot;,
  }
hbid.lulekJadowity = Set {&quot;brudnozolty fioletowo-zylkowany kwiat&quot;}
hbid.pieciornikKruczeZiele = Set {&quot;ciemne poskrecane klacze&quot;}
hbid.pierscieniak = Set {&quot;ciemnoniebieski sluzowaty grzyb&quot;}
hbid.rojnik = Set {
  &quot;ciemnozielona rozwarta rozyczka&quot;,
  &quot;ciemnozielona rozwarta rozyczke&quot;,
  }
hbid.ciemiernik = Set {&quot;ciemny splatany korzen&quot;}
hbid.kruszyna = Set {
  &quot;cienka ukwiecona galazka&quot;,
  &quot;cienka ukwiecona galazke&quot;,
  }
hbid.bobotrutkaKalabarska = Set {
  &quot;czarna blyszczaca fasolka&quot;,
  &quot;czarna blyszczaca fasolke&quot;,
  }
hbid.pokrzyk = Set {
  &quot;czarna lsniaca jagoda&quot;,
  &quot;czarna lsniaca jagode&quot;,
  }
hbid.bulwianka = Set {&quot;czarne aromatyczne ziarenko&quot;}
hbid.sliwaTarnina = Set {&quot;czarny niewielki owoc&quot;}
hbid.rabarbar = Set {&quot;czerwonawy duzy lisc&quot;}
hbid.dziurawiec = Set {
  &quot;czterokanciasta rozgaleziona lodyga&quot;,
  &quot;czterokanciasta rozgaleziona lodyge&quot;,
  }
hbid.glistnik = Set {&quot;czteroplatkowy zolty kwiatek&quot;}
hbid.bozeDrzewko = {
  &quot;delikatna dluga lodyga&quot;,
  &quot;delikatna dluga lodyge&quot;,
  }
hbid.muchomorCzerwony = Set {&quot;delikatny czerwony grzyb&quot;}
hbid.muchomorSromotnikowy = Set {&quot;delikatny jasny grzyb&quot;}
hbid.konopia = Set {
  &quot;dluga lodyga&quot;,
  &quot;dluga lodyge&quot;,
  }
hbid.piolun = Set {
  &quot;dluga pachnaca lodyga&quot;,
  &quot;dluga pachnaca lodyge&quot;,
  }
hbid.chrzan = Set {&quot;dlugi bialy korzen&quot;}
hbid.swietlik = Set {
  &quot;drobna ukwiecona galazka&quot;,
  &quot;drobna ukwiecona galazke&quot;,
  }
hbid.rumianekPospolity = Set {&quot;drobny bialy kwiatek&quot;}
hbid.siezygron = Set {
  &quot;duza granatowa jagoda&quot;,
  &quot;duza granatowa jagode&quot;,
  }
hbid.bielun = Set {&quot;duzy bialy kwiat&quot;}
hbid.ostrozeczkaPolna = Set {&quot;duzy fioletowy kwiat&quot;}
hbid.kulczyba = Set {&quot;dziwne zoltoszare nasionko&quot;}
hbid.ogorecznik = Set {&quot;eliptyczny zaostrzony lisc&quot;}
hbid.barwinek = Set {&quot;fioletowy lejkowaty kwiat&quot;}
hbid.lawenda = Set {&quot;fioletowy zwarty kwiatostan&quot;}
hbid.bylicaPiolun = Set {
  &quot;galeziasta szaroowlosiona lodyga&quot;,
  &quot;galeziasta szaroowlosiona lodyge&quot;,
  }
hbid.ostrozen = Set {
  &quot;galezista sinozielona lodyga&quot;,
  &quot;galezista sinozielona lodyge&quot;,
  }
hbid.oman = Set {&quot;grube klacze &quot;}
hbid.pokrzykWilczaJagoda = Set {&quot;grube walcowate klacze&quot;}
hbid.rdestWezownik = Set {&quot;grube wygiete klacze&quot;}
hbid.borowikKrolewski = Set {&quot;gruby brazowy grzyb&quot;}
hbid.borowikSzatanski = Set {&quot;gruby szarawy grzyb&quot;}
hbid.hubka = Set {&quot;grzybi suchy kapelusz&quot;}

hbid.stulicha = Set {&quot;jaskrawozolty drobny kwiat&quot;}
hbid.nawloc = Set {
  &quot;jasnobrazowa ulistniona lodyga&quot;,
  &quot;jasnobrazowa ulistniona lodyge&quot;,
  }
hbid. bezCzarny = Set {
  &quot;jasnobrunatna popekana galazka&quot;,
  &quot;jasnobrunatna popekana galazke&quot;,
  }
hbid.szafran = Set {&quot;jasnofioletowy delikatny kwiat&quot;}
hbid.zimowit = Set {&quot;jasnofioletowy dlugi kwiat&quot;}
hbid.nagietek = Set {&quot;jasnopomaranczowy kwiat&quot;}
hbid.lulecznicaKrainska = Set {
  &quot;jasnozielona nieowlosiona lodyga&quot;,
  &quot;jasnozielona nieowlosiona lodyge&quot;,
  }
hbid.pierscieniakGrynszpanowy = Set {&quot;jasnozielony sluzowaty grzyb&quot;}
hbid.pokrzywa = Set {
  &quot;kanciasta parzaca lodyga&quot;,
  &quot;kanciasta parzaca lodyge&quot;,
  }
hbid.bylicaPospolita = Set {
  &quot;kanciasta rozgaleziona lodyga&quot;,
  &quot;kanciasta rozgaleziona lodyge&quot;,
  }
hbid.oset = Set {
  &quot;kolczasta wysuszona roslina&quot;,
  &quot;kolczasta wysuszona rosline&quot;,
  }
hbid.kasztanowiecZwyczajny = Set {&quot;kosmatoowlosiony kwiatostan&quot;}
hbid.przelot = Set {&quot;kremowy owlosiony kwiat&quot;}
hbid.deren = Set {&quot;lsniacy czerwony owoc&quot;}
hbid.komosa = Set {
  &quot;macznistoowlosiona szarawa roslina&quot;,
  &quot;macznistoowlosiona szarawa rosline&quot;,
  }
hbid.chmiel = Set {
  &quot;mala zoltozielona szyszka&quot;,
  &quot;mala zoltozielona szyszke&quot;,
  }
hbid.jerzyna = Set {&quot;maly czarny owoc&quot;}
hbid.serceKapitana = Set {&quot;maly czerwony kwiat&quot;}
hbid.malina = Set {&quot;maly czerwony owoc&quot;}
hbid.jagoda = Set {&quot;maly fioletowy owoc&quot;}
hbid.adanat = Set {&quot;maly szorstki lisc&quot;}
hbid.casur = Set {&quot;mazisty bulwiasty grzyb&quot;}
hbid.pierscieniak2 = Set {&quot;miedziany sluzowaty grzyb&quot;}
hbid.muchomorCesarski  = Set {&quot;miedzianozielony fosforyzujacy grzyb&quot;}
hbid.pierscieniak3 = Set {&quot;niebieski sluzowaty grzyb&quot;}
hbid.maslakZwyczajny = Set {&quot;nieduzy brazowy grzyb&quot;}
hbid.urzetBarwierski = Set {
  &quot;niepozorna sinozielona roslinka&quot;,
  &quot;niepozorna sinozielona roslinke&quot;,
  }
hbid.czarnuszka = Set {&quot;niewielki brunatny koszyczek&quot;}
hbid.poziomka = Set {&quot;niewielki czerwony owoc&quot;}
hbid.makownik = Set {&quot;niewielki fioletowy kwiat&quot;}
hbid.makLekarski = Set {&quot;okazaly pachnacy kwiat&quot;}
hbid.mieta = Set {&quot;okraglawy aromatyczny lisc&quot;}
hbid.jemiola = Set {
  &quot;oliwkowozielona gietka galazka&quot;,
  &quot;oliwkowozielona gietka galazke&quot;,
  }
hbid.melisa = Set {&quot;owlosiony aromatyczny lisc&quot;}
hbid.krasnodrzewPospolity = Set {&quot;pachnacy jasnozielony lisc&quot;}
hbid.grzybien = Set {&quot;pachnacy snieznobialt kwiat&quot;}
hbid.makPolny = Set {&quot;piekny czerwony kwiat&quot;}
hbid.potoslinPierzasty = Set {&quot;pierzasty ogonkowy lisc&quot;}
hbid.szalejJadowity = Set {&quot;pomaranczowy maly korzen&quot;}
hbid.pietruszkaZwyczajna = Set {
  &quot;rozdeta aromatyczna lodyga&quot;,
  &quot;rozdeta aromatyczna lodyge&quot;,
  }
hbid.babka = Set {&quot;rozetkowaty lancetowaty lisc&quot;}
hbid.stroiczkaRozdeta = Set {
  &quot;rozgaleziona owlosiona lodyga&quot;,
  &quot;rozgaleziona owlosiona lodyge&quot;,
  }
hbid.jaskierOstry = Set {
  &quot;rozgaleziona wzniesiona lodyga&quot;,
  &quot;rozgaleziona wzniesiona lodyge&quot;,
  }
hbid.przesl = Set {
  &quot;rozgowata zoltozielona galazka&quot;,
  &quot;rozgowata zoltozielona galazke&quot;,
  }
hbid.marzannaBarwierska = Set {&quot;rozwiniety korzen&quot;}
hbid.bylicaCytwarowa  = Set {&quot;rurkowaty oliwkowobrunatny kwiat&quot;}
hbid.centuria = Set {
  &quot;smukla jasnozielona lodyga&quot;,
  &quot;smukla jasnozielona lodyge&quot;,
  }
hbid.nostrzykZolty = Set {
  &quot;smukla zielona lodyga&quot;,
  &quot;smukla zielona lodyge&quot;,
  }
hbid.drath = Set {&quot;soczysty karminowy mech&quot;}
hbid.naparstnica = Set {&quot;srebrzystoszary owlosiony lisc&quot;}
hbid.podgrzybekBrunatny = Set {&quot;sredni kasztanowobrazowy grzyb&quot;}
hbid.szczaw = Set {&quot;strzalkowaty aromatyczny lisc&quot;}
hbid.rauwolfia = Set {&quot;szarawe pogiete klacze&quot;}
hbid.plucnica = Set {&quot;szarozielony gabczasty porost&quot;}
hbid.boldoaAromatyczna = Set {&quot;szarozielony szorstki lisc&quot;}
hbid.lubczykOgrodowy = Set {&quot;szary aromatyczny korzen&quot;}
hbid.aralia = Set {&quot;szary kolczasty korzen&quot;}
hbid.poziewnikSzorstki = Set {
  &quot;szorstka ciemnozielona galazka&quot;,
  &quot;szorstka ciemnozielona galazke&quot;,
  }
hbid.lakPospolity = Set {
  &quot;sztywna smukla lodyga&quot;,
  &quot;sztywna smukla lodyge&quot;,
  }
hbid.lukrecja = Set {&quot;sztywny rozgaleziony korzen&quot;}
hbid.borowkaCzerwona  = Set {&quot;twardy czerwony owoc&quot;}
hbid.krwawnik = Set {
  &quot;ukwiecona lodyga&quot;,
  &quot;ukwiecona lodyge&quot;,
  }
hbid.czeremcha = Set {
  &quot;ulistniona aromatyczna galazka&quot;,
  &quot;ulistniona aromatyczna galazke&quot;,
  }
hbid.kurzysladPolny = Set {
  &quot;wiotka drobna lodyzka&quot;,
  &quot;wiotka drobna lodyzke&quot;,
  }
hbid.janowiecBarwierski = Set {
  &quot;wiotka kwitnaca galazka&quot;,
  &quot;wiotka kwitnaca galazke&quot;,
  }
hbid.konwaliaMajowa = Set {&quot;wonny dzwonkowaty kwiatek&quot;}
hbid.chaberBlawatek = Set {&quot;wysoki blekitny kwiat&quot;}
hbid.kozlarzCzerwony = Set {&quot;wysoki czerwonawy grzyb&quot;}
hbid.borowikSzlachetny = Set {&quot;wysoki jasnobrazowy grzyb&quot;}
hbid.starzecJakubek = Set {&quot;wysoki zolty kwiat&quot;}
hbid.kocimietkaWlasciwa = Set {
  &quot;wzniesiona owlosiona lodyga&quot;,
  &quot;wzniesiona owlosiona lodyge&quot;,
  }
hbid.tojad = Set {
  &quot;wzniesiona ukwiecona lodyga&quot;,
  &quot;wzniesiona ukwiecona lodyge&quot;,
  }
hbid.szalwia = Set {&quot;zaostrzony podluzny lisc&quot;}
hbid.macznicaLekarska = Set {
  &quot;zdrewniala rozgaleziona krzewinka&quot;,
  &quot;zdrewniala rozgaleziona krzewinke&quot;,
  }
hbid.kruszyna = Set {
  &quot;zdrewniala zwinieta rurka&quot;,
  &quot;zdrewniala zwinieta rurke&quot;,
  }
hbid.hyzop = Set {
  &quot;zielona kwitnaca krzewinka&quot;,
  &quot;zielona kwitnaca krzewinke&quot;,
  }
hbid.skrzypPolny = Set {
  &quot;zielona trzeszczaca galazka&quot;,
  &quot;zielona trzeszczaca galazke&quot;,
  }
hbid.trawa = Set {&quot;zielone lancetowate liscie&quot;}
hbid.drabikDrzewkowaty = Set {&quot;zielone postrzepione galazki&quot;}
hbid.rdestPtasi = Set {&quot;zielony galezisty ped&quot;}
hbid.ciemiezyca = Set {&quot;zielony miesisty kwiat&quot;}
hbid.pierscieniak4 = Set {&quot;zielony sluzowaty grzyb&quot;}
hbid.cebulaBylicaCytwarowa = Set {&quot;zlociste spore ziolo&quot;}
hbid.arnika = Set {&quot;zlocistopomaranczowy duzy kwiat&quot;}
hbid.mniszek = Set {&quot;zlocistozolty kwiat&quot;}
hbid.krzyzownicaWirginijska = Set {&quot;zoltawy powyginany korzen&quot;}
hbid.ranog = Set {&quot;zoltoszary niepozorny korzen&quot;}
hbid.podbialPospolity = Set {&quot;zolty jaskrawy kwiat&quot;}
hbid.deliona = Set {&quot;zolty jasny kwiat&quot;}
hbid.wrotycz = Set {&quot;zolty rurkowaty kwiat&quot;}


function hbid.identify(herb)
  local echoString = &quot;echo string&quot;

  if hbid.tatarak[herb] then
    echoString = &quot;Tatarak&quot;
  elseif hbid.czosnek[herb] then
    echoString = (&quot;Czosnek&quot;)
  elseif hbid.rosiczkaOkraglolistna[herb] then
    echoString = (&quot;Rosiczka okraglolistna&quot;)
  elseif hbid.glog[herb] then
    echoString = (&quot;Glog&quot;)
  elseif hbid.mandragora[herb] then
    echoString = (&quot;Mandragora&quot;)
  elseif hbid.stroczek[herb] then
    echoString = (&quot;Stroczek&quot;)
  elseif hbid.grabiorog[herb] then
    echoString = (&quot;Grabiorog&quot;)
  elseif hbid.kolaZaostrzona[herb] then
    echoString = (&quot;Kola zaostrzona&quot;)
  elseif hbid.bagno[herb] then
    echoString = (&quot;Bagno&quot;)
  elseif hbid.lulekJadowity[herb] then
    echoString = (&quot;Lulek jadowity&quot;)
  elseif hbid.pieciornikKruczeZiele[herb] then
    echoString = (&quot;Pieciornik kurze ziele&quot;)
  elseif hbid.pierscieniak[herb] then
    echoString = (&quot;Pierscieniak 1&quot;)
  elseif hbid.rojnik[herb] then
    echoString = (&quot;Rojnik&quot;)
  elseif hbid.ciemiernik[herb] then
    echoString = (&quot;Ciemiernik&quot;)
  elseif hbid.kruszyna[herb] then
    echoString = (&quot;Kruszyna&quot;)
  elseif hbid.bobotrutkaKalabarska[herb] then
    echoString = (&quot;Bobotrutka kalabarska&quot;)
  elseif hbid.pokrzyk[herb] then
    echoString = (&quot;Pokrzyk&quot;)
  elseif hbid.bulwianka[herb] then
    echoString = (&quot;Bulawinka&quot;)
  elseif hbid.sliwaTarnina[herb] then
    echoString = (&quot;Sliwa tarnina&quot;)
  elseif hbid.rabarbar[herb] then
    echoString = (&quot;Rabarbar&quot;)
  elseif hbid.dziurawiec[herb] then
    echoString = (&quot;Dziurawiec&quot;)
  elseif hbid.glistnik[herb] then
    echoString = (&quot;Glistnik&quot;)
  elseif hbid.bozeDrzewko[herb] then
    echoString = (&quot;Boze drzewko&quot;)
  elseif hbid.muchomorCzerwony[herb] then
    echoString = (&quot;Muchomor czerwony&quot;)
  elseif hbid.muchomorSromotnikowy[herb] then
    echoString = (&quot;Muchomor sromotnikowy&quot;)
  elseif hbid.konopia[herb] then
    echoString = (&quot;Konopia&quot;)
  elseif hbid.piolun[herb] then
    echoString = (&quot;Piolun&quot;)
  elseif hbid.chrzan[herb] then
    echoString = (&quot;Chrzan&quot;)
  elseif hbid.swietlik[herb] then
    echoString = (&quot;Swietlik&quot;)
  elseif hbid.rumianekPospolity[herb] then
    echoString = (&quot;Rumianek pospolity&quot;)
  elseif hbid.siezygron[herb] then
    echoString = (&quot;Siezygron&quot;)
  elseif hbid.bielun[herb] then
    echoString = (&quot;Bielun&quot;)
  elseif hbid.ostrozeczkaPolna[herb] then
    echoString = (&quot;Ostrozeczka polna&quot;)
  elseif hbid.kulczyba[herb] then
    echoString = (&quot;Kulczyba&quot;)
  elseif hbid.ogorecznik[herb] then
    echoString = (&quot;Ogorecznik&quot;)
  elseif hbid.barwinek[herb] then
    echoString = (&quot;Barwinek&quot;)
  elseif hbid.lawenda[herb] then
    echoString = (&quot;Lawenda&quot;)
  elseif hbid.bylicaPiolun[herb] then
   echoString = (&quot;Bylica piolun&quot;)
  elseif hbid.ostrozen[herb] then
    echoString = (&quot;Ostrozen&quot;)
  elseif hbid.oman[herb] then
    echoString = (&quot;Oman&quot;)
  elseif hbid.pokrzykWilczaJagoda[herb] then
    echoString = (&quot;Pokrzyk wilcza jagoda&quot;)
  elseif hbid.rdestWezownik[herb] then
    echoString = (&quot;Rdest wezownik&quot;)
  elseif hbid.borowikKrolewski[herb] then
    echoString = (&quot;Borowik krolewski&quot;)
  elseif hbid.borowikSzatanski[herb] then
    echoString = (&quot;Borowik szatanski&quot;)
  elseif hbid.hubka[herb] then
    echoString = (&quot;Hubka&quot;)
  elseif hbid.stulicha[herb] then
    echoString = (&quot;Stulicha&quot;)
  elseif hbid.nawloc[herb] then
    echoString = (&quot;Nawloc&quot;)
  elseif hbid.bezCzarny[herb] then
    echoString = (&quot;Bez czarny&quot;)
  elseif hbid.szafran[herb] then
    echoString = (&quot;Szafran&quot;)
  elseif hbid.zimowit[herb] then
    echoString = (&quot;Zimowit&quot;)
  elseif hbid.nagietek[herb] then
    echoString = (&quot;Nagietek&quot;)
  elseif hbid.lulecznicaKrainska[herb] then
    echoString = (&quot;Lulecznica krainska&quot;)
  elseif hbid.pierscieniakGrynszpanowy[herb] then
    echoString = (&quot;Pierscieniak grynszpanowy&quot;)
  elseif hbid.pokrzywa[herb] then
    echoString = (&quot;Pokrzywa&quot;)
  elseif hbid.bylicaPospolita[herb] then
    echoString = (&quot;Bylica pospolita&quot;)
  elseif hbid.oset[herb] then
    echoString = (&quot;Oset&quot;)
  elseif hbid.kasztanowiecZwyczajny[herb] then
    echoString = (&quot;Kasztanowiec zwyczajny&quot;)
  elseif hbid.przelot[herb] then
    echoString = (&quot;Przelot&quot;)
  elseif hbid.deren[herb] then
    echoString = (&quot;Deren&quot;)
  elseif hbid.komosa[herb] then
    echoString = (&quot;Komosa&quot;)
  elseif hbid.chmiel[herb] then
    echoString = (&quot;Chmiel&quot;)
  elseif hbid.jerzyna[herb] then
    echoString = (&quot;Jerzyna&quot;)
  elseif hbid.serceKapitana[herb] then
    echoString = (&quot;Serce kapitana&quot;)
  elseif hbid.malina[herb] then
    echoString = (&quot;Malina&quot;)
  elseif hbid.jagoda[herb] then
    echoString = (&quot;Jagoda&quot;)
  elseif hbid.adanat[herb] then
    echoString = (&quot;Adanat&quot;)
  elseif hbid.casur[herb] then
    echoString = (&quot;Casur&quot;)
  elseif hbid.pierscieniak2[herb] then
    echoString = (&quot;Pierscieniak 2&quot;)
  elseif hbid.muchomorCesarski[herb] then
    echoString = (&quot;Muchomor cesarski&quot;)
  elseif hbid.pierscieniak3[herb] then
    echoString = (&quot;Pierscieniak 3&quot;)
  elseif hbid.maslakZwyczajny[herb] then
    echoString = (&quot;Maslak zwyczajny&quot;)
  elseif hbid.urzetBarwierski[herb] then
    echoString = (&quot;Urzet barwierski&quot;)
  elseif hbid.czarnuszka[herb] then
    echoString = (&quot;Czarnuszka&quot;)
  elseif hbid.poziomka[herb] then
    echoString = (&quot;Poziomka&quot;)
  elseif hbid.makownik[herb] then
    echoString = (&quot;Makownik&quot;)
  elseif hbid.makLekarski[herb] then
    echoString = (&quot;Mak lekarski&quot;)
  elseif hbid.mieta[herb] then
    echoString = (&quot;Mieta&quot;)
  elseif hbid.jemiola[herb] then
    echoString = (&quot;Jemiola&quot;)
  elseif hbid.melisa[herb] then
    echoString = (&quot;Melisa&quot;)
  elseif hbid.krasnodrzewPospolity[herb] then
    echoString = (&quot;Krasnodrzew pospolity&quot;)
  elseif hbid.grzybien[herb] then
    echoString = (&quot;Grzybien&quot;)
  elseif hbid.makPolny[herb] then
    echoString = (&quot;Mak polny&quot;)
  elseif hbid.potoslinPierzasty[herb] then
    echoString = (&quot;Potoslin pierzasty&quot;)
  elseif hbid.szalejJadowity[herb] then
    echoString = (&quot;Szalej jadowity&quot;)
  elseif hbid.pietruszkaZwyczajna[herb] then
    echoString = (&quot;Pietruszka zwyczajna&quot;)
  elseif hbid.babka[herb] then
    echoString = (&quot;Babka&quot;)
  elseif hbid.stroiczkaRozdeta[herb] then
    echoString = (&quot;Stroiczka rozdeta&quot;)
  elseif hbid.jaskierOstry[herb] then
    echoString = (&quot;Jaskier ostry&quot;)
  elseif hbid.przesl[herb] then
    echoString = (&quot;Przesl&quot;)
  elseif hbid.marzannaBarwierska[herb] then
    echoString = (&quot;Marzanna barwierska&quot;)
  elseif hbid.bylicaCytwarowa[herb] then
    echoString = (&quot;Bylica cytwarowa&quot;)
  elseif hbid.centuria[herb] then
    echoString = (&quot;Centuria&quot;)
  elseif hbid.nostrzykZolty[herb] then
    echoString = (&quot;Nostrzyk zolty&quot;)
  elseif hbid.drath[herb] then
    echoString = (&quot;Drath&quot;)
  elseif hbid.naparstnica[herb] then
    echoString = (&quot;Naparstnica&quot;)
  elseif hbid.podgrzybekBrunatny[herb] then
    echoString = (&quot;Podgrzybek brunatny&quot;)
  elseif hbid.szczaw[herb] then
    echoString = (&quot;Szczaw&quot;)
  elseif hbid.rauwolfia[herb] then
    echoString = (&quot;Rauwolfia&quot;)
  elseif hbid.plucnica[herb] then
    echoString = (&quot;Plucnica&quot;)
  elseif hbid.boldoaAromatyczna[herb] then
    echoString = (&quot;Boldoa aromatyczna&quot;)
  elseif hbid.lubczykOgrodowy[herb] then
    echoString = (&quot;Lubczyk ogrodowy&quot;)
  elseif hbid.aralia[herb] then
    echoString = (&quot;Aralia&quot;)
  elseif hbid.poziewnikSzorstki[herb] then
    echoString = (&quot;Poziewnik szorstki&quot;)
  elseif hbid.lakPospolity[herb] then
    echoString = (&quot;Lak pospolity&quot;)
  elseif hbid.lukrecja[herb] then
    echoString = (&quot;Lukrecja&quot;)
  elseif hbid.borowkaCzerwona[herb] then
    echoString = (&quot;Borowka czerwona&quot;)
  elseif hbid.krwawnik[herb] then
    echoString = (&quot;Krwawnik&quot;)
  elseif hbid.czeremcha[herb] then
    echoString = (&quot;Czeremcha&quot;)
  elseif hbid.kurzysladPolny[herb] then
    echoString = (&quot;Kurzyslad polny&quot;)
  elseif hbid.janowiecBarwierski[herb] then
    echoString = (&quot;Janowiec barwierski&quot;)
  elseif hbid.konwaliaMajowa[herb] then
    echoString = (&quot;Konwalia majowa&quot;)
  elseif hbid.chaberBlawatek[herb] then
    echoString = (&quot;Chaber blawatek&quot;)
  elseif hbid.kozlarzCzerwony[herb] then
    echoString = (&quot;Kozlarz czerwony&quot;)
  elseif hbid.borowikSzlachetny[herb] then
    echoString = (&quot;Borowik szlachetny&quot;)
  elseif hbid.starzecJakubek[herb] then
    echoString = (&quot;Starzec - jakubek&quot;)
  elseif hbid.kocimietkaWlasciwa[herb] then
    echoString = (&quot;Kocimietka wlasciwa&quot;)
  elseif hbid.tojad[herb] then
    echoString = (&quot;Tojad&quot;)
  elseif hbid.szalwia[herb] then
    echoString = (&quot;Szalwia&quot;)
  elseif hbid.macznicaLekarska[herb] then
    echoString = (&quot;Macznica lekarska&quot;)
  elseif hbid.kruszyna[herb] then
    echoString = (&quot;Kruszyna&quot;)
  elseif hbid.hyzop[herb] then
    echoString = (&quot;Hyzop&quot;)
  elseif hbid.skrzypPolny[herb] then
    echoString = (&quot;Skrzyp polny&quot;)
  elseif hbid.trawa[herb] then
    echoString = (&quot;Trawa&quot;)
  elseif hbid.drabikDrzewkowaty[herb] then
    echoString = (&quot;Drabik drzewkowaty&quot;)
  elseif hbid.rdestPtasi[herb] then
    echoString = (&quot;Rdest ptasi&quot;)
  elseif hbid.ciemiezyca[herb] then
    echoString = (&quot;Ciemiezyca&quot;)
  elseif hbid.pierscieniak4[herb] then
    echoString = (&quot;Pierscieniak 4&quot;)
  elseif hbid.cebulaBylicaCytwarowa[herb] then
    echoString = (&quot;Cebula - Bylica cytwarowa&quot;)
  elseif hbid.arnika[herb] then
    echoString = (&quot;Arnika&quot;)
  elseif hbid.mniszek[herb] then
    echoString = (&quot;Mniszek&quot;)
  elseif hbid.krzyzownicaWirginijska[herb] then
    echoString = (&quot;Krzyzownica wirginijska&quot;)
  elseif hbid.ranog[herb] then
    echoString = (&quot;Ranog&quot;)
  elseif hbid.podbialPospolity[herb] then
    echoString = (&quot;Podbial pospolity&quot;)
  elseif hbid.deliona[herb] then
    echoString = (&quot;Deliona&quot;)
  elseif hbid.wrotycz[herb] then
    echoString = (&quot;Wrotycz&quot;)
  else
    echoString = (&quot;Niezidentyfikowano&quot;)
  end

  return echoString
end

</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>IO_Management</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>assessEq</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

aeq = aeq or {}

aeq.name = &quot;&quot;

aeq.state = &quot;&quot;
aeq.balance = &quot;&quot;
aeq.eff = &quot;&quot;

aeq.armType = &quot;&quot;
aeq.piercing = &quot;&quot;
aeq.slashing = &quot;&quot;
aeq.blunt = &quot;&quot;

aeq.parry = &quot;&quot;

aeq.ag = &quot;Fe&quot;

aeq.wg = -1
aeq.vol = -1
aeq.val = -1

aeq.th = 0

aeq.wpnPiercing = false
aeq.wpnSlashing = false
aeq.wpnBlunt = false



-- levels

aeq.wpnStateTable = {
  [&quot;w znakomitym stanie&quot;] = 7,
  [&quot;w dobrym stanie&quot;] = 6,
  [&quot;walki wyryly na niej swoje pietno&quot;] = 5,
  [&quot;walki wyryly na nim swoje pietno&quot;] = 5,
  [&quot;w zlym stanie&quot;] = 4,
  [&quot;w bardzo zlym stanie&quot;] = 3,
  [&quot;wymaga natychmiastowej konserwacji&quot;] = 2,
  [&quot;moze peknac w kazdej chwili&quot;] = 1,
}

aeq.armorStateTable = {
  [&quot;w znakomitym stanie&quot;] = 5,
  [&quot;lekko podniszczona&quot;] = 4,
  [&quot;lekko podniszczony&quot;] = 4,
  [&quot;lekko podniszczone&quot;] = 4,
  [&quot;w kiepskim stanie&quot;] = 3,
  [&quot;w oplakanym stanie&quot;] = 2,
  [&quot;gotowa rozpasc sie w kazdej chwili&quot;] = 1,
  [&quot;gotowy rozpasc sie w kazdej chwili&quot;] = 1,
  [&quot;gotowe rozpasc sie w kazdej chwili&quot;] = 1,
}

aeq.eqStateTable = {
  [&quot;calkiem nowy&quot;] = 5,
  [&quot;w miare nowy&quot;] = 4,
  [&quot;troche zuzyty&quot;] = 3,
  [&quot;w duzym stopniu zuzyty&quot;] = 2,
  [&quot;kompletnie zuzyty&quot;] = 1,
}

aeq.cloStateTable = {
  [&quot;calkiem nowe&quot;] = 5,
  [&quot;w miare nowe&quot;] = 4,
  [&quot;troche znoszone&quot;] = 3,
  [&quot;prawie calkiem znoszone&quot;] = 2,
  [&quot;gotowe rozpasc sie w kazdej chwili&quot;] = 1,
}

aeq.armorTable = {
  [&quot;wyjatkowo zle&quot;] = 1,
  [&quot;bardzo zle&quot;] = 2,
  [&quot;zle&quot;] = 3,
  [&quot;bardzo kiepsko&quot;] = 4,
  [&quot;kiepsko&quot;] = 5,
  [&quot;przyzwoicie&quot;] = 6,
  [&quot;niezle&quot;] = 7,
  [&quot;dosc dobrze&quot;] = 8,
  [&quot;dobrze&quot;] = 9,
  [&quot;bardzo dobrze&quot;] = 10,
  [&quot;doskonale&quot;] = 11,
  [&quot;perfekcyjnie&quot;] = 12,
}

aeq.balanceTable = {
  [&quot;wyjatkowo zle&quot;] = 1,
  [&quot;bardzo zle&quot;] = 2,
  [&quot;zle&quot;] = 3,
  [&quot;bardzo kiepsko&quot;] = 4,
  [&quot;kiepsko&quot;] = 5,
  [&quot;przyzwoicie&quot;] = 6,
  [&quot;srednio&quot;] =  7, 
  [&quot;niezle&quot;] = 8,
  [&quot;dosc dobrze&quot;] = 9,
  [&quot;dobrze&quot;] = 10,
  [&quot;bardzo dobrze&quot;] = 11,
  [&quot;doskonale&quot;] = 12,
  [&quot;perfekcyjnie&quot;] = 13,
  [&quot;genialnie&quot;] = 14,
}

aeq.effTable = {
  [&quot;kompletnie nieskuteczn&quot;] = 1,
  [&quot;strasznie nieskuteczn&quot;] = 2,
  [&quot;bardzo nieskuteczn&quot;] = 3,
  [&quot;raczej nieskuteczn&quot;] = 4,
  [&quot;malo skuteczn&quot;] = 5,
  [&quot;niezbyt skuteczn&quot;] = 6,
  [&quot;raczej skuteczn&quot;] =  7, 
  [&quot;dosyc skuteczn&quot;] = 8,
  [&quot;calkiem skuteczn&quot;] = 9,
  [&quot;bardzo skuteczn&quot;] = 10,
  [&quot;niezwykle skuteczn&quot;] = 11,
  [&quot;wyjatkowo skuteczn&quot;] = 12,
  [&quot;zabojczo skuteczn&quot;] = 13,
  [&quot;fantastycznie skuteczn&quot;] = 14,
}

aeq.typesTable = {
  [&quot;lekka&quot;] = &quot;L&quot;,
  [&quot;srednia&quot;] = &quot;S&quot;,
  [&quot;ciezka&quot;] = &quot;C&quot;,
  [&quot;tarcza&quot;] = &quot;T&quot;,
  [&quot;bron&quot;] = &quot;B&quot;,
  [&quot;ekw&quot;] = &quot;E&quot;,
  [&quot;ubranie&quot;] = &quot;U&quot;,
}

--string.findPattern(effectiveness, &quot;kompletnie nieskuteczn&quot;)
-- eof levels
function aeq.drawTable() 
   local spacesStr = &quot;                            &quot;

  -- Balance
  local balance = aeq.balance
  if table.contains(aeq.balanceTable, balance) then
    balance = aeq.balanceTable[balance]
  else
  --balance = &quot;-&quot;
    balance = -1
  end
  --balance = string.cut(balance .. spacesStr , 2)

  -- Efficiency
  local eff = aeq.eff
  if table.contains(aeq.effTable, eff) then
    eff = aeq.effTable[eff]
  else
    eff = -1
  end
  --eff = string.cut(eff .. spacesStr , 2)

  -- Type
  local type = aeq.armType
  if table.contains(aeq.typesTable, type) then
    type = aeq.typesTable[type]
  else
    type = &quot;-&quot;
  end
  --type = string.cut(type .. spacesStr , 2)

  -- Piercing
  local piercing = aeq.piercing
  if table.contains(aeq.armorTable, piercing) then
    piercing = aeq.armorTable[piercing]
  else
    piercing = -1
  end
  --piercing = string.cut(piercing .. spacesStr , 2)

  -- Slashing
  local slashing = aeq.slashing
  if table.contains(aeq.armorTable, slashing) then
    slashing = aeq.armorTable[slashing]
  else
    slashing = -1
  end
  --slashing = string.cut(slashing .. spacesStr , 2)

  -- Blunt
  local blunt = aeq.blunt
  if table.contains(aeq.armorTable, blunt) then
    blunt = aeq.armorTable[blunt]
  else
    blunt = -1
  end
  --blunt = string.cut(blunt .. spacesStr , 2)

  -- Parry
  local parry = aeq.parry
  if table.contains(aeq.effTable, parry) then
    parry = aeq.effTable[parry]
  else
    parry = -1
  end
  --parry = string.cut(parry .. spacesStr , 2)

  -- State
  local state = aeq.state  
  if aeq.armType == &quot;bron&quot; then
    if table.contains(aeq.wpnStateTable, state) then
      state = aeq.wpnStateTable[state]
    else
      state = -1
    end
  elseif aeq.armType == &quot;ekw&quot; then
    if table.contains(aeq.eqStateTable, state) then
      state = aeq.eqStateTable[state]
    else
      state = -1
    end
  elseif aeq.armType == &quot;ubranie&quot; then
    if table.contains(aeq.cloStateTable, state) then
      state = aeq.cloStateTable[state]
    else
      state = -1
    end
  else
    if table.contains(aeq.armorStateTable, state) then
      state = aeq.armorStateTable[state]
    else
      state = -1
    end
  end
  --state = string.cut(state .. spacesStr , 2)

    -- Silver weapon
  local silver = aeq.ag
  if aeq.armType ~= &quot;bron&quot; then
    silver = &quot;-&quot;
  end
  --silver = string.cut(silver .. spacesStr , 2)

  -- Weight
  local weight = aeq.wg / 1000
  weight = arkMath.round(weight, 2)
  weight = string.cut(weight .. spacesStr , 3)

  -- Volume
  local volume = aeq.vol / 1000
  volume = arkMath.round(volume, 2)
  volume = string.cut(volume .. spacesStr , 3)

  -- Value
  local value = (aeq.val / (20 * 12))
  value = arkMath.round(value, 2)
  value = string.cut(value .. spacesStr , 3)






  local width = 70

  --cecho(calign(&quot;some text&quot;, {alignment = &quot;center&quot;, width = 80, cap =&quot;{[[&quot;, spacer = &quot;=&quot;, inside = false, mirror = true}))

  echo(&quot;\n&quot;)
  --aeq.drawTopBorder(width)  
  --echo(&quot;\n&quot;)

  --local tableBar = 
   -- &quot;|            Name            | Bl  |Ef|Tp|Pr|Sl|Bl|Pr|St|Ag|Wgh|Vol|Val|       &quot;
  --moveCursorEnd()
  --insertText(tableBar)
  --echo(&quot;|            Name            |Bl|Ef|Tp|Pr|Sl|Bl|Pr|St|Ag|Wgh|Vol|Val|&quot;)
  --echo(tableBar)
  
 
  local name = string.cut(aeq.name .. spacesStr , 50)

  
  cecho(&quot;&lt;white&gt;Oceniam &quot; .. name .. &quot;&lt;reset&gt;&quot;)

local tableBar = 
  &quot;|Wywaz|Skute|Typ|Klute|Ciete|Obuch|Parow|Sta|Obraz|Waga|Objt|Wart|&quot;


  echo(tableBar .. &quot;\n&quot;)
  echo(&quot;|&quot;)
  aeq.echoBalance(balance)
  echo(&quot;|&quot;)
  aeq.echoEfficiency(eff)
  echo(&quot;|&quot;)
  aeq.echoType(type)
  echo(&quot;|&quot;)
  aeq.echoArmor(piercing)
  echo(&quot;|&quot;)
  aeq.echoArmor(slashing)
  echo(&quot;|&quot;)
  aeq.echoArmor(blunt)
  echo(&quot;|&quot;)
  aeq.echoEfficiency(parry)
  echo(&quot;|&quot;)
  aeq.echoState(state)
  echo(&quot;|&quot;)
  --aeq.echoSilver(silver)
  aeq.echoDmgType(silver)
  echo(&quot;|&quot;)
  aeq.echoNumerical(weight)
  echo(&quot;|&quot;)
  aeq.echoNumerical(volume)
  echo(&quot;|&quot;)
  aeq.echoNumerical(value)
  echo(&quot;|&quot;)                                                                 
  return
end

function aeq.cutString(str)
  local spacesStr = &quot;                                      &quot;
  return string.cut(str .. spacesStr , 2)
end

function aeq.echoBalance(balance)
  local value = balance

  --local balanceStr = string.cut(balance .. &quot;    &quot; , 2)
  if value == -1 then
    echo(&quot; n/a &quot;)
    return
  end

  local str = string.format(&quot;%+5s&quot;, tostring(value) .. &quot;/14&quot;)

  if value &lt; 4 then
    cecho (&quot;&lt;red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 6 then
    cecho (&quot;&lt;orange_red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 8 then
    cecho (&quot;&lt;orange&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 10 then
    cecho (&quot;&lt;yellow&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 12 then
    cecho (&quot;&lt;PaleGreen&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 14 then
    cecho (&quot;&lt;green&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  else
    cecho (&quot;&lt;purple&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  end
end

function aeq.echoEfficiency(efficiency)
  local value = efficiency
  --local spc = &quot;     &quot;
  --local balanceStr = string.cut(balance .. &quot;    &quot; , 2)
  if value == -1 then
    echo(&quot; n/a &quot;)
    return
  end

  local str = string.format(&quot;%+5s&quot;, tostring(value) .. &quot;/14&quot;)

  if value &lt; 4 then
    cecho(&quot;&lt;red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 6 then
    --cecho (&quot;&lt;orange_red&gt;&quot; .. string.cut(value ..&quot;/14&quot; .. spc , 5) .. &quot;&lt;reset&gt;&quot;)
    cecho(&quot;&lt;orange_red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 8 then
    cecho (&quot;&lt;orange&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 10 then
    cecho (&quot;&lt;yellow&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 12 then
    cecho (&quot;&lt;PaleGreen&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 14 then
    cecho (&quot;&lt;green&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  else
    cecho (&quot;&lt;purple&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  end
end

function aeq.echoType(type)
  local value = type

  if value ~= nil or value ~= &quot;&quot; then
    if value == &quot;B&quot; and aeq.th == 0 then
      echo(&quot; &quot; .. &quot;b&quot; .. &quot; &quot;)
    else
      echo(&quot; &quot; .. value .. &quot; &quot;)
    end
  else
    echo(&quot; - &quot;)
  end
end

function aeq.echoArmor(armor)
  local value = armor
  --local spc = &quot;     &quot;
  --local balanceStr = string.cut(balance .. &quot;    &quot; , 2)
  if value == -1 then
    echo(&quot; n/a &quot;)
    return
  end

  local str = string.format(&quot;%+5s&quot;, tostring(value) .. &quot;/12&quot;)

  if value &lt; 2 then
    cecho(&quot;&lt;red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 4 then
    cecho(&quot;&lt;orange_red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 6 then
    cecho (&quot;&lt;orange&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 8 then
    cecho (&quot;&lt;yellow&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 10 then
    cecho (&quot;&lt;PaleGreen&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  elseif value &lt; 12 then
    cecho (&quot;&lt;green&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  else
    cecho (&quot;&lt;purple&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
  end
end

function aeq.echoState(state)
  local value = state
  --local spc = &quot;     &quot;
  --local balanceStr = string.cut(balance .. &quot;    &quot; , 2)
  if value == -1 then
    echo(&quot;n/a&quot;)
    return
  end


  local state = aeq.state  
  if aeq.armType == &quot;bron&quot; then
    local str = string.format(&quot;%+3s&quot;, tostring(value) .. &quot;/7&quot;)

    if value == 1 then
      cecho(&quot;&lt;firebrick&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 2 then
      cecho(&quot;&lt;red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 3 then
      cecho(&quot;&lt;orange_red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 4 then
      cecho(&quot;&lt;orange&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 5 then
      cecho(&quot;&lt;yellow&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 6 then
      cecho(&quot;&lt;PaleGreen&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 7 then
      cecho(&quot;&lt;green&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    else
      echo(&quot;n/a&quot;)  
    end 
  else
    local str = string.format(&quot;%3s&quot;, tostring(value) .. &quot;/5&quot;)

    if value == 1 then
      cecho(&quot;&lt;firebrick&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 2 then
      cecho(&quot;&lt;red&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 3 then
      cecho(&quot;&lt;yellow&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 4 then
      cecho(&quot;&lt;PaleGreen&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    elseif value == 5 then
      cecho(&quot;&lt;green&gt;&quot; .. str .. &quot;&lt;reset&gt;&quot;)
    else
      echo(&quot;n/a&quot;)  
    end 
  end
end

function aeq.echoSilver(silver)
  local value = silver

  if silver == &quot;Ag&quot; then
    cecho(&quot;&lt;LightSlateGrey&gt;&quot; .. silver .. &quot;&lt;reset&gt;&quot;)
  else
    echo(&quot;no&quot;)
  end
end

function aeq.echoDmgType(silver)
  if aeq.wpnPiercing == false and aeq.wpnSlashing == false and aeq.wpnBlunt == false then
    echo(&quot; n/a &quot;)
    return
  end

  echo(&quot; &quot;)

  if aeq.wpnPiercing == true then
    echo(&quot;k&quot;)
  else
    echo(&quot;-&quot;)
  end

  if aeq.wpnSlashing == true then
    echo(&quot;c&quot;)
  else
    echo(&quot;-&quot;)
  end

  if aeq.wpnBlunt == true then
    echo(&quot;o&quot;)
  else
    echo(&quot;-&quot;)
  end

  echo(&quot; &quot;)

 aeq.wpnPiercing = false
  aeq.wpnSlashing = false
  aeq.wpnBlunt = false

end

function aeq.echoNumerical(numerical)
  local value = numerical
  local str = string.format(&quot;%+4s&quot;, tostring(value))
  echo(str)
end

function aeq.drawTopBorder(width)
  echo(&quot;|&quot;)
  for i=1,width do echo(&quot;_&quot;) end
end

function aeq.drawChar(char, times)
  for i=1,times do echo(char) end

--string.cut

end

function aeq.deleteLine()
  --if aeq.val ~= -1 and
  
  if (__IS_ASSESS_LINE_DELETE__ == true) and (__IS_ASSESS_DELETING__  == true) then    
    deleteLine()    
  end
  --if __IS_ASSESS_DELETING__  == false then cecho(&quot;&lt;red&gt;False!\n&quot;) else cecho(&quot;&lt;green&gt;True!\n&quot;) end
end

function aeq.reset()

  __IS_ASSESS_DELETING__  = false


  aeq.name = &quot;&quot;

  aeq.state = &quot;&quot;
  aeq.balance = &quot;&quot;
  aeq.eff = &quot;&quot;

  aeq.armType = &quot;&quot;
  aeq.piercing = &quot;&quot;
  aeq.slashing = &quot;&quot;
  aeq.blunt = &quot;&quot;

  aeq.parry = &quot;&quot;

  aeq.ag = &quot;Fe&quot;

  aeq.wg = -1
  aeq.vol = -1
  aeq.val = -1

  aeq.th = 0

  aeq.wpnPiercing = false
  aeq.wpnSlashing = false
  aeq.wpnBlunt = false

end

function aeq.printAll()
  aeq.drawTable()
  aeq.reset()  
  return
end

function aeq.printSeparateValues()
  echo(&quot;\n&quot;)
  aeq.drawTable()
  echo(&quot;\n&quot;)
  echo(&quot;Name = &quot; .. aeq.name .. &quot;\n&quot;)

  echo(&quot;State = &quot; .. aeq.state .. &quot;\n&quot;)
  echo(&quot;Balance = &quot; .. aeq.balance .. &quot;\n&quot;)
  echo(&quot;Effectiveness = &quot; .. aeq.eff .. &quot;\n&quot;)

  echo(&quot;Armor type = &quot; .. aeq.armType .. &quot;\n&quot;)
  echo(&quot;Piercing = &quot; .. aeq.piercing .. &quot;\n&quot;)
  echo(&quot;Slashing = &quot; .. aeq.slashing .. &quot;\n&quot;)
  echo(&quot;Blunt = &quot; .. aeq.blunt .. &quot;\n&quot;)

  echo(&quot;Parry = &quot; .. aeq.parry .. &quot;\n&quot;)

  echo(&quot;Weight = &quot; .. aeq.wg .. &quot;\n&quot;)
  echo(&quot;Volume = &quot; .. aeq.vol .. &quot;\n&quot;)
  echo(&quot;Value = &quot; .. aeq.val .. &quot;\n&quot;)


  if table.contains(aeq.armorTable, aeq.piercing) then
    echo(&quot;Piercing val = &quot; .. aeq.armorTable[aeq.piercing] .. &quot;\n&quot;)
  end

  return
end</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Globals</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>reconnected</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

function onConnect()

  -- Following
  __IS_FOLLOWING__ = false
  __FOLLOWING_DIR__ = nil

  -- Chasing
  __IS_CHASING__ = false
  __CHASING_NAME__ = nil
  __CHASING_DIR__ = nil

  -- Assess deleteLine
  __IS_OCW_ACTIVE__ = false
  __IS_ASSESS_LINE_DELETE__ = false
  __IS_ASSESS_DELETING__  = false

  --new mapper
  __IS_MAPPING_ON__ = false

-- mapper
  __IS_DEBUG_ON__ = false
  __IS_MAPPER_MODE_ON__ = false
  __IS_CONNECT_KNOWN_GMCP_ONLY__ = false
  __IS_ROUTES_FEEDBACK__ = true
  __IS_ROUTES_ON__ = true

  __CURRENT_AREA_ID__ = nil
  __CURRENT_ROOM_ID__ = nil
  __LAST_ROOM_ID__ = nil     -- last added/visited room id
  __LAST_AREA_ID__ = nil     -- last added/visited area
  __IS_MAPPING_MODE_ON__ = false
  __IS_TRACKING_ON__ = true

  __LAST_AREA_ID__ = nil
  __LAST_KNOWN_ROOM__ = nil
  __LAST_ROOM_ID__ = nil
  __LAST_ROOM_EXITS__ = nil
  __CURRENT_ROOM_ID__ = nil
--__LAST_COMMAND__ = nil
  __LAST_MOVE_COMMAND__ = nil

  __LAST_POS_X__ = nil
  __LAST_POS_Y__ = nil
  __LAST_POS_Z__ = nil

  __AREA_WIDTH_OFFSET__ = 120
  __AREA_SIZE__ = 2

  __CMD_LIST__ = nil --List.new() -- commands within one location
  __MOVE_CMD_LIST__ = nil --List.new()
  __TMP_MOVE_CMD_LIST__ = nil
  __MOVEMENT_QUEUED__ = 0

  __CURRENT_ENV_COLOR__ = nil
  __IS_PAINTING_ON__ = false

  __IS_GO_ACTIVATED__ = false

  __IS_CONNECTING_STUBS__ = false -- if true, stubs are automatically connected, which may cause wrong paths

  __IS_KEYS_ACTIVATED__ = false
end</script>
                    <eventHandlerList>
                        <string>onConnect</string>
                    </eventHandlerList>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>globals</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
math.randomseed( os.time() )

-- Following
__IS_FOLLOWING__ = false
__FOLLOWING_DIR__ = nil

-- Chasing
__IS_CHASING__ = false
__CHASING_NAME__ = nil
__CHASING_DIR__ = nil

-- Assess deleteLine
__IS_OCW_ACTIVE__ = false
__IS_ASSESS_LINE_DELETE__ = false
__IS_ASSESS_DELETING__  = false

--new mapper
__IS_MAPPING_ON__ = false

-- mapper
__IS_DEBUG_ON__ = false
__IS_MAPPER_MODE_ON__ = false
__IS_CONNECT_KNOWN_GMCP_ONLY__ = false
__IS_ROUTES_FEEDBACK__ = true
__IS_ROUTES_ON__ = true

__CURRENT_AREA_ID__ = nil
__CURRENT_ROOM_ID__ = nil
__LAST_ROOM_ID__ = nil     -- last added/visited room id
__LAST_AREA_ID__ = nil     -- last added/visited area
__IS_MAPPING_MODE_ON__ = false
__IS_TRACKING_ON__ = true

__LAST_AREA_ID__ = nil
__LAST_KNOWN_ROOM__ = nil
__LAST_ROOM_ID__ = nil
__LAST_ROOM_EXITS__ = nil
__CURRENT_ROOM_ID__ = nil
--__LAST_COMMAND__ = nil
__LAST_MOVE_COMMAND__ = nil

__LAST_POS_X__ = nil
__LAST_POS_Y__ = nil
__LAST_POS_Z__ = nil

__AREA_WIDTH_OFFSET__ = 120
__AREA_SIZE__ = 2

__CMD_LIST__ = nil --List.new() -- commands within one location
__MOVE_CMD_LIST__ = nil --List.new()
__TMP_MOVE_CMD_LIST__ = nil
__MOVEMENT_QUEUED__ = 0

__CURRENT_ENV_COLOR__ = nil
__IS_PAINTING_ON__ = false

__IS_GO_ACTIVATED__ = false

__IS_CONNECTING_STUBS__ = false -- if true, stubs are automatically connected, which may cause wrong paths

__IS_KEYS_ACTIVATED__ = false





--mining
math.random()
math.random()
math.random()

__IS_MINING_ON__ = false
__IS__STOP__TRIGGER_ACTIVE__ = true
__IS__STOP_FATIGUE_TRIGGER_ACTIVE__ = true
__MINING_TRIGGER_RANDOM__ = math.random (51,225) * 0.01 -- 0.5 to 2s

__IS__MINING__FATIGUE__STOP__ = false
__IS__MINING_BEEP_FATIGUE__STOP__ = true

--fishing
__IS_FISHING_ON__ = false
__IS_FISHING_TRIGGER_ACTIVE__ = true

--container
__CONTAINER_CO__ = &quot;swoj plecak&quot;
__CONTAINER__CZEGO__ = &quot;swojego plecaka&quot;</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>globalFunctions</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

globalFunctions = globalFunctions or {}

function globalFunctions.deleteWhiteSpaces(str)
  str = string.gsub(str, &quot;%s+&quot;, &quot;_&quot;)
  return str
end

function globalFunctions.liczby(s)
        a = utils.split (s, &quot; &quot;)
        sum = 0
        for k, t in pairs (a) do
        if t == &quot;jedno&quot; then w=1
        elseif t == &quot;jednej&quot; then w=1
        elseif t == &quot;jedna&quot; then w=1
        elseif t == &quot;jednego&quot; then w=1
        elseif t == &quot;pierwsza&quot; then w=1
        elseif t == &quot;pierwszy&quot; then w=1
        elseif t == &quot;dwa&quot; then w=2
        elseif t == &quot;dwie&quot; then w=2
        elseif t == &quot;druga&quot; then w=2
        elseif t == &quot;drugi&quot; then w=2
        elseif t == &quot;dwoch&quot; then w=2
        elseif t == &quot;trzy&quot; then w=3
        elseif t == &quot;trzech&quot; then w=3
        elseif t == &quot;trzeci&quot; then w=3
        elseif t == &quot;trzecia&quot; then w=3
        elseif t == &quot;cztery&quot; then w=4
        elseif t == &quot;czterech&quot; then w=4
        elseif t == &quot;czwarta&quot; then w=4
        elseif t == &quot;czwarty&quot; then w=4
        elseif t == &quot;piec&quot; then w=5
        elseif t == &quot;pieciu&quot; then w=5
        elseif t == &quot;piata&quot; then w=5
        elseif t == &quot;piaty&quot; then w=5
        elseif t == &quot;szesc&quot; then w=6
        elseif t == &quot;szesciu&quot; then w=6
        elseif t == &quot;szosta&quot; then w=6
        elseif t == &quot;szosty&quot; then w=6
        elseif t == &quot;siedem&quot; then w=7
        elseif t == &quot;siedmiu&quot; then w=7
        elseif t == &quot;siodma&quot; then w=7
        elseif t == &quot;siodmy&quot; then w=7
        elseif t == &quot;osiem&quot; then w=8
        elseif t == &quot;osmiu&quot; then w=8
        elseif t == &quot;osma&quot; then w=8
        elseif t == &quot;osmy&quot; then w=8
        elseif t == &quot;dziewiec&quot; then w=9
        elseif t == &quot;dziewieciu&quot; then w=9
        elseif t == &quot;dziewiata&quot; then w=9
        elseif t == &quot;dziewiaty&quot; then w=9
        elseif t == &quot;dziesiec&quot; then w=10
        elseif t == &quot;dziesieciu&quot; then w=10
        elseif t == &quot;dziesiata&quot; then w=10
        elseif t == &quot;dziesiaty&quot; then w=10
        elseif t == &quot;jedenascie&quot; then w=11
        elseif t == &quot;jedenasta&quot; then w=11
        elseif t == &quot;jedenasty&quot; then w=11
        elseif t == &quot;dwanascie&quot; then w=12
        elseif t == &quot;dwunasta&quot; then w=12
        elseif t == &quot;dwunasty&quot; then w=12
        elseif t == &quot;trzynascie&quot; then w=13
        elseif t == &quot;trzynasta&quot; then w=13
        elseif t == &quot;trzynasty&quot; then w=13
        elseif t == &quot;czternascie&quot; then w=14
        elseif t == &quot;czternasta&quot; then w=14
        elseif t == &quot;czternasty&quot; then w=14
        elseif t == &quot;pietnascie&quot; then w=15
        elseif t == &quot;pietnasta&quot; then w=15
        elseif t == &quot;pietnasty&quot; then w=15
        elseif t == &quot;szesnascie&quot; then w=16
        elseif t == &quot;szesnasta&quot; then w=16
        elseif t == &quot;szesnasty&quot; then w=16
        elseif t == &quot;siedemnascie&quot; then w=17
        elseif t == &quot;siedemnasta&quot; then w=17
        elseif t == &quot;siedemnasty&quot; then w=17
        elseif t == &quot;osiemnascie&quot; then w=18
        elseif t == &quot;osiemnasta&quot; then w=18
        elseif t == &quot;osiemnasty&quot; then w=18
        elseif t == &quot;dziewietnascie&quot; then w=19
        elseif t == &quot;dziewietnasta&quot; then w=19
        elseif t == &quot;dziewietnasty&quot; then w=19
        elseif t == &quot;dwadziescia&quot; then w=20
        elseif t == &quot;dwudziesta&quot; then w=20
        elseif t == &quot;dwudziesty&quot; then w=20
        elseif t == &quot;trzydziesta&quot; then w=30
        elseif t == &quot;trzydziesty&quot; then w=30
        elseif t == &quot;czterdziesta&quot; then w=40
        elseif t == &quot;piecdziesiata&quot; then w=50
        elseif t == &quot;szescdziesiata&quot; then w=60
        elseif t == &quot;siedemdziesiata&quot; then w=70
        elseif t == &quot;osiemdziesiata&quot; then w=80
        elseif t == &quot;dziewiecdziesiata&quot; then w=90
        else w=0
        end
        sum = sum + w
end
        return sum
end -- of liczby

</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>arkMath</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

arkMath = arkMath or {}

function arkMath.round(num, idp)
  local mult = 10^(idp or 0)
  return math.floor(num * mult + 0.5) / mult
end</script>
                    <eventHandlerList/>
                </Script>
                <Script isActive="yes" isFolder="no">
                    <name>scabbardScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

scabbard = scabbard or {}

-- 0 - miecz i tarcza
-- 1 - dwie bronie
scabbard.prof = 1

scabbard.oneCo = &quot;pierwsza pochwa&quot;
scabbard.oneCzego = &quot;pierwszej pochwy&quot;

scabbard.twoCo = &quot;druga pochwa&quot;
scabbard.twoCzego = &quot;drugiej pochwy&quot;

scabbard.threeCo = &quot;trzecia pochwa&quot;
scabbard.threeCzego = &quot;trzeciej pochwy&quot;


function scabbard.draw()
  if scabbard.prof == 0 then
    send(&quot;podobadz broni z &quot; .. scabbard.oneCzego)
  elseif scabbard.prof == 1 then
    send(&quot;powyjmij bron z &quot; .. scabbard.twoCzego)
    send(&quot;powyjmij bron z &quot; .. scabbard.oneCzego)

    send(&quot;dobadz broni&quot;)
    send(&quot;dobadz drugiej broni druga reka&quot;)
  end
end



function scabbard.sheath()
  if scabbard.prof == 0 then
    send(&quot;poschowaj bron do &quot; .. scabbard.oneCzego)
  elseif scabbard.prof == 1 then
    send(&quot;poschowaj bron do &quot; .. scabbard.oneCzego)
    send(&quot;poschowaj bron do &quot; .. scabbard.twoCzego)
  end
end


</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Time</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>watches</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
watches = watches or {}

--watches.herbsWatch = watches.herbsWatch or createStopWatch()
--startStopWatch(watches.herbsWatch)

watches.progressWatch = watches.progressWatch or createStopWatch()
startStopWatch(watches.progressWatch)</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Herbs_Usable</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>herbsUsableScript</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

herbsUsable = herbsUsable or {}

herbsUsable.attacked = false
herbsUsable.recovered = true

function herbsUsableScript()
  if herbsUsable.attacked == true then
    tempTimer(3, [[herbsUsable.echoTimer()]])
  end
  herbsUsable.attacked = false
end

function herbsUsable.echoTimer()
  if herbsUsable.attacked == false then
  setFgColor(170, 255, 0)
    echo(&quot;[Herbs usable]\n&quot;)
  resetFormat()
  end
end

</script>
                    <eventHandlerList>
                        <string>gmcp.room.info</string>
                    </eventHandlerList>
                </Script>
            </ScriptGroup>
            <ScriptGroup isActive="yes" isFolder="yes">
                <name>Magic_Items</name>
                <packageName></packageName>
                <script>-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------
</script>
                <eventHandlerList/>
                <Script isActive="yes" isFolder="no">
                    <name>magicItemsData</name>
                    <packageName></packageName>
                    <script>-- Copyright 2015 Filip Cyrus Bober.

-------------------------------------------------
--         Put your Lua functions here.        --
--                                             --
-- Note that you can also use external Scripts --
-------------------------------------------------

magicItems = magicItems or {}

magicItems.itemsTable = {
  &quot;szkarlatny ciernisty pierscien&quot;,
  &quot;ciezki krwisty amulet&quot;,
  &quot;opalizujacy runiczny topor obosieczny&quot;,
  &quot;masywny wyszczerbiony tasak&quot;,
  &quot;misterny obosieczny topor&quot;,
  &quot;kosciany kilof&quot;,
  &quot;niebieskawa zdobiona bulawa&quot;,
  &quot;niebieskawa zdobiona bulawe&quot;,
  &quot;czarnoblekitny pulsujacy morgenstern&quot;,
  &quot;misterny kruczoczarny miecz&quot;,
  &quot;polyskliwy smukly espadon&quot;,
  &quot;dwureczny adamantytowy mlot bojowy&quot;,
  &quot;zdobiony jasniejacy mlot bojowy&quot;,
  &quot;srebrzysta kosa bojowa&quot;,
  &quot;srebrzysta kose bojowa&quot;,
  &quot;lodowy lsniacy sztylet&quot;,
  &quot;zdobiony dlugi lewak&quot;,
  &quot;antyczny zdobiony sztylet&quot;,
  &quot;lsniaca plomienista tarcza&quot;,
  &quot;lsniaca plomienista tarcze&quot;,
  &quot;stary matowy pancerz&quot;,
  &quot;strzelisty zasniedzialy helm&quot;,
  &quot;dluga czarna szata&quot;,
  &quot;dluga czarna szate&quot;,
  &quot;starozytna zbroja plytowa pokryta runami&quot;,
  &quot;starozytna zbroje plytowa pokryta runami&quot;,
  &quot;ciezki krwisty amulet&quot;,
  &quot;czerwony zakrwawiony pierscien&quot;,
  &quot;zdobiony ciezki pas&quot;,
  &quot;niewielki zmatowialy pierscien&quot;,
  &quot;ciemna owalna  maska&quot;,
  &quot;ciemna owalna  maske&quot;,
  &quot;lsniacy krysztalowy wisior&quot;,
  &quot;szmaragdowozielony misterny plaszcz spiety mithrylowa brosza&quot;,
  &quot;lekka lsniaca para bransolet&quot;,
  &quot;lekka lsniaca pare bransolet&quot;,
  &quot;ozdobny skorzany plecak&quot;,
  &quot;masywny oksydowany pas&quot;,
  &quot;kunsztowny mithrylowy topor bojowy&quot;,
  &quot;gwiezdny topor&quot;,
  &quot;jasniejacy niebieskim swiatlem topor&quot;,
  &quot;dwureczny krysztalowy korbacz&quot;,
  &quot;poszczerbiony obureczny miecz&quot;,
  &quot;waski kunsztowny sihill&quot;,
  &quot;gigantyczny granitowy mlot&quot;,
  &quot;wielki runiczny mlot wojenny&quot;,
  &quot;adamantytowa szpiczasta partyzana&quot;,
  &quot;adamantytowa szpiczasta partyzane&quot;,
  &quot;ogromny ognisty trojzab&quot;,
  &quot;snieznobialy lsniacy sztylet&quot;,
  &quot;snieznobiala luskowa kolczuga&quot;,
  &quot;snieznobiala luskowa kolczuge&quot;,
  &quot;czerwona skrzydlata para nareczakow&quot;,
  &quot;czerwona skrzydlata pare nareczakow&quot;,
  &quot;mithrylowa mahakamska kolczuga&quot;,
  &quot;mithrylowa mahakamska kolczuge&quot;,
  &quot;czarny zdobiony helm&quot;,
  &quot;kruczoczarny dlugi plaszcz&quot;,
  &quot;gruby zlocisty pierscien z hiacyntem&quot;,
  &quot;dluga krasnoludzka bajdana&quot;,
  &quot;dluga krasnoludzka bajdane&quot;,
  &quot;kunsztowny lekki pancerz&quot;,
  &quot;kruczoczarny dlugi pas&quot;,
  &quot;czarny zdobiony amulet&quot;,
  &quot;azurowy koscistobialy amulet&quot;,
  &quot;zdobiony zloty pierscien&quot;,
  &quot;niepozorny barwny pierscien&quot;,
  &quot;zdobiony haftowany sztandar&quot;,
  &quot;czarny blyszczacy kolczyk&quot;,
  &quot;szkarlatny dlugiego talwara&quot;,
  &quot;gorejacy dlugi talwar&quot;,
}

</script>
                    <eventHandlerList/>
                </Script>
            </ScriptGroup>
        </ScriptGroup>
    </ScriptPackage>
    <KeyPackage>
        <KeyGroup isActive="yes" isFolder="yes">
            <name>v126</name>
            <packageName>v126</packageName>
            <script></script>
            <command></command>
            <keyCode>0</keyCode>
            <keyModifier>0</keyModifier>
            <Key isActive="yes" isFolder="no">
                <name>Echo</name>
                <packageName></packageName>
                <script>echo(&quot;Echo initiated:\n&quot;);
echo(&quot;Mudlet home dir = &quot; .. getMudletHomeDir() .. &quot;\n&quot;)

echo(&quot;Sending GMCP.state&quot;)
sendGMCP(&quot;char.state&quot;); send(&quot;\n&quot;)

echo(&quot;GMCP bgn\n&quot;)
display(gmcp)
echo(&quot;GMCP end\n&quot;)

echo(&quot;Data: &quot;)

echo(&quot;Sending GMCP.state&quot;)
sendGMCP(&quot;char.state&quot;); send(&quot;\n&quot;)

echo(&quot;Race: &quot; .. gmcp.char.info.race .. &quot;\n&quot;)
display(gmcp.char.state)

echo(&quot;\n\nChar State:\n&quot;)
echo(&quot;improve: &quot; .. gmcp.char.state.improve .. &quot;\n&quot;)
echo(&quot;intox: &quot; .. gmcp.char.state.intox .. &quot;\n&quot;)
echo(&quot;headache: &quot; .. gmcp.char.state.headache .. &quot;\n&quot;)
echo(&quot;panic: &quot; .. gmcp.char.state.panic .. &quot;\n&quot;)
echo(&quot;mana: &quot; .. gmcp.char.state.mana .. &quot;\n&quot;)
echo(&quot;hp: &quot; .. gmcp.char.state.hp .. &quot;\n&quot;)
echo(&quot;fatigue: &quot; .. gmcp.char.state.fatigue .. &quot;\n&quot;)
echo(&quot;soaked: &quot; .. gmcp.char.state.soaked .. &quot;\n&quot;)
echo(&quot;encumberance : &quot; .. gmcp.char.state.encumberance  .. &quot;\n&quot;)
echo(&quot;stuffed: &quot; .. gmcp.char.state.stuffed .. &quot;\n&quot;)
echo(&quot;Data end\n&quot;)

echo(&quot;\n\nExits\n&quot;)
display(gmcp.room.info.exits)
echo(&quot;Exits end\n&quot;)</script>
                <command></command>
                <keyCode>69</keyCode>
                <keyModifier>67108864</keyModifier>
            </Key>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>NumPad</name>
                <packageName>NumPad</packageName>
                <script></script>
                <command></command>
                <keyCode>7471215</keyCode>
                <keyModifier>6881396</keyModifier>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>Movement</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="yes" isFolder="no">
                        <name>Southwest</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;sw&quot;

local dir = &quot;sw&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>49</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>South</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;s&quot;

local dir = &quot;s&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>50</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Southeast</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;se&quot;

local dir = &quot;se&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>51</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>West</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;w&quot;

local dir = &quot;w&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>52</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Look</name>
                        <packageName></packageName>
                        <script></script>
                        <command>sp</command>
                        <keyCode>53</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>East</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;e&quot;

local dir = &quot;e&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>54</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Northwest</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;nw&quot;

local dir = &quot;nw&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>55</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>North</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;n&quot;

local dir = &quot;n&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>56</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Northeast</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;ne&quot;

local dir = &quot;ne&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>57</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>In</name>
                        <packageName></packageName>
                        <script>local dir = &quot;wejscie&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>47</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Out</name>
                        <packageName></packageName>
                        <script>local dir = &quot;wyjscie&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>42</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Up</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;gora&quot;

local dir = &quot;gora&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>45</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>Down</name>
                        <packageName></packageName>
                        <script>lastMoveDirection = &quot;dol&quot;

local dir = &quot;dol&quot;

mmp.exitGo(dir)</script>
                        <command></command>
                        <keyCode>43</keyCode>
                        <keyModifier>536870912</keyModifier>
                    </Key>
                </KeyGroup>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>Stealth_Movement</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_southwest</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na poludniowy-zachod</command>
                        <keyCode>49</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_south</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na poludnie</command>
                        <keyCode>50</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_southeast</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na poludniowy-wschod</command>
                        <keyCode>51</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_west</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na zachod</command>
                        <keyCode>52</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_east</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na wschod</command>
                        <keyCode>54</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_northwest</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na polnocny-zachod</command>
                        <keyCode>55</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_north</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na polnoc</command>
                        <keyCode>56</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_northeast</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na polnocny-wschod</command>
                        <keyCode>57</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_up</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na gore</command>
                        <keyCode>45</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_out</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie do wyjscia</command>
                        <keyCode>42</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_down</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie na dol</command>
                        <keyCode>43</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                    <Key isActive="yes" isFolder="no">
                        <name>stealth_in</name>
                        <packageName></packageName>
                        <script></script>
                        <command>przemknij sie do wyjscia</command>
                        <keyCode>47</keyCode>
                        <keyModifier>603979776</keyModifier>
                    </Key>
                </KeyGroup>
            </KeyGroup>
            <Key isActive="yes" isFolder="no">
                <name>MapEcho</name>
                <packageName></packageName>
                <script>echo(&quot;Sending GMCP.state&quot;)
sendGMCP(&quot;char.state&quot;); send(&quot;\n&quot;)

echo(&quot;GMCP bgn\n&quot;)
display(gmcp.room)
echo(&quot;GMCP end\n&quot;)

-- Wielki Plac Targowy Nuln
-- x = 39
-- y = 77
-- name = &quot;Nuln&quot;
-- domain = &quot;Imperium&quot;

mapperOffsets.offsets[&quot;Imperium_Nuln_X&quot;] = 77  
mapperOffsets.offsets[&quot;Imperium_Nuln_Y&quot;] = 39 

local keyX = gmcp.room.info.map.domain .. &quot;_&quot; .. gmcp.room.info.map.name .. &quot;_X&quot;
local keyY = gmcp.room.info.map.domain .. &quot;_&quot; .. gmcp.room.info.map.name .. &quot;_Y&quot;


if mapperOffsets.offsets[keyX] ~= nil then
  echo(&quot;keyX: &quot; .. keyX .. &quot; = &quot; .. mapperOffsets.offsets[keyX] .. &quot;\n&quot;)
  echo(&quot;keyY: &quot; .. keyY .. &quot; = &quot; .. mapperOffsets.offsets[keyY] .. &quot;\n&quot;)
end</script>
                <command></command>
                <keyCode>77</keyCode>
                <keyModifier>67108864</keyModifier>
            </Key>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Utility</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Fishing</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <Key isActive="yes" isFolder="no">
                    <name>zarzuc_wedke</name>
                    <packageName></packageName>
                    <script></script>
                    <command>zarzuc wedke</command>
                    <keyCode>16777273</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>zawies_rybke</name>
                    <packageName></packageName>
                    <script></script>
                    <command>zawies rybke na wedce</command>
                    <keyCode>16777272</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>zatnij_rybe</name>
                    <packageName></packageName>
                    <script></script>
                    <command>zatnij rybe na wedce</command>
                    <keyCode>16777274</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Durbality_Check</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Combat</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <Key isActive="yes" isFolder="no">
                    <name>podobadz_broni</name>
                    <packageName></packageName>
                    <script>scabbard.draw()
</script>
                    <command></command>
                    <keyCode>16777264</keyCode>
                    <keyModifier>0</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>poschowaj_bron</name>
                    <packageName></packageName>
                    <script>scabbard.sheath()</script>
                    <command></command>
                    <keyCode>16777265</keyCode>
                    <keyModifier>0</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>podobadz_drugiej_broni</name>
                    <packageName></packageName>
                    <script>send(&quot;podobadz broni z &quot; .. scabbard.twoCzego)</script>
                    <command></command>
                    <keyCode>16777264</keyCode>
                    <keyModifier>67108864</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>poschowaj_druga_bron</name>
                    <packageName></packageName>
                    <script>send(&quot;poschowaj bron do &quot; .. scabbard.twoCzego)</script>
                    <command></command>
                    <keyCode>16777265</keyCode>
                    <keyModifier>67108864</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>podobadz_trzeciej_broni</name>
                    <packageName></packageName>
                    <script>send(&quot;podobadz broni z &quot; .. scabbard.threeCzego)</script>
                    <command></command>
                    <keyCode>16777264</keyCode>
                    <keyModifier>33554432</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>poschowaj_trzecia_bron</name>
                    <packageName></packageName>
                    <script>send(&quot;poschowaj bron do &quot; .. scabbard.threeCzego)</script>
                    <command></command>
                    <keyCode>16777265</keyCode>
                    <keyModifier>33554432</keyModifier>
                </Key>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Herbs</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <Key isActive="yes" isFolder="no">
                    <name>wloz_ziola_do_w1</name>
                    <packageName></packageName>
                    <script>-- dziurawiec
-- ruta, mniszek, macierzanka
local bagCo = &quot;pierwszy sloik&quot;
local bagKCzego = &quot;pierwszego sloika&quot;

send(&quot;otworz &quot; .. bagCo)
send(&quot;wloz ziola do  &quot; .. bagKCzego)
send(&quot;zamknij &quot; .. bagCo)</script>
                    <command></command>
                    <keyCode>16777268</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>wloz_ziola_do_w2</name>
                    <packageName></packageName>
                    <script>local bagCo = &quot;drugi sloik&quot;
local bagKCzego = &quot;drugiego sloika&quot;

send(&quot;otworz &quot; .. bagCo)
send(&quot;wloz ziola do  &quot; .. bagKCzego)
send(&quot;zamknij &quot; .. bagCo)</script>
                    <command></command>
                    <keyCode>16777269</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>wloz_ziola_do_w3</name>
                    <packageName></packageName>
                    <script>local bagCo = &quot;trzeci sloik&quot;
local bagKCzego = &quot;trzeciego sloika&quot;

send(&quot;otworz &quot; .. bagCo)
send(&quot;wloz ziola do  &quot; .. bagKCzego)
send(&quot;zamknij &quot; .. bagCo)
</script>
                    <command></command>
                    <keyCode>16777270</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>wloz_ziola_do_w4</name>
                    <packageName></packageName>
                    <script>-- inne, cenne

local bagCo = &quot;czwarty woreczek&quot;
local bagKCzego = &quot;czwartego woreczka&quot;

send(&quot;otworz &quot; .. bagCo)
send(&quot;wloz drobne ukwiecone galazki do &quot; .. bagKCzego) -- swietlik
send(&quot;wloz smukle jasnozielone lodygi do &quot; .. bagKCzego) -- centuria
send(&quot;wloz macznistoowlosione szarawe rosliny do &quot; .. bagKCzego) -- komosa
send(&quot;zamknij &quot; .. bagCo)
</script>
                    <command></command>
                    <keyCode>16777271</keyCode>
                    <keyModifier>134217728</keyModifier>
                </Key>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Forma</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <Key isActive="yes" isFolder="no">
                    <name>kondycja</name>
                    <packageName></packageName>
                    <script>send(&quot;+kondycja&quot;)

--send(&quot;otworz pierwszy woreczek&quot;)
--send(&quot;wez trzy lodygi z pierwszego woreczka&quot;)

--send(&quot;opusc bron&quot;)
--send(&quot;rozgryz lodygi&quot;)
--send(&quot;dobadz broni&quot;)

--send(&quot;wloz lodygi do pierwszego woreczka&quot;)
--send(&quot;zamknij pierwszy woreczek&quot;)



</script>
                    <command></command>
                    <keyCode>16777268</keyCode>
                    <keyModifier>0</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>zmeczenie</name>
                    <packageName></packageName>
                    <script>send(&quot;+zmeczenie&quot;)

--send(&quot;otworz drugi woreczek&quot;)
--send(&quot;wez kwiat z drugiego woreczka&quot;)

--send(&quot;opusc bron&quot;)
--send(&quot;zjedz zolty jasny kwiat&quot;)
--send(&quot;dobadz broni&quot;)

--send(&quot;wloz kwiaty do drugiego woreczka&quot;)
--send(&quot;zamknij drugi woreczek&quot;)

</script>
                    <command></command>
                    <keyCode>16777269</keyCode>
                    <keyModifier>0</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>w3_kasztanowiec_przelot</name>
                    <packageName></packageName>
                    <script>send(&quot;otworz trzeci woreczek&quot;)
send(&quot;wez kwiatostan z trzeciego woreczka&quot;)
send(&quot;wez kwiat z trzeciego woreczka&quot;)
send(&quot;zamknij trzeci woreczek&quot;)

send(&quot;opusc bron&quot;)
send(&quot;zjedz kwiatostan&quot;)
send(&quot;sproszkuj kremowy owlosiony ususzony kwiat&quot;)
send(&quot;dobadz broni&quot;)</script>
                    <command></command>
                    <keyCode>16777270</keyCode>
                    <keyModifier>0</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>w2_w3_f4_panic</name>
                    <packageName></packageName>
                    <script>send(&quot;opusc bron&quot;)

send(&quot;otworz pierwszy woreczek&quot;)
send(&quot;wez dwie lodygi z pierwszego woreczka&quot;)

send(&quot;otworz drugi woreczek&quot;)
send(&quot;wez kwiat z drugiego woreczka&quot;)

send(&quot;otworz trzeci woreczek&quot;)
send(&quot;wez kwiatostan z trzeciego woreczka&quot;)
send(&quot;wez kwiat z trzeciego woreczka&quot;)

send(&quot;zjedz kwiatostan&quot;) -- kasztanowiec
send(&quot;sproszkuj kremowy owlosiony ususzony kwiat&quot;) -- przelot

send(&quot;zjedz zolty jasny kwiat kwiat&quot;)  -- deliona

send(&quot;rozgryz lodyge&quot;)
send(&quot;rozgryz lodyge&quot;)


send(&quot;zamknij pierwszy woreczek&quot;)
send(&quot;zamknij drugi woreczek&quot;)
send(&quot;zamknij trzeci woreczek&quot;)
send(&quot;dobadz broni&quot;)</script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                </Key>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Chasing</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <Key isActive="yes" isFolder="no">
                    <name>chase_last_fled</name>
                    <packageName></packageName>
                    <script>if __IS_CHASING__ == false then 
  return
end

local dir = __CHASING__DIR__


if dir == &quot;wyjscia&quot; then 
  send(&quot;wyjscie&quot;)
elseif dir == &quot;gore&quot; then
  send(&quot;gora&quot;)
else
  send(dir)
end

__IS_CHASING__ = false

</script>
                    <command></command>
                    <keyCode>48</keyCode>
                    <keyModifier>536870912</keyModifier>
                </Key>
                <Key isActive="yes" isFolder="no">
                    <name>follow_last_fled</name>
                    <packageName></packageName>
                    <script>if __IS_FOLLOWING__ == false then 
  return
end

local dir = __FOLLOWING_DIR__


if dir == &quot;wyjscia&quot; then 
  send(&quot;wyjscie&quot;)
elseif dir == &quot;gore&quot; then
  send(&quot;gora&quot;)
elseif dir == &quot;polnoc&quot; then
  send(&quot;n&quot;)
elseif dir == &quot;polnocny-wschod&quot; then
  send(&quot;ne&quot;)
elseif dir == &quot;wschod&quot; then
  send(&quot;e&quot;)
elseif dir == &quot;poludniowy-wschod&quot; then
  send(&quot;se&quot;)
elseif dir == &quot;poludnie&quot; then
  send(&quot;s&quot;)
elseif dir == &quot;poludniowy-zachod&quot; then
  send(&quot;sw&quot;)
elseif dir == &quot;zachod&quot; then
  send(&quot;w&quot;)
elseif dir == &quot;polnocny-zachod&quot; then
  send(&quot;nw&quot;)
else
  send(dir)
end

__IS_FOLLOWING__ = false</script>
                    <command></command>
                    <keyCode>48</keyCode>
                    <keyModifier>603979776</keyModifier>
                </Key>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>Mining</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
            </KeyGroup>
            <KeyGroup isActive="yes" isFolder="yes">
                <name>F_Keys</name>
                <packageName></packageName>
                <script></script>
                <command></command>
                <keyCode>-1</keyCode>
                <keyModifier>-1</keyModifier>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>Pure</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F1</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F5</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F9</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                        <Key isActive="yes" isFolder="no">
                            <name>przestan</name>
                            <packageName></packageName>
                            <script>send(&quot;przestan&quot;)
send(&quot;przestan atakowac&quot;)

</script>
                            <command></command>
                            <keyCode>16777272</keyCode>
                            <keyModifier>0</keyModifier>
                        </Key>
                        <Key isActive="yes" isFolder="no">
                            <name>napelnij_lampe</name>
                            <packageName></packageName>
                            <script></script>
                            <command>napelnij lampe butelka</command>
                            <keyCode>16777273</keyCode>
                            <keyModifier>0</keyModifier>
                        </Key>
                    </KeyGroup>
                </KeyGroup>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>Ctrl</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F1</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F5</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F9</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                        <Key isActive="yes" isFolder="no">
                            <name>wez_monety_z sakiewki</name>
                            <packageName></packageName>
                            <script>send(&quot;otworz swoja sakiewke&quot;)
send(&quot;wez monety ze swojej sakiewki&quot;)
send(&quot;zamknij swoja sakiewke&quot;)
</script>
                            <command></command>
                            <keyCode>16777272</keyCode>
                            <keyModifier>67108864</keyModifier>
                        </Key>
                        <Key isActive="yes" isFolder="no">
                            <name>wloz_monety_do_sakiewki</name>
                            <packageName></packageName>
                            <script>send(&quot;otworz swoja sakiewke&quot;)
send(&quot;wloz monety do swojej sakiewki&quot;)
send(&quot;zamknij swoja sakiewke&quot;)</script>
                            <command></command>
                            <keyCode>16777273</keyCode>
                            <keyModifier>67108864</keyModifier>
                        </Key>
                        <Key isActive="yes" isFolder="no">
                            <name>weapon_n_armor_check</name>
                            <packageName></packageName>
                            <script>send(&quot;ob zalozone zbroje&quot;)
send(&quot;ob dobyte bronie&quot;)

</script>
                            <command></command>
                            <keyCode>16777275</keyCode>
                            <keyModifier>67108864</keyModifier>
                        </Key>
                    </KeyGroup>
                </KeyGroup>
                <KeyGroup isActive="yes" isFolder="yes">
                    <name>Alt</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F1</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F5</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                    <KeyGroup isActive="yes" isFolder="yes">
                        <name>F9</name>
                        <packageName></packageName>
                        <script></script>
                        <command></command>
                        <keyCode>-1</keyCode>
                        <keyModifier>-1</keyModifier>
                    </KeyGroup>
                </KeyGroup>
                <KeyGroup isActive="no" isFolder="yes">
                    <name>Unassigned</name>
                    <packageName></packageName>
                    <script></script>
                    <command></command>
                    <keyCode>-1</keyCode>
                    <keyModifier>-1</keyModifier>
                    <Key isActive="no" isFolder="no">
                        <name>przestan_przelot</name>
                        <packageName></packageName>
                        <script>send(&quot;przestan&quot;)
send(&quot;przestan atakowac&quot;)

--if __IS_MINING_ON__ == true then
send(&quot;otworz trzeci woreczek&quot;)
send(&quot;wez kwiat z trzeciego woreczka&quot;)

send(&quot;opusc bron&quot;)
send(&quot;sproszkuj kremowy owlosiony ususzony kwiat&quot;)
send(&quot;dobadz broni&quot;)

send(&quot;zamknij trzeci woreczek&quot;)
--end</script>
                        <command></command>
                        <keyCode>16777275</keyCode>
                        <keyModifier>0</keyModifier>
                    </Key>
                </KeyGroup>
            </KeyGroup>
        </KeyGroup>
    </KeyPackage>
</MudletPackage>
